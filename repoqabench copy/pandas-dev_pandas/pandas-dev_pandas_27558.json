{
  "repo_name": "pandas-dev_pandas",
  "issue_id": "27558",
  "issue_description": "# DOC: Unable to import pandas on python 3.5.2\n\n#### Code Sample, a copy-pastable example if possible\r\n\r\n```python\r\nimport pandas\r\n```\r\n#### Problem description\r\n\r\nAlthough it seems like a typing issue pandas is still affected, error:\r\n```\r\nroot@ae9a5374fe6d:/buildbot# python -c \"import pandas\"\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/usr/local/lib/python3.5/dist-packages/pandas/__init__.py\", line 55, in <module>\r\n    from pandas.core.api import (\r\n  File \"/usr/local/lib/python3.5/dist-packages/pandas/core/api.py\", line 5, in <module>\r\n    from pandas.core.arrays.integer import (\r\n  File \"/usr/local/lib/python3.5/dist-packages/pandas/core/arrays/__init__.py\", line 1, in <module>\r\n    from .array_ import array  # noqa: F401\r\n  File \"/usr/local/lib/python3.5/dist-packages/pandas/core/arrays/array_.py\", line 7, in <module>\r\n    from pandas.core.dtypes.common import (\r\n  File \"/usr/local/lib/python3.5/dist-packages/pandas/core/dtypes/common.py\", line 11, in <module>\r\n    from pandas.core.dtypes.dtypes import (\r\n  File \"/usr/local/lib/python3.5/dist-packages/pandas/core/dtypes/dtypes.py\", line 53, in <module>\r\n    class Registry:\r\n  File \"/usr/local/lib/python3.5/dist-packages/pandas/core/dtypes/dtypes.py\", line 84, in Registry\r\n    self, dtype: Union[Type[ExtensionDtype], str]\r\n  File \"/usr/lib/python3.5/typing.py\", line 552, in __getitem__\r\n    dict(self.__dict__), parameters, _root=True)\r\n  File \"/usr/lib/python3.5/typing.py\", line 512, in __new__\r\n    for t2 in all_params - {t1} if not isinstance(t2, TypeVar)):\r\n  File \"/usr/lib/python3.5/typing.py\", line 512, in <genexpr>\r\n    for t2 in all_params - {t1} if not isinstance(t2, TypeVar)):\r\n  File \"/usr/lib/python3.5/typing.py\", line 1077, in __subclasscheck__\r\n    if super().__subclasscheck__(cls):\r\n  File \"/usr/lib/python3.5/abc.py\", line 225, in __subclasscheck__\r\n    for scls in cls.__subclasses__():\r\nTypeError: descriptor '__subclasses__' of 'type' object needs an argument\r\n```\r\n\r\nTo reproduce:\r\n```\r\n$ docker pull ursalab/amd64-ubuntu-16.04-python-3:worker\r\n$ docker run -it ursalab/amd64-ubuntu-16.04-python-3:worker bash\r\n# python -c \"import pandas\"\r\n```\r\n\r\n#### Output of ``pip freeze | grep pandas``\r\n\r\n```\r\npandas==0.25.0\r\n```\r\n",
  "issue_comments": [
    {
      "id": 514575643,
      "user": "jreback",
      "body": "3.5.3 is the minimum on 0.25; see the release notes"
    },
    {
      "id": 514576230,
      "user": "kszucs",
      "body": "@jreback Thanks! May I suggest to update the documentation about that https://pandas.pydata.org/pandas-docs/stable/install.html#python-version-support ?"
    },
    {
      "id": 514576915,
      "user": "jreback",
      "body": "yes that needs updating (and removing the 2.7)"
    },
    {
      "id": 515882263,
      "user": "jorisvandenbossche",
      "body": "@kszucs how is pandas being installed? (I don't directly find this profile in the configuration) \r\nAs normally this should be catched during installation (see discussion i https://github.com/pandas-dev/pandas/pull/27288)"
    },
    {
      "id": 516384557,
      "user": "kszucs",
      "body": "@jorisvandenbossche \r\n\r\n```dockerfile\r\nFROM ubuntu:16.04\r\n\r\nRUN apt-get update -y && \\\r\n    apt-get install -y python3 python3-pip\r\nRUN pip3 install pandas\r\n\r\nCMD python3 -c \"import pandas\"\r\n```\r\n\r\n```bash\r\n$ docker build -t pandas-py35 -f <the-dockerfile-above> .\r\n$ docker run pandas-py35\r\n```"
    },
    {
      "id": 516386925,
      "user": "TomAugspurger",
      "body": "@kszucs that had a warning for me locally\r\n\r\n```\r\nStep 3/4 : RUN pip3 install pandas\r\n ---> Running in 2181656518ff\r\nCollecting pandas\r\n  Downloading https://files.pythonhosted.org/packages/a7/d9/e03b615e973c2733ff8fd53d95bd3633ecbfa81b5af2f83fe39647c02344/pandas-0.25.0-cp35-cp35m-manylinux1_x86_64.whl (10.3MB)\r\nCollecting python-dateutil>=2.6.1 (from pandas)\r\n  Downloading https://files.pythonhosted.org/packages/41/17/c62faccbfbd163c7f57f3844689e3a78bae1f403648a6afb1d0866d87fbb/python_dateutil-2.8.0-py2.py3-none-any.whl (226kB)\r\nCollecting numpy>=1.13.3 (from pandas)\r\n  Downloading https://files.pythonhosted.org/packages/69/25/eef8d362bd216b11e7d005331a3cca3d19b0aa57569bde680070109b745c/numpy-1.17.0-cp35-cp35m-manylinux1_x86_64.whl (20.2MB)\r\nCollecting pytz>=2017.2 (from pandas)\r\n  Downloading https://files.pythonhosted.org/packages/3d/73/fe30c2daaaa0713420d0382b16fbb761409f532c56bdcc514bf7b6262bb6/pytz-2019.1-py2.py3-none-any.whl (510kB)\r\nCollecting six>=1.5 (from python-dateutil>=2.6.1->pandas)\r\n  Downloading https://files.pythonhosted.org/packages/73/fb/00a976f728d0d1fecfe898238ce23f502a721c0ac0ecfedb80e0d88c64e9/six-1.12.0-py2.py3-none-any.whl\r\nInstalling collected packages: six, python-dateutil, numpy, pytz, pandas\r\nSuccessfully installed numpy-1.17.0 pandas-0.25.0 python-dateutil-2.8.0 pytz-2019.1 six-1.12.0\r\nYou are using pip version 8.1.1, however version 19.2.1 is available.\r\nYou should consider upgrading via the 'pip install --upgrade pip' command.\r\n```\r\n\r\nI suspect that with a newer version of pip `(RUN pip3 install -U pip setuptools`), the build would error."
    },
    {
      "id": 516389383,
      "user": "kszucs",
      "body": "Probably."
    },
    {
      "id": 521315468,
      "user": "csbrown",
      "body": "The python3 version in Ubuntu Xenial repos is 3.5.1.  This breaks a lot of stuff for a lot of people.  Not sure if that means anything to y'all, but I thought you might like to know."
    },
    {
      "id": 521318413,
      "user": "TomAugspurger",
      "body": "@csbrown that should be fine. You'll just pull in pandas 0.24.x when you install. Does that not happen?"
    },
    {
      "id": 521321556,
      "user": "csbrown",
      "body": "it pulls pandas 0.25 for me.  I `pip3 install pandas==0.23` and it works fine."
    },
    {
      "id": 521321773,
      "user": "csbrown",
      "body": "Just doing a `pip3 install pandas` and trying to `import pandas` is what landed me here looking for what went wrong  :)"
    },
    {
      "id": 521321883,
      "user": "TomAugspurger",
      "body": "What version of pip?\n\nOn Wed, Aug 14, 2019 at 11:34 AM Scott Brown <notifications@github.com>\nwrote:\n\n> it pulls pandas 0.25 for me. I pip3 install pandas==0.23 and it works\n> fine.\n>\n> —\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/27558?email_source=notifications&email_token=AAKAOIWR5X45TOF3JYPRQRTQEQX3FA5CNFSM4IGONSN2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD4JLYVA#issuecomment-521321556>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAKAOIXG3VFDNKVTGLX6LM3QEQX3FANCNFSM4IGONSNQ>\n> .\n>\n"
    },
    {
      "id": 521322432,
      "user": "csbrown",
      "body": "```\r\nscott@gpu-001:~$ sudo apt-get install --only-upgrade python3-pip\r\nReading package lists... Done\r\nBuilding dependency tree       \r\nReading state information... Done\r\npython3-pip is already the newest version (8.1.1-2ubuntu0.4).\r\n0 upgraded, 0 newly installed, 0 to remove and 280 not upgraded.\r\n\r\n```"
    },
    {
      "id": 521325409,
      "user": "TomAugspurger",
      "body": "Gotcha. That pip may not support python_requires, which is what is supposed\nto get you the right version for your python.\n\nYou'll need to upgrade pip or pin pandas.\n\nOn Wed, Aug 14, 2019 at 11:37 AM Scott Brown <notifications@github.com>\nwrote:\n\n> scott@gpu-001:~$ sudo apt-get install --only-upgrade python3-pip\n> Reading package lists... Done\n> Building dependency tree\n> Reading state information... Done\n> python3-pip is already the newest version (8.1.1-2ubuntu0.4).\n> 0 upgraded, 0 newly installed, 0 to remove and 280 not upgraded.\n>\n>\n> —\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/27558?email_source=notifications&email_token=AAKAOIR626JIAGAVX75OCPTQEQYEVA5CNFSM4IGONSN2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD4JL7QA#issuecomment-521322432>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAKAOIVDEHEWSOUJZW7AKWDQEQYEVANCNFSM4IGONSNQ>\n> .\n>\n"
    },
    {
      "id": 521328925,
      "user": "csbrown",
      "body": "The workaround is just fine for me.  Maybe this info will help someone else though.  "
    },
    {
      "id": 531446226,
      "user": "ThibaultRouillard",
      "body": "If you are using python 3.5.2, using pandas version 0.24.2 works\r\n\r\n`pip3 uninstall pandas`\r\n\r\n`pip3 install pandas==0.24.2`"
    },
    {
      "id": 544807365,
      "user": "leonjinzhong",
      "body": "> If you are using python 3.5.2, using pandas version 0.24.2 works\r\n> \r\n> `pip3 uninstall pandas`\r\n> \r\n> `pip3 install pandas==0.24.2`\r\n\r\nIt works. Thanks."
    },
    {
      "id": 618987369,
      "user": "ngthianhphuong",
      "body": "I have same issue here in pandas-dev virtual environment. My Python version is 3.8.2.\r\n\r\nI'm following the instructions in this link:\r\n\r\n[https://pandas.pydata.org/docs/dev/development/contributing.html#creating-a-development-environment](url)\r\n\r\n`python setup.py build_ext --inplace -j 4` throws an error:\r\n\r\n`C:\\Users\\Phuong\\Anaconda3\\envs\\pandas-dev\\include /Tcpandas/_libs/src/ujson/python/ujson.c /Fobuild\\temp.win-amd64-3.8\\Release\\pandas/_libs/src/ujson/python/ujson.obj -D_GNU_SOURCE\r\nerror: command 'cl.exe' failed: No such file or directory`\r\n\r\nI tried: `pip install pandas`, it works perfectly fine. But `import pandas` in Python interpreter throws an error:\r\n\r\n```Traceback (most recent call last):\r\n  File \"C:\\Users\\Phuong\\Documents\\GIT\\pandas\\pandas\\__init__.py\", line 32, in <module>\r\n    from pandas._libs import hashtable as _hashtable, lib as _lib, tslib as _tslib\r\n  File \"C:\\Users\\Phuong\\Documents\\GIT\\pandas\\pandas\\_libs\\__init__.py\", line 13, in <module>\r\n    from pandas._libs.interval import Interval\r\nModuleNotFoundError: No module named 'pandas._libs.interval'\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"C:\\Users\\Phuong\\Documents\\GIT\\pandas\\pandas\\__init__.py\", line 36, in <module>\r\n    raise ImportError(\r\nImportError: C extension: No module named 'pandas._libs.interval' not built. If you want to import pandas from the source directory, you may need to run 'python setup.py build_ext --inplace --force' to build the C extensions first.\r\n```\r\n\r\nNote that in my base environment, pandas installation and import both work fine.\r\n\r\nDo you have any idea how to fix this? Thanks.\r\n\r\n"
    },
    {
      "id": 618992283,
      "user": "TomAugspurger",
      "body": "@ngthianhphuong https://pandas.pydata.org/docs/dev/development/contributing.html#creating-a-development-environment has the instructions for building pandas from source to contribute to pandas. Are you intending to contribute to pandas? If so, you'll need to install a C compiler to avoid that error: https://pandas.pydata.org/docs/dev/development/contributing.html#installing-a-c-compiler\r\n\r\nIf not, then I'd recommend just sticking to `pip` or `conda` to install pandas.\r\n\r\nMake sure you don't have a folder named `pandas` where you start your interpreter."
    },
    {
      "id": 619007183,
      "user": "ngthianhphuong",
      "body": "Hi @TomAugspurger, thanks for your prompt reply. Yep that's right, I'd like to contribute so want to check first how it works. \r\nThe instructions says Build Tools for Visual Studio 2019 is required, which was already installed. I am now on Creating a Python environment step.\r\nThe command `python setup.py build_ext --inplace -j 4` must be run in pandas directory, am I right?"
    },
    {
      "id": 619096967,
      "user": "TomAugspurger",
      "body": "Yes, that's correct.\r\n\r\n> command 'cl.exe' failed: No such file or directory\r\n\r\nThat indicates you don't have the compiler on your terminals path. It's been a while since I've used windows, but IIRC there's a special command prompt application launcher that sets everything up for you."
    }
  ],
  "text_context": "# DOC: Unable to import pandas on python 3.5.2\n\n#### Code Sample, a copy-pastable example if possible\r\n\r\n```python\r\nimport pandas\r\n```\r\n#### Problem description\r\n\r\nAlthough it seems like a typing issue pandas is still affected, error:\r\n```\r\nroot@ae9a5374fe6d:/buildbot# python -c \"import pandas\"\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/usr/local/lib/python3.5/dist-packages/pandas/__init__.py\", line 55, in <module>\r\n    from pandas.core.api import (\r\n  File \"/usr/local/lib/python3.5/dist-packages/pandas/core/api.py\", line 5, in <module>\r\n    from pandas.core.arrays.integer import (\r\n  File \"/usr/local/lib/python3.5/dist-packages/pandas/core/arrays/__init__.py\", line 1, in <module>\r\n    from .array_ import array  # noqa: F401\r\n  File \"/usr/local/lib/python3.5/dist-packages/pandas/core/arrays/array_.py\", line 7, in <module>\r\n    from pandas.core.dtypes.common import (\r\n  File \"/usr/local/lib/python3.5/dist-packages/pandas/core/dtypes/common.py\", line 11, in <module>\r\n    from pandas.core.dtypes.dtypes import (\r\n  File \"/usr/local/lib/python3.5/dist-packages/pandas/core/dtypes/dtypes.py\", line 53, in <module>\r\n    class Registry:\r\n  File \"/usr/local/lib/python3.5/dist-packages/pandas/core/dtypes/dtypes.py\", line 84, in Registry\r\n    self, dtype: Union[Type[ExtensionDtype], str]\r\n  File \"/usr/lib/python3.5/typing.py\", line 552, in __getitem__\r\n    dict(self.__dict__), parameters, _root=True)\r\n  File \"/usr/lib/python3.5/typing.py\", line 512, in __new__\r\n    for t2 in all_params - {t1} if not isinstance(t2, TypeVar)):\r\n  File \"/usr/lib/python3.5/typing.py\", line 512, in <genexpr>\r\n    for t2 in all_params - {t1} if not isinstance(t2, TypeVar)):\r\n  File \"/usr/lib/python3.5/typing.py\", line 1077, in __subclasscheck__\r\n    if super().__subclasscheck__(cls):\r\n  File \"/usr/lib/python3.5/abc.py\", line 225, in __subclasscheck__\r\n    for scls in cls.__subclasses__():\r\nTypeError: descriptor '__subclasses__' of 'type' object needs an argument\r\n```\r\n\r\nTo reproduce:\r\n```\r\n$ docker pull ursalab/amd64-ubuntu-16.04-python-3:worker\r\n$ docker run -it ursalab/amd64-ubuntu-16.04-python-3:worker bash\r\n# python -c \"import pandas\"\r\n```\r\n\r\n#### Output of ``pip freeze | grep pandas``\r\n\r\n```\r\npandas==0.25.0\r\n```\r\n\n\n3.5.3 is the minimum on 0.25; see the release notes\n\n@jreback Thanks! May I suggest to update the documentation about that https://pandas.pydata.org/pandas-docs/stable/install.html#python-version-support ?\n\nyes that needs updating (and removing the 2.7)\n\n@kszucs how is pandas being installed? (I don't directly find this profile in the configuration) \r\nAs normally this should be catched during installation (see discussion i https://github.com/pandas-dev/pandas/pull/27288)\n\n@jorisvandenbossche \r\n\r\n```dockerfile\r\nFROM ubuntu:16.04\r\n\r\nRUN apt-get update -y && \\\r\n    apt-get install -y python3 python3-pip\r\nRUN pip3 install pandas\r\n\r\nCMD python3 -c \"import pandas\"\r\n```\r\n\r\n```bash\r\n$ docker build -t pandas-py35 -f <the-dockerfile-above> .\r\n$ docker run pandas-py35\r\n```\n\n@kszucs that had a warning for me locally\r\n\r\n```\r\nStep 3/4 : RUN pip3 install pandas\r\n ---> Running in 2181656518ff\r\nCollecting pandas\r\n  Downloading https://files.pythonhosted.org/packages/a7/d9/e03b615e973c2733ff8fd53d95bd3633ecbfa81b5af2f83fe39647c02344/pandas-0.25.0-cp35-cp35m-manylinux1_x86_64.whl (10.3MB)\r\nCollecting python-dateutil>=2.6.1 (from pandas)\r\n  Downloading https://files.pythonhosted.org/packages/41/17/c62faccbfbd163c7f57f3844689e3a78bae1f403648a6afb1d0866d87fbb/python_dateutil-2.8.0-py2.py3-none-any.whl (226kB)\r\nCollecting numpy>=1.13.3 (from pandas)\r\n  Downloading https://files.pythonhosted.org/packages/69/25/eef8d362bd216b11e7d005331a3cca3d19b0aa57569bde680070109b745c/numpy-1.17.0-cp35-cp35m-manylinux1_x86_64.whl (20.2MB)\r\nCollecting pytz>=2017.2 (from pandas)\r\n  Downloading https://files.pythonhosted.org/packages/3d/73/fe30c2daaaa0713420d0382b16fbb761409f532c56bdcc514bf7b6262bb6/pytz-2019.1-py2.py3-none-any.whl (510kB)\r\nCollecting six>=1.5 (from python-dateutil>=2.6.1->pandas)\r\n  Downloading https://files.pythonhosted.org/packages/73/fb/00a976f728d0d1fecfe898238ce23f502a721c0ac0ecfedb80e0d88c64e9/six-1.12.0-py2.py3-none-any.whl\r\nInstalling collected packages: six, python-dateutil, numpy, pytz, pandas\r\nSuccessfully installed numpy-1.17.0 pandas-0.25.0 python-dateutil-2.8.0 pytz-2019.1 six-1.12.0\r\nYou are using pip version 8.1.1, however version 19.2.1 is available.\r\nYou should consider upgrading via the 'pip install --upgrade pip' command.\r\n```\r\n\r\nI suspect that with a newer version of pip `(RUN pip3 install -U pip setuptools`), the build would error.\n\nProbably.\n\nThe python3 version in Ubuntu Xenial repos is 3.5.1.  This breaks a lot of stuff for a lot of people.  Not sure if that means anything to y'all, but I thought you might like to know.\n\n@csbrown that should be fine. You'll just pull in pandas 0.24.x when you install. Does that not happen?\n\nit pulls pandas 0.25 for me.  I `pip3 install pandas==0.23` and it works fine.\n\nJust doing a `pip3 install pandas` and trying to `import pandas` is what landed me here looking for what went wrong  :)\n\nWhat version of pip?\n\nOn Wed, Aug 14, 2019 at 11:34 AM Scott Brown <notifications@github.com>\nwrote:\n\n> it pulls pandas 0.25 for me. I pip3 install pandas==0.23 and it works\n> fine.\n>\n> —\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/27558?email_source=notifications&email_token=AAKAOIWR5X45TOF3JYPRQRTQEQX3FA5CNFSM4IGONSN2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD4JLYVA#issuecomment-521321556>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAKAOIXG3VFDNKVTGLX6LM3QEQX3FANCNFSM4IGONSNQ>\n> .\n>\n\n\n```\r\nscott@gpu-001:~$ sudo apt-get install --only-upgrade python3-pip\r\nReading package lists... Done\r\nBuilding dependency tree       \r\nReading state information... Done\r\npython3-pip is already the newest version (8.1.1-2ubuntu0.4).\r\n0 upgraded, 0 newly installed, 0 to remove and 280 not upgraded.\r\n\r\n```\n\nGotcha. That pip may not support python_requires, which is what is supposed\nto get you the right version for your python.\n\nYou'll need to upgrade pip or pin pandas.\n\nOn Wed, Aug 14, 2019 at 11:37 AM Scott Brown <notifications@github.com>\nwrote:\n\n> scott@gpu-001:~$ sudo apt-get install --only-upgrade python3-pip\n> Reading package lists... Done\n> Building dependency tree\n> Reading state information... Done\n> python3-pip is already the newest version (8.1.1-2ubuntu0.4).\n> 0 upgraded, 0 newly installed, 0 to remove and 280 not upgraded.\n>\n>\n> —\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/27558?email_source=notifications&email_token=AAKAOIR626JIAGAVX75OCPTQEQYEVA5CNFSM4IGONSN2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD4JL7QA#issuecomment-521322432>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAKAOIVDEHEWSOUJZW7AKWDQEQYEVANCNFSM4IGONSNQ>\n> .\n>\n\n\nThe workaround is just fine for me.  Maybe this info will help someone else though.  \n\nIf you are using python 3.5.2, using pandas version 0.24.2 works\r\n\r\n`pip3 uninstall pandas`\r\n\r\n`pip3 install pandas==0.24.2`\n\n> If you are using python 3.5.2, using pandas version 0.24.2 works\r\n> \r\n> `pip3 uninstall pandas`\r\n> \r\n> `pip3 install pandas==0.24.2`\r\n\r\nIt works. Thanks.\n\nI have same issue here in pandas-dev virtual environment. My Python version is 3.8.2.\r\n\r\nI'm following the instructions in this link:\r\n\r\n[https://pandas.pydata.org/docs/dev/development/contributing.html#creating-a-development-environment](url)\r\n\r\n`python setup.py build_ext --inplace -j 4` throws an error:\r\n\r\n`C:\\Users\\Phuong\\Anaconda3\\envs\\pandas-dev\\include /Tcpandas/_libs/src/ujson/python/ujson.c /Fobuild\\temp.win-amd64-3.8\\Release\\pandas/_libs/src/ujson/python/ujson.obj -D_GNU_SOURCE\r\nerror: command 'cl.exe' failed: No such file or directory`\r\n\r\nI tried: `pip install pandas`, it works perfectly fine. But `import pandas` in Python interpreter throws an error:\r\n\r\n```Traceback (most recent call last):\r\n  File \"C:\\Users\\Phuong\\Documents\\GIT\\pandas\\pandas\\__init__.py\", line 32, in <module>\r\n    from pandas._libs import hashtable as _hashtable, lib as _lib, tslib as _tslib\r\n  File \"C:\\Users\\Phuong\\Documents\\GIT\\pandas\\pandas\\_libs\\__init__.py\", line 13, in <module>\r\n    from pandas._libs.interval import Interval\r\nModuleNotFoundError: No module named 'pandas._libs.interval'\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"C:\\Users\\Phuong\\Documents\\GIT\\pandas\\pandas\\__init__.py\", line 36, in <module>\r\n    raise ImportError(\r\nImportError: C extension: No module named 'pandas._libs.interval' not built. If you want to import pandas from the source directory, you may need to run 'python setup.py build_ext --inplace --force' to build the C extensions first.\r\n```\r\n\r\nNote that in my base environment, pandas installation and import both work fine.\r\n\r\nDo you have any idea how to fix this? Thanks.\r\n\r\n\n\n@ngthianhphuong https://pandas.pydata.org/docs/dev/development/contributing.html#creating-a-development-environment has the instructions for building pandas from source to contribute to pandas. Are you intending to contribute to pandas? If so, you'll need to install a C compiler to avoid that error: https://pandas.pydata.org/docs/dev/development/contributing.html#installing-a-c-compiler\r\n\r\nIf not, then I'd recommend just sticking to `pip` or `conda` to install pandas.\r\n\r\nMake sure you don't have a folder named `pandas` where you start your interpreter.\n\nHi @TomAugspurger, thanks for your prompt reply. Yep that's right, I'd like to contribute so want to check first how it works. \r\nThe instructions says Build Tools for Visual Studio 2019 is required, which was already installed. I am now on Creating a Python environment step.\r\nThe command `python setup.py build_ext --inplace -j 4` must be run in pandas directory, am I right?\n\nYes, that's correct.\r\n\r\n> command 'cl.exe' failed: No such file or directory\r\n\r\nThat indicates you don't have the compiler on your terminals path. It's been a while since I've used windows, but IIRC there's a special command prompt application launcher that sets everything up for you.",
  "pr_link": "https://github.com/pandas-dev/pandas/pull/27288",
  "code_context": [
    {
      "filename": "pandas/__init__.py",
      "content": "# flake8: noqa\nimport sys\n\nif sys.version_info[:3] <= (3, 5, 2):\n    msg = \"pandas requires Python >=3.5.3 but {}.{}.{} is installed.\".format(\n        *sys.version_info[:3]\n    )\n    raise ImportError(msg)\n\ndel sys\n\n__docformat__ = \"restructuredtext\"\n\n# Let users know if they're missing any of our hard dependencies\nhard_dependencies = (\"numpy\", \"pytz\", \"dateutil\")\nmissing_dependencies = []\n\nfor dependency in hard_dependencies:\n    try:\n        __import__(dependency)\n    except ImportError as e:\n        missing_dependencies.append(\"{0}: {1}\".format(dependency, str(e)))\n\nif missing_dependencies:\n    raise ImportError(\n        \"Unable to import required dependencies:\\n\" + \"\\n\".join(missing_dependencies)\n    )\ndel hard_dependencies, dependency, missing_dependencies\n\n# numpy compat\nfrom pandas.compat.numpy import (\n    _np_version_under1p14,\n    _np_version_under1p15,\n    _np_version_under1p16,\n    _np_version_under1p17,\n)\n\ntry:\n    from pandas._libs import hashtable as _hashtable, lib as _lib, tslib as _tslib\nexcept ImportError as e:  # pragma: no cover\n    # hack but overkill to use re\n    module = str(e).replace(\"cannot import name \", \"\")\n    raise ImportError(\n        \"C extension: {0} not built. If you want to import \"\n        \"pandas from the source directory, you may need to run \"\n        \"'python setup.py build_ext --inplace --force' to build \"\n        \"the C extensions first.\".format(module)\n    )\n\nfrom datetime import datetime\n\nfrom pandas._config import (\n    get_option,\n    set_option,\n    reset_option,\n    describe_option,\n    option_context,\n    options,\n)\n\n# let init-time option registration happen\nimport pandas.core.config_init\n\nfrom pandas.core.api import (\n    # dtype\n    Int8Dtype,\n    Int16Dtype,\n    Int32Dtype,\n    Int64Dtype,\n    UInt8Dtype,\n    UInt16Dtype,\n    UInt32Dtype,\n    UInt64Dtype,\n    CategoricalDtype,\n    PeriodDtype,\n    IntervalDtype,\n    DatetimeTZDtype,\n    # missing\n    isna,\n    isnull,\n    notna,\n    notnull,\n    # indexes\n    Index,\n    CategoricalIndex,\n    Int64Index,\n    UInt64Index,\n    RangeIndex,\n    Float64Index,\n    MultiIndex,\n    IntervalIndex,\n    TimedeltaIndex,\n    DatetimeIndex,\n    PeriodIndex,\n    IndexSlice,\n    # tseries\n    NaT,\n    Period,\n    period_range,\n    Timedelta,\n    timedelta_range,\n    Timestamp,\n    date_range,\n    bdate_range,\n    Interval,\n    interval_range,\n    DateOffset,\n    # conversion\n    to_numeric,\n    to_datetime,\n    to_timedelta,\n    # misc\n    np,\n    Grouper,\n    factorize,\n    unique,\n    value_counts,\n    NamedAgg,\n    array,\n    Categorical,\n    set_eng_float_format,\n    Series,\n    DataFrame,\n)\n\nfrom pandas.core.sparse.api import (\n    SparseArray,\n    SparseDataFrame,\n    SparseSeries,\n    SparseDtype,\n)\n\nfrom pandas.tseries.api import infer_freq\nfrom pandas.tseries import offsets\n\nfrom pandas.core.computation.api import eval\n\nfrom pandas.core.reshape.api import (\n    concat,\n    lreshape,\n    melt,\n    wide_to_long,\n    merge,\n    merge_asof,\n    merge_ordered,\n    crosstab,\n    pivot,\n    pivot_table,\n    get_dummies,\n    cut,\n    qcut,\n)\n\nfrom pandas.util._print_versions import show_versions\n\nfrom pandas.io.api import (\n    # excel\n    ExcelFile,\n    ExcelWriter,\n    read_excel,\n    # packers\n    read_msgpack,\n    to_msgpack,\n    # parsers\n    read_csv,\n    read_fwf,\n    read_table,\n    # pickle\n    read_pickle,\n    to_pickle,\n    # pytables\n    HDFStore,\n    read_hdf,\n    # sql\n    read_sql,\n    read_sql_query,\n    read_sql_table,\n    # misc\n    read_clipboard,\n    read_parquet,\n    read_feather,\n    read_gbq,\n    read_html,\n    read_json,\n    read_stata,\n    read_sas,\n    read_spss,\n)\n\nfrom pandas.util._tester import test\nimport pandas.testing\nimport pandas.arrays\n\n# use the closest tagged version if possible\nfrom ._version import get_versions\n\nv = get_versions()\n__version__ = v.get(\"closest-tag\", v[\"version\"])\n__git_version__ = v.get(\"full-revisionid\")\ndel get_versions, v\n\n\n# GH 27101\n# TODO: remove Panel compat in 1.0\nif pandas.compat.PY37:\n\n    def __getattr__(name):\n        if name == \"Panel\":\n            import warnings\n\n            warnings.warn(\n                \"The Panel class is removed from pandas. Accessing it \"\n                \"from the top-level namespace will also be removed in \"\n                \"the next version\",\n                FutureWarning,\n                stacklevel=2,\n            )\n\n            class Panel:\n                pass\n\n            return Panel\n        raise AttributeError(\"module 'pandas' has no attribute '{}'\".format(name))\n\n\nelse:\n\n    class Panel:\n        pass\n\n\n# module level doc-string\n__doc__ = \"\"\"\npandas - a powerful data analysis and manipulation library for Python\n=====================================================================\n\n**pandas** is a Python package providing fast, flexible, and expressive data\nstructures designed to make working with \"relational\" or \"labeled\" data both\neasy and intuitive. It aims to be the fundamental high-level building block for\ndoing practical, **real world** data analysis in Python. Additionally, it has\nthe broader goal of becoming **the most powerful and flexible open source data\nanalysis / manipulation tool available in any language**. It is already well on\nits way toward this goal.\n\nMain Features\n-------------\nHere are just a few of the things that pandas does well:\n\n  - Easy handling of missing data in floating point as well as non-floating\n    point data.\n  - Size mutability: columns can be inserted and deleted from DataFrame and\n    higher dimensional objects\n  - Automatic and explicit data alignment: objects can be explicitly aligned\n    to a set of labels, or the user can simply ignore the labels and let\n    `Series`, `DataFrame`, etc. automatically align the data for you in\n    computations.\n  - Powerful, flexible group by functionality to perform split-apply-combine\n    operations on data sets, for both aggregating and transforming data.\n  - Make it easy to convert ragged, differently-indexed data in other Python\n    and NumPy data structures into DataFrame objects.\n  - Intelligent label-based slicing, fancy indexing, and subsetting of large\n    data sets.\n  - Intuitive merging and joining data sets.\n  - Flexible reshaping and pivoting of data sets.\n  - Hierarchical labeling of axes (possible to have multiple labels per tick).\n  - Robust IO tools for loading data from flat files (CSV and delimited),\n    Excel files, databases, and saving/loading data from the ultrafast HDF5\n    format.\n  - Time series-specific functionality: date range generation and frequency\n    conversion, moving window statistics, moving window linear regressions,\n    date shifting and lagging, etc.\n\"\"\"\n"
    },
    {
      "filename": "pandas/tests/test_downstream.py",
      "content": "\"\"\"\nTesting that we work in the downstream packages\n\"\"\"\nimport importlib\nimport subprocess\nimport sys\n\nimport numpy as np  # noqa\nimport pytest\n\nfrom pandas.compat import PY36\n\nfrom pandas import DataFrame\nfrom pandas.util import testing as tm\n\n\ndef import_module(name):\n    # we *only* want to skip if the module is truly not available\n    # and NOT just an actual import error because of pandas changes\n\n    if PY36:\n        try:\n            return importlib.import_module(name)\n        except ModuleNotFoundError:  # noqa\n            pytest.skip(\"skipping as {} not available\".format(name))\n\n    else:\n        try:\n            return importlib.import_module(name)\n        except ImportError as e:\n            if \"No module named\" in str(e) and name in str(e):\n                pytest.skip(\"skipping as {} not available\".format(name))\n            raise\n\n\n@pytest.fixture\ndef df():\n    return DataFrame({\"A\": [1, 2, 3]})\n\n\ndef test_dask(df):\n\n    toolz = import_module(\"toolz\")  # noqa\n    dask = import_module(\"dask\")  # noqa\n\n    import dask.dataframe as dd\n\n    ddf = dd.from_pandas(df, npartitions=3)\n    assert ddf.A is not None\n    assert ddf.compute() is not None\n\n\ndef test_xarray(df):\n\n    xarray = import_module(\"xarray\")  # noqa\n\n    assert df.to_xarray() is not None\n\n\ndef test_oo_optimizable():\n    # GH 21071\n    subprocess.check_call([sys.executable, \"-OO\", \"-c\", \"import pandas\"])\n\n\n@tm.network\n# Cython import warning\n@pytest.mark.filterwarnings(\"ignore:can't:ImportWarning\")\ndef test_statsmodels():\n\n    statsmodels = import_module(\"statsmodels\")  # noqa\n    import statsmodels.api as sm\n    import statsmodels.formula.api as smf\n\n    df = sm.datasets.get_rdataset(\"Guerry\", \"HistData\").data\n    smf.ols(\"Lottery ~ Literacy + np.log(Pop1831)\", data=df).fit()\n\n\n# Cython import warning\n@pytest.mark.filterwarnings(\"ignore:can't:ImportWarning\")\ndef test_scikit_learn(df):\n\n    sklearn = import_module(\"sklearn\")  # noqa\n    from sklearn import svm, datasets\n\n    digits = datasets.load_digits()\n    clf = svm.SVC(gamma=0.001, C=100.0)\n    clf.fit(digits.data[:-1], digits.target[:-1])\n    clf.predict(digits.data[-1:])\n\n\n# Cython import warning and traitlets\n@tm.network\n@pytest.mark.filterwarnings(\"ignore\")\ndef test_seaborn():\n\n    seaborn = import_module(\"seaborn\")\n    tips = seaborn.load_dataset(\"tips\")\n    seaborn.stripplot(x=\"day\", y=\"total_bill\", data=tips)\n\n\ndef test_pandas_gbq(df):\n\n    pandas_gbq = import_module(\"pandas_gbq\")  # noqa\n\n\n@pytest.mark.xfail(reason=\"0.7.0 pending\")\n@tm.network\ndef test_pandas_datareader():\n\n    pandas_datareader = import_module(\"pandas_datareader\")  # noqa\n    pandas_datareader.DataReader(\"F\", \"quandl\", \"2017-01-01\", \"2017-02-01\")\n\n\n# importing from pandas, Cython import warning\n@pytest.mark.filterwarnings(\"ignore:The 'warn':DeprecationWarning\")\n@pytest.mark.filterwarnings(\"ignore:pandas.util:DeprecationWarning\")\n@pytest.mark.filterwarnings(\"ignore:can't resolve:ImportWarning\")\n@pytest.mark.skip(reason=\"gh-25778: geopandas stack issue\")\ndef test_geopandas():\n\n    geopandas = import_module(\"geopandas\")  # noqa\n    fp = geopandas.datasets.get_path(\"naturalearth_lowres\")\n    assert geopandas.read_file(fp) is not None\n\n\n# Cython import warning\n@pytest.mark.filterwarnings(\"ignore:can't resolve:ImportWarning\")\ndef test_pyarrow(df):\n\n    pyarrow = import_module(\"pyarrow\")  # noqa\n    table = pyarrow.Table.from_pandas(df)\n    result = table.to_pandas()\n    tm.assert_frame_equal(result, df)\n\n\n@pytest.mark.xfail(reason=\"pandas-wheels-50\", strict=False)\ndef test_missing_required_dependency():\n    # GH 23868\n    # To ensure proper isolation, we pass these flags\n    # -S : disable site-packages\n    # -s : disable user site-packages\n    # -E : disable PYTHON* env vars, especially PYTHONPATH\n    # And, that's apparently not enough, so we give up.\n    # https://github.com/MacPython/pandas-wheels/pull/50\n    call = [\"python\", \"-sSE\", \"-c\", \"import pandas\"]\n\n    with pytest.raises(subprocess.CalledProcessError) as exc:\n        subprocess.check_output(call, stderr=subprocess.STDOUT)\n\n    output = exc.value.stdout.decode()\n    for name in [\"numpy\", \"pytz\", \"dateutil\"]:\n        assert name in output\n\n\ndef test_old_python_raises():\n    code = \"import sys; sys.version_info = (3, 5, 2); import pandas\"\n    # match = 'pandas requires Python >=3.5.3 but 3.5.2 is installed'\n    out = subprocess.run([\"python\", \"-c\", code], check=False, capture_output=True)\n    stderr = out.stderr.decode()\n    assert \"pandas requires Python >=3.5.3 but 3.5.2 is installed.\" in stderr\n"
    }
  ]
}