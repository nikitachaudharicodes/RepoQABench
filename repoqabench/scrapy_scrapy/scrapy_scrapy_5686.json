{
  "repo_name": "scrapy_scrapy",
  "issue_id": "5686",
  "issue_description": "# DeprecationWarning: typing.re is deprecated\n\n```\r\ntests/test_downloader_handlers.py::HttpProxyTestCase::test_download_with_proxy_https_noconnect\r\ntests/test_downloader_handlers.py::Http11ProxyTestCase::test_download_with_proxy_https_noconnect\r\ntests/test_downloader_handlers_http2.py::Http11ProxyTestCase::test_download_with_proxy_https_noconnect\r\n  /opt/hostedtoolcache/Python/3.11.0-rc.2/x64/lib/python3.11/unittest/case.py:292: DeprecationWarning: typing.re is deprecated, import directly from typing instead. typing.re will be removed in Python 3.12.\r\n    if getattr(v, '__warningregistry__', None):\r\n```\r\n\r\nHappens in 3.11 tests.",
  "issue_comments": [
    {
      "id": 1285319263,
      "user": "iamkaushal",
      "body": "I would Iike to take this issue @wRAR \r\n"
    },
    {
      "id": 1285334391,
      "user": "wRAR",
      "body": "Sure, go ahed @iamkaushal "
    },
    {
      "id": 1289711905,
      "user": "Laerte",
      "body": "@wRAR This deprecation warning is from `unitest` library, in this case you suggest to catch this warning and suppress?"
    },
    {
      "id": 1290074162,
      "user": "Gallaecio",
      "body": "It seems so, calling `assertWarnsRegex` seems to be the cause. Maybe we need to report the issue upstream, then ignore it during tests, including a comment linking to that upstream issue."
    },
    {
      "id": 1290075040,
      "user": "wRAR",
      "body": "@Laerte I assumed it's from Scrapy. I've just looked at the code that produces it and I think it's a non-issue: the code accesses all modules from `sys.modules`, and `typing.re` is there because of magic in the `typing` module. So it looks like nobody actually imports it and nothing will break when the module is removed."
    },
    {
      "id": 1290096672,
      "user": "Gallaecio",
      "body": "Shall we silence it then, linking to your comment as the reason?"
    },
    {
      "id": 1290109410,
      "user": "wRAR",
      "body": "I think so, yeah. "
    },
    {
      "id": 1290231440,
      "user": "iamkaushal",
      "body": "should I fix it like this? \r\n```\r\nwith contextlib.suppress(DeprecationWarning):\r\n    with self.assertWarnsRegex(ScrapyDeprecationWarning,\r\n                            r'Using HTTPS proxies in the noconnect mode is deprecated'):\r\n        return self.download_request(request, Spider('foo')).addCallback(_test)\r\n```\r\n"
    },
    {
      "id": 1290282085,
      "user": "Gallaecio",
      "body": "I believe https://github.com/scrapy/scrapy/blob/f4e2a10ed6a44300738bd3701ea62b432c9c1a06/pytest.ini#L24-L26 is the way to go for this."
    },
    {
      "id": 1291640082,
      "user": "wRAR",
      "body": "Not sure if it was there last time but now I also see \"typing.**io** is deprecated, import directly from typing instead\" in the 3.11 asyncio test."
    },
    {
      "id": 1293223568,
      "user": "iamkaushal",
      "body": "@wRAR  I am using windows, how can I reproduce this warning?\r\n"
    },
    {
      "id": 1293248178,
      "user": "wRAR",
      "body": "@iamkaushal I think it should be enough to run tests with Python 3.11."
    }
  ],
  "text_context": "# DeprecationWarning: typing.re is deprecated\n\n```\r\ntests/test_downloader_handlers.py::HttpProxyTestCase::test_download_with_proxy_https_noconnect\r\ntests/test_downloader_handlers.py::Http11ProxyTestCase::test_download_with_proxy_https_noconnect\r\ntests/test_downloader_handlers_http2.py::Http11ProxyTestCase::test_download_with_proxy_https_noconnect\r\n  /opt/hostedtoolcache/Python/3.11.0-rc.2/x64/lib/python3.11/unittest/case.py:292: DeprecationWarning: typing.re is deprecated, import directly from typing instead. typing.re will be removed in Python 3.12.\r\n    if getattr(v, '__warningregistry__', None):\r\n```\r\n\r\nHappens in 3.11 tests.\n\nI would Iike to take this issue @wRAR \r\n\n\nSure, go ahed @iamkaushal \n\n@wRAR This deprecation warning is from `unitest` library, in this case you suggest to catch this warning and suppress?\n\nIt seems so, calling `assertWarnsRegex` seems to be the cause. Maybe we need to report the issue upstream, then ignore it during tests, including a comment linking to that upstream issue.\n\n@Laerte I assumed it's from Scrapy. I've just looked at the code that produces it and I think it's a non-issue: the code accesses all modules from `sys.modules`, and `typing.re` is there because of magic in the `typing` module. So it looks like nobody actually imports it and nothing will break when the module is removed.\n\nShall we silence it then, linking to your comment as the reason?\n\nI think so, yeah. \n\nshould I fix it like this? \r\n```\r\nwith contextlib.suppress(DeprecationWarning):\r\n    with self.assertWarnsRegex(ScrapyDeprecationWarning,\r\n                            r'Using HTTPS proxies in the noconnect mode is deprecated'):\r\n        return self.download_request(request, Spider('foo')).addCallback(_test)\r\n```\r\n\n\nI believe https://github.com/scrapy/scrapy/blob/f4e2a10ed6a44300738bd3701ea62b432c9c1a06/pytest.ini#L24-L26 is the way to go for this.\n\nNot sure if it was there last time but now I also see \"typing.**io** is deprecated, import directly from typing instead\" in the 3.11 asyncio test.\n\n@wRAR  I am using windows, how can I reproduce this warning?\r\n\n\n@iamkaushal I think it should be enough to run tests with Python 3.11.",
  "pr_link": "https://github.com/scrapy/scrapy/pull/5697",
  "code_context": [],
  "questions": [
    "@wRAR This deprecation warning is from `unitest` library, in this case you suggest to catch this warning and suppress?",
    "should I fix it like this? \r\n```\r\nwith contextlib.suppress(DeprecationWarning):\r\n    with self.assertWarnsRegex(ScrapyDeprecationWarning,\r\n                            r'Using HTTPS proxies in the noconnect mode is deprecated'):\r\n        return self.download_request(request, Spider('foo')).addCallback(_test)\r\n```"
  ],
  "golden_answers": [
    "It seems so, calling `assertWarnsRegex` seems to be the cause. Maybe we need to report the issue upstream, then ignore it during tests, including a comment linking to that upstream issue.",
    "Not sure if it was there last time but now I also see \"typing.**io** is deprecated, import directly from typing instead\" in the 3.11 asyncio test."
  ],
  "questions_generated": [
    "What is causing the DeprecationWarning related to typing.re in the scrapy_scrapy repository tests?",
    "Why is it suggested to suppress the DeprecationWarning in the tests instead of addressing it directly?",
    "How can the DeprecationWarning be suppressed in the unittest framework according to the discussion?",
    "What test case is specifically mentioned as causing the DeprecationWarning in the issue?",
    "How can a developer reproduce the DeprecationWarning on their local machine?"
  ],
  "golden_answers_generated": [
    "The DeprecationWarning is caused by the unittest library accessing all modules from sys.modules, where typing.re is present due to internal magic in the typing module. This is not an issue with Scrapy itself, but rather a side effect of how the unittest library operates in Python 3.11.",
    "It is suggested to suppress the DeprecationWarning because the warning arises from the unittest library's interaction with sys.modules, not from Scrapy's code. The warning does not indicate a direct issue within Scrapy's implementation, and nothing will break when typing.re is removed. Therefore, suppressing the warning is a pragmatic choice to prevent test failures without altering the library's code.",
    "The DeprecationWarning can be suppressed by using contextlib.suppress around the relevant test code or by configuring pytest to ignore the warning. The discussion suggests using pytest configuration, as indicated by the link to the pytest.ini file in the Scrapy repository.",
    "The test cases mentioned are HttpProxyTestCase::test_download_with_proxy_https_noconnect and Http11ProxyTestCase::test_download_with_proxy_https_noconnect in tests/test_downloader_handlers.py and tests/test_downloader_handlers_http2.py.",
    "A developer can reproduce the DeprecationWarning by running the Scrapy tests using Python 3.11, as this version includes the relevant changes in the typing module that trigger the warning."
  ]
}