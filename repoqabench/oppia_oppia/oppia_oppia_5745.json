{
  "repo_name": "oppia_oppia",
  "issue_id": "5745",
  "issue_description": "# Redesigning and selecting proper icons for audio bar in the translation tab.\n\nCurrently, the audio bar in the translation tab doesn't look clean and smooth. This can be fixed in many ways, a few suggested changes can be done:\r\n- Use flex-box for the audio bar.\r\n- Add simple transition for buttons appears or disappear.\r\n- Redesign button icon for Re-record, upload audio etc.\r\n- Design for disabled buttons.\r\n- Remove hamburger tab completely\r\n- Remove -:--/-:-- when audio not yet played\r\n- Fix icon alignment on smaller-width screens\r\n\r\n**Supported image (current situation):**\r\n![image](https://user-images.githubusercontent.com/16653571/46717832-db327080-cc86-11e8-8dd5-0d20546354a9.png)\r\n\r\n\r\n**Steps to check the audio bar:**\r\n- Create an exploration.\r\n- Go to the translation tab.\r\n- Record one audio to see all of the possible situations of the audio bar. \r\n\r\nAdditional context:\r\n- Template(.html) file of audio translation bar: [audio_translation_bar_directive.html](https://github.com/oppia/oppia/blob/develop/core/templates/dev/head/pages/exploration_editor/translation_tab/audio_translation_bar_directive.html) ",
  "issue_comments": [
    {
      "id": 430792888,
      "user": "DianaSellarova",
      "body": "Hello @DubeySandeep I would really like to take this issue and work on it and would love to help :) I will check whole project and instructions on how to contribute a bit later, but i'm writing just to let you know that i like to do it, and maybe you could assign it to me. For starters can i just ask in which file is this component implemented? Thanks a lot and have a nice day :)"
    },
    {
      "id": 430903617,
      "user": "DubeySandeep",
      "body": "Hi @DianaSellarova,  Thanks for showing interest in this project. You can start working on this issue after signing CLA as asked [here](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#setting-things-up). :)\r\n\r\nAlso, I have updated the issue header with a pointer to the template file. please check! :)"
    },
    {
      "id": 430932978,
      "user": "DianaSellarova",
      "body": "@DubeySandeep thank you very much :)"
    },
    {
      "id": 433589476,
      "user": "DubeySandeep",
      "body": "@DianaSellarova, any update on this? "
    },
    {
      "id": 435901105,
      "user": "DianaSellarova",
      "body": "@DubeySandeep i'll have it finished today :)"
    },
    {
      "id": 436635576,
      "user": "DubeySandeep",
      "body": "Hi @DianaSellarova, how is it going?"
    },
    {
      "id": 437660188,
      "user": "DianaSellarova",
      "body": "<img width=\"854\" alt=\"screenshot 2018-11-11 at 11 52 44\" src=\"https://user-images.githubusercontent.com/22642474/48312006-92811680-e5a8-11e8-9b70-7825a598e27c.png\">\r\n\r\nSo far it looks something like this, i apologize that i did not finish it sooner but i had to finish other assignments to school and work.. Can i ask you one question, by removing hamburger menu you ment to remove it completely or move its content (those two option) directly into playbar?"
    },
    {
      "id": 437761315,
      "user": "DubeySandeep",
      "body": "Hi @DianaSellarova, Thanks for the update!\r\nIt looks great. (image above) :D\r\nCan you upload images for the different stage of this bar?\r\n- Before recording:\r\n   - If audio not available. (You have posted image for this above.)\r\n   - If audio available.\r\n- While Recording.\r\n- While converting audio to mp3.\r\n- After recording.\r\n- While saving.\r\n\r\n>  by removing hamburger menu you ment to remove it completely or move its content (those two option) directly into playbar?\r\n\r\nI mean to move it's content directly into the playbar!\r\n\r\nAlso, @christineycc might be able to help consult on the UI/UX for this bar, so please feel free to send her designs/mocks if you'd like feedback on them!"
    },
    {
      "id": 437939773,
      "user": "DianaSellarova",
      "body": "Hi @DubeySandeep i created a pull request https://github.com/oppia/oppia/pull/5868 so you can check it all out and leave some feedback. I did not know how to assign a reviewer for this so i dont know if it is my job or yours. "
    },
    {
      "id": 446963549,
      "user": "geetchoudhary",
      "body": "Hi, @DubeySandeep  I would really like to take up this issue as the previous PR was marked as stale and is now closed."
    },
    {
      "id": 447496566,
      "user": "geetchoudhary",
      "body": "@DubeySandeep Please let me know about this when you get a chance.\r\n\r\n\r\n"
    },
    {
      "id": 447536414,
      "user": "DubeySandeep",
      "body": "Hi @geetchoudhary, Sure, go ahead and start working on it. Thanks! :)"
    },
    {
      "id": 447538329,
      "user": "geetchoudhary",
      "body": "@DubeySandeep , Just a quick question. Was the UI on the PR #5868 ok? Should I continue with it as a template and see what's wrong or create a new one from scratch?"
    },
    {
      "id": 447538552,
      "user": "DubeySandeep",
      "body": "@geetchoudhary, you can continue with it and go through the doc and suggestions provided in the PR comments thread, Also do update the same doc with your changes while sending PR and link the doc in the PR comment, that way it will be easier for anyone to do a UI review! "
    },
    {
      "id": 457401007,
      "user": "DubeySandeep",
      "body": "De-assigning @DianaSellarova from this issue because of lack of response in the PR #5986.\r\n\r\nAs this issue is intended to be resolved before the end of Jan, assigning this to @rakshitkumarcse.  "
    },
    {
      "id": 457562652,
      "user": "JeeBoomBoi",
      "body": "@DubeySandeep I would like to give a try on this issue. Can i work on it ?"
    },
    {
      "id": 457599039,
      "user": "mighty-phoenix",
      "body": "@jeeb0xical I am already working on it.\r\nThanks. :)"
    },
    {
      "id": 457628007,
      "user": "JeeBoomBoi",
      "body": "Okay ! I will look for some other issue then @rakshitkumarcse . "
    }
  ],
  "text_context": "# Redesigning and selecting proper icons for audio bar in the translation tab.\n\nCurrently, the audio bar in the translation tab doesn't look clean and smooth. This can be fixed in many ways, a few suggested changes can be done:\r\n- Use flex-box for the audio bar.\r\n- Add simple transition for buttons appears or disappear.\r\n- Redesign button icon for Re-record, upload audio etc.\r\n- Design for disabled buttons.\r\n- Remove hamburger tab completely\r\n- Remove -:--/-:-- when audio not yet played\r\n- Fix icon alignment on smaller-width screens\r\n\r\n**Supported image (current situation):**\r\n![image](https://user-images.githubusercontent.com/16653571/46717832-db327080-cc86-11e8-8dd5-0d20546354a9.png)\r\n\r\n\r\n**Steps to check the audio bar:**\r\n- Create an exploration.\r\n- Go to the translation tab.\r\n- Record one audio to see all of the possible situations of the audio bar. \r\n\r\nAdditional context:\r\n- Template(.html) file of audio translation bar: [audio_translation_bar_directive.html](https://github.com/oppia/oppia/blob/develop/core/templates/dev/head/pages/exploration_editor/translation_tab/audio_translation_bar_directive.html) \n\nHello @DubeySandeep I would really like to take this issue and work on it and would love to help :) I will check whole project and instructions on how to contribute a bit later, but i'm writing just to let you know that i like to do it, and maybe you could assign it to me. For starters can i just ask in which file is this component implemented? Thanks a lot and have a nice day :)\n\nHi @DianaSellarova,  Thanks for showing interest in this project. You can start working on this issue after signing CLA as asked [here](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#setting-things-up). :)\r\n\r\nAlso, I have updated the issue header with a pointer to the template file. please check! :)\n\n@DubeySandeep thank you very much :)\n\n@DianaSellarova, any update on this? \n\n@DubeySandeep i'll have it finished today :)\n\nHi @DianaSellarova, how is it going?\n\n<img width=\"854\" alt=\"screenshot 2018-11-11 at 11 52 44\" src=\"https://user-images.githubusercontent.com/22642474/48312006-92811680-e5a8-11e8-9b70-7825a598e27c.png\">\r\n\r\nSo far it looks something like this, i apologize that i did not finish it sooner but i had to finish other assignments to school and work.. Can i ask you one question, by removing hamburger menu you ment to remove it completely or move its content (those two option) directly into playbar?\n\nHi @DianaSellarova, Thanks for the update!\r\nIt looks great. (image above) :D\r\nCan you upload images for the different stage of this bar?\r\n- Before recording:\r\n   - If audio not available. (You have posted image for this above.)\r\n   - If audio available.\r\n- While Recording.\r\n- While converting audio to mp3.\r\n- After recording.\r\n- While saving.\r\n\r\n>  by removing hamburger menu you ment to remove it completely or move its content (those two option) directly into playbar?\r\n\r\nI mean to move it's content directly into the playbar!\r\n\r\nAlso, @christineycc might be able to help consult on the UI/UX for this bar, so please feel free to send her designs/mocks if you'd like feedback on them!\n\nHi @DubeySandeep i created a pull request https://github.com/oppia/oppia/pull/5868 so you can check it all out and leave some feedback. I did not know how to assign a reviewer for this so i dont know if it is my job or yours. \n\nHi, @DubeySandeep  I would really like to take up this issue as the previous PR was marked as stale and is now closed.\n\n@DubeySandeep Please let me know about this when you get a chance.\r\n\r\n\r\n\n\nHi @geetchoudhary, Sure, go ahead and start working on it. Thanks! :)\n\n@DubeySandeep , Just a quick question. Was the UI on the PR #5868 ok? Should I continue with it as a template and see what's wrong or create a new one from scratch?\n\n@geetchoudhary, you can continue with it and go through the doc and suggestions provided in the PR comments thread, Also do update the same doc with your changes while sending PR and link the doc in the PR comment, that way it will be easier for anyone to do a UI review! \n\nDe-assigning @DianaSellarova from this issue because of lack of response in the PR #5986.\r\n\r\nAs this issue is intended to be resolved before the end of Jan, assigning this to @rakshitkumarcse.  \n\n@DubeySandeep I would like to give a try on this issue. Can i work on it ?\n\n@jeeb0xical I am already working on it.\r\nThanks. :)\n\nOkay ! I will look for some other issue then @rakshitkumarcse . ",
  "pr_link": "https://github.com/oppia/oppia/pull/5868",
  "code_context": [
    {
      "filename": "core/templates/dev/head/pages/exploration_editor/translation_tab/AudioTranslationBarDirective.js",
      "content": "// Copyright 2018 The Oppia Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Directive for the audio translation bar.\n */\n// Constant for audio recording time limit.\noppia.constant('RECORDING_TIME_LIMIT', 300);\n\noppia.directive('audioTranslationBar', [\n  'UrlInterpolationService', function(UrlInterpolationService) {\n    return {\n      restrict: 'E',\n      scope: {\n        contentId: '=',\n        isTranslationTabBusy: '='\n      },\n      link: function(scope, elm) {\n        scope.getRecorderController();\n\n        $('.oppia-translation-tab').on('dragover', function(evt) {\n          evt.preventDefault();\n          if (!scope.showDropArea) {\n            scope.showDropArea = true;\n            scope.$digest();\n          }\n          return false;\n        });\n\n        $('.oppia-main-body').on('dragleave', function(evt) {\n          evt.preventDefault();\n          if (evt.pageX === 0 || evt.pageY === 0) {\n            scope.showDropArea = false;\n            scope.$digest();\n          }\n          return false;\n        });\n\n        $('.oppia-translation-tab').on('drop', function(evt) {\n          evt.preventDefault();\n          if (evt.target.classList.contains('oppia-drop-area-message')) {\n            files = evt.originalEvent.dataTransfer.files;\n            scope.openAddAudioTranslationModal(files);\n          }\n          scope.showDropArea = false;\n          scope.$digest();\n          return false;\n        });\n      },\n      templateUrl: UrlInterpolationService.getDirectiveTemplateUrl(\n        '/pages/exploration_editor/translation_tab/' +\n        'audio_translation_bar_directive.html'),\n      controller: [\n        '$scope', '$filter', '$timeout', '$uibModal', '$rootScope',\n        'StateContentIdsToAudioTranslationsService', 'IdGenerationService',\n        'AudioPlayerService', 'TranslationLanguageService', 'AlertsService',\n        'StateEditorService', 'ExplorationStatesService', 'EditabilityService',\n        'AssetsBackendApiService', 'recorderService', 'ContextService',\n        'RECORDING_TIME_LIMIT',\n        function(\n            $scope, $filter, $timeout, $uibModal, $rootScope,\n            StateContentIdsToAudioTranslationsService, IdGenerationService,\n            AudioPlayerService, TranslationLanguageService, AlertsService,\n            StateEditorService, ExplorationStatesService, EditabilityService,\n            AssetsBackendApiService, recorderService, ContextService,\n            RECORDING_TIME_LIMIT) {\n          $scope.RECORDER_ID = 'recorderId';\n          $scope.recordingTimeLimit = RECORDING_TIME_LIMIT;\n          $scope.audioBlob = null;\n          $scope.recorder = null;\n          $scope.unsupportedBrowser = false;\n          $scope.selectedRecording = false;\n          $scope.isAudioAvailable = false;\n          $scope.audioIsUpdating = false;\n          $scope.languageCode = null;\n          $scope.cannotRecord = false;\n          $scope.audioNeedsUpdate = false;\n          $scope.canTranslate = false;\n          $scope.showRecorderWarning = false;\n          $scope.audioLoadingIndicatorIsShown = false;\n          $scope.checkingMicrophonePermission = false;\n          $scope.showAudioTimer = true;\n\n          var saveContentIdsToAudioTranslationChanges = function() {\n            StateContentIdsToAudioTranslationsService.saveDisplayedValue();\n            var stateName = StateEditorService.getActiveStateName();\n            var value = StateContentIdsToAudioTranslationsService.displayed;\n            ExplorationStatesService.saveContentIdsToAudioTranslations(\n              stateName, value);\n          };\n\n          var getAvailableAudio = function(contentId, languageCode) {\n            if ($scope.contentId) {\n              return StateContentIdsToAudioTranslationsService\n                .displayed.getAudioTranslation(contentId, languageCode);\n            }\n          };\n\n          var generateNewFilename = function() {\n            return $scope.contentId + '-' +\n              $scope.languageCode + '-' +\n              IdGenerationService.generateNewId() + '.mp3';\n          };\n\n          $scope.onRecordStart = function() {\n            $scope.showRecorderWarning = true;\n            $scope.isTranslationTabBusy = true;\n          };\n\n          $scope.onConversionComplete = function() {\n            $rootScope.loadingMessage = '';\n          };\n\n          var getTranslationTabBusyMessage = function() {\n            var message = '';\n            if ($scope.recorder.status.isRecording) {\n              message = 'You haven\\'t finished recording. Please stop ' +\n                'recording and either save or cancel the recording.';\n            } else if ($scope.recorder.status.isConverting) {\n              message = 'It seems like recorded audio is still getting ' +\n                'converted into mp3. Please wait until the audio has finished' +\n                ' processing.';\n            } else if ($scope.showRecorderWarning) {\n              message = 'You haven\\'t saved your recording. Please save or ' +\n                'cancel the recording.';\n            }\n            return message;\n          };\n          var showPermissionAndStartRecording = function() {\n            $scope.checkingMicrophonePermission = true;\n            recorderService.showPermission({\n              onDenied: function() {\n                $scope.recordingPermissionDenied = true;\n                $scope.cannotRecord = true;\n                $scope.checkingMicrophonePermission = false;\n              },\n              onAllowed: function() {\n                $scope.recordingPermissionDenied = false;\n                $scope.cannotRecord = false;\n                $scope.recorder.startRecord();\n                $scope.selectedRecording = true;\n                $scope.checkingMicrophonePermission = false;\n              },\n              onClosed: function() {\n                $scope.recordingPermissionDenied = true;\n                $scope.cannotRecord = true;\n                $scope.checkingMicrophonePermission = false;\n              },\n            });\n          };\n\n          $scope.checkAndStartRecording = function() {\n            if (!$scope.recorder.isAvailable) {\n              $scope.unsupportedBrowser = true;\n              $scope.cannotRecord = true;\n            } else {\n              $scope.unsupportedBrowser = false;\n              showPermissionAndStartRecording();\n            }\n          };\n\n          $scope.toggleAudioNeedsUpdate = function() {\n            StateContentIdsToAudioTranslationsService.displayed\n              .toggleNeedsUpdateAttribute(\n                $scope.contentId, $scope.languageCode);\n            saveContentIdsToAudioTranslationChanges();\n            $scope.audioNeedsUpdate = !$scope.audioNeedsUpdate;\n          };\n\n          $scope.getRecorderController = function() {\n            $scope.recorder = recorderService.controller($scope.RECORDER_ID);\n          };\n\n          $scope.reRecord = function() {\n            $scope.initAudioBar();\n            $scope.selectedRecording = false;\n            showPermissionAndStartRecording();\n          };\n\n          $scope.cancelRecording = function() {\n            $scope.initAudioBar();\n            $scope.selectedRecording = false;\n            $scope.audioIsUpdating = false;\n            $scope.audioBlob = null;\n            $scope.showRecorderWarning = false;\n          };\n\n          $scope.updateAudio = function() {\n            AudioPlayerService.stop();\n            AudioPlayerService.clear();\n            $scope.audioBlob = null;\n            $scope.audioIsUpdating = true;\n            $scope.selectedRecording = false;\n            showPermissionAndStartRecording();\n          };\n\n          $scope.saveRecordedAudio = function() {\n            var filename = generateNewFilename();\n            var fileType = 'audio/mp3';\n            var contentId = $scope.contentId;\n            var languageCode = $scope.languageCode;\n            var recordedAudioFile = new File(\n              [$scope.audioBlob], filename, {type: fileType});\n            $scope.showRecorderWarning = false;\n            AssetsBackendApiService.saveAudio(\n              ContextService.getExplorationId(), filename,\n              recordedAudioFile).then(function() {\n              if ($scope.audioIsUpdating) {\n                StateContentIdsToAudioTranslationsService.displayed\n                  .deleteAudioTranslation(contentId, languageCode);\n                $scope.audioIsUpdating = false;\n              }\n              StateContentIdsToAudioTranslationsService.displayed\n                .addAudioTranslation(contentId, languageCode,\n                  filename, recordedAudioFile.size);\n              saveContentIdsToAudioTranslationChanges();\n              AlertsService.addSuccessMessage(\n                'Succesfuly uploaded recorded audio.');\n              $scope.initAudioBar();\n            }, function(errorResponse) {\n              AlertsService.addWarning(errorResponse.error);\n              $scope.initAudioBar();\n            });\n          };\n\n          $scope.$on('externalSave', function() {\n            if ($scope.recorder && $scope.recorder.status.isPlaying) {\n              $scope.recorder.playbackPause();\n            }\n            if (recorderService.getHandler()) {\n              recorderService.getHandler().clear();\n            }\n            AudioPlayerService.stop();\n            AudioPlayerService.clear();\n            $scope.audioBlob = null;\n          });\n\n          $scope.$watch('contentId', function() {\n            $scope.initAudioBar();\n          });\n\n          $scope.$on('refreshAudioTranslationBar', function() {\n            $scope.initAudioBar();\n          });\n\n          $scope.$on('showTranslationTabBusyModal', function() {\n            $scope.openTranslationTabBusyModal();\n          });\n\n          $scope.openTranslationTabBusyModal = function() {\n            $uibModal.open({\n              templateUrl: UrlInterpolationService.getDirectiveTemplateUrl(\n                '/pages/exploration_editor/translation_tab/' +\n                'translation_tab_busy_modal_directive.html'),\n              backdrop: true,\n              resolve: {\n                message: function() {\n                  return getTranslationTabBusyMessage();\n                }\n              },\n              controller: [\n                '$scope', '$uibModalInstance', 'message',\n                function( $scope, $uibModalInstance, message) {\n                  $scope.busyMessage = message;\n                  $scope.gotIt = function() {\n                    $uibModalInstance.dismiss('cancel');\n                  };\n                }\n              ]\n            });\n          };\n\n          $scope.playPauseUploadedAudioTranslation = function(languageCode) {\n            $scope.showAudioTimer = true;\n            if (!AudioPlayerService.isPlaying()) {\n              if (AudioPlayerService.isTrackLoaded()) {\n                AudioPlayerService.play();\n                $scope.showAudioTimer = true;\n              } else {\n                loadAndPlayAudioTranslation();\n              }\n            } else {\n              AudioPlayerService.pause();\n            }\n          };\n\n\n          var isCached = function(audioTranslation) {\n            return AssetsBackendApiService.isCached(audioTranslation.filename);\n          };\n\n          $scope.getUploadedAudioTimer = function() {\n            if (AudioPlayerService.isTrackLoaded()) {\n              $scope.showAudioTimer = true;\n              var currentTime = $filter('formatTimer')(AudioPlayerService\n                .getCurrentTime());\n              var duration = $filter('formatTimer')(AudioPlayerService\n                .getAudioDuration());\n              return currentTime + ' / ' + duration;\n            } else {\n              $scope.showAudioTimer = false;\n              return '--:-- / --:--';\n            }\n          };\n\n          $scope.isPlayingUploadedAudio = function() {\n            return AudioPlayerService.isPlaying();\n          };\n\n          var loadAndPlayAudioTranslation = function() {\n            $scope.audioLoadingIndicatorIsShown = true;\n            var audioTranslation = getAvailableAudio(\n              $scope.contentId, $scope.languageCode);\n            if (audioTranslation) {\n              AudioPlayerService.load(audioTranslation.filename)\n                .then(function() {\n                  $scope.audioLoadingIndicatorIsShown = false;\n                  $scope.showAudioTimer = true;\n                  AudioPlayerService.play();\n                });\n            }\n          };\n\n          $scope.initAudioBar = function() {\n            // This stops angular-recorder when user navigate while recording.\n            if ($scope.recorder) {\n              if ($scope.recorder.status.isPlaying) {\n                $scope.recorder.playbackPause();\n              }\n              if ($scope.recorder.status.isRecording &&\n                $scope.showRecorderWarning) {\n                $scope.recorder.stopRecord();\n                $rootScope.loadingMessage = 'loading';\n              }\n              if ($scope.recorder.status.isConverting) {\n                $rootScope.loadingMessage = 'loading';\n              }\n              if (recorderService && recorderService.getHandler()) {\n                recorderService.getHandler().stop();\n                recorderService.getHandler().clear();\n              }\n            }\n            $scope.isTranslationTabBusy = false;\n            AudioPlayerService.stop();\n            AudioPlayerService.clear();\n            $scope.showRecorderWarning = false;\n            $scope.languageCode = TranslationLanguageService\n              .getActiveLanguageCode();\n            $scope.canTranslate = EditabilityService.isTranslatable();\n            var audioTranslationObject = getAvailableAudio(\n              $scope.contentId, $scope.languageCode);\n            if (audioTranslationObject) {\n              $scope.isAudioAvailable = true;\n              $scope.isLoadingAudio = true;\n              $scope.selectedRecording = false;\n              $scope.audioNeedsUpdate = audioTranslationObject.needsUpdate;\n            } else {\n              $scope.isAudioAvailable = false;\n              $scope.audioBlob = null;\n              $scope.selectedRecording = false;\n            }\n          };\n\n          $scope.track = {\n            progress: function(progressPercentage) {\n              if (angular.isDefined(progressPercentage)) {\n                AudioPlayerService.setProgress(progressPercentage / 100);\n              }\n              return AudioPlayerService.getProgress() * 100;\n            }\n          };\n\n          $scope.openDeleteAudioTranslationModal = function() {\n            $uibModal.open({\n              templateUrl: UrlInterpolationService.getDirectiveTemplateUrl(\n                '/pages/exploration_editor/translation_tab/' +\n                'delete_audio_translation_modal_directive.html'),\n              backdrop: true,\n              controller: [\n                '$scope', '$uibModalInstance',\n                function( $scope, $uibModalInstance) {\n                  $scope.reallyDelete = function() {\n                    $uibModalInstance.close();\n                  };\n\n                  $scope.cancel = function() {\n                    $uibModalInstance.dismiss('cancel');\n                  };\n                }\n              ]\n            }).result.then(function(result) {\n              StateContentIdsToAudioTranslationsService.displayed\n                .deleteAudioTranslation($scope.contentId, $scope.languageCode);\n              saveContentIdsToAudioTranslationChanges();\n              $scope.initAudioBar();\n            });\n          };\n\n          $scope.openAddAudioTranslationModal = function(audioFile) {\n            $uibModal.open({\n              templateUrl: UrlInterpolationService.getDirectiveTemplateUrl(\n                '/pages/exploration_editor/translation_tab/' +\n                'add_audio_translation_modal_directive.html'),\n              backdrop: 'static',\n              resolve: {\n                audioFile: function() {\n                  return audioFile;\n                },\n                generatedFilename: function() {\n                  return generateNewFilename();\n                },\n                languageCode: function() {\n                  return $scope.languageCode;\n                },\n                isAudioAvailable: function() {\n                  return $scope.isAudioAvailable;\n                }\n              },\n              controller: [\n                '$scope', '$uibModalInstance', 'AlertsService', 'languageCode',\n                'ContextService', 'generatedFilename', 'isAudioAvailable',\n                'audioFile',\n                function(\n                    $scope, $uibModalInstance, AlertsService, languageCode,\n                    ContextService, generatedFilename, isAudioAvailable,\n                    audioFile) {\n                  var ERROR_MESSAGE_BAD_FILE_UPLOAD = (\n                    'There was an error uploading the audio file.');\n                  var BUTTON_TEXT_SAVE = 'Save';\n                  var BUTTON_TEXT_SAVING = 'Saving...';\n\n                  // Whether there was an error uploading the audio file.\n                  $scope.errorMessage = null;\n                  $scope.saveButtonText = BUTTON_TEXT_SAVE;\n                  $scope.saveInProgress = false;\n                  $scope.isAudioAvailable = isAudioAvailable;\n                  var uploadedFile = null;\n                  $scope.droppedFile = audioFile;\n\n                  $scope.isAudioTranslationValid = function() {\n                    return (\n                      uploadedFile !== null &&\n                      uploadedFile.size !== null &&\n                      uploadedFile.size > 0);\n                  };\n\n                  $scope.updateUploadedFile = function(file) {\n                    $scope.errorMessage = null;\n                    uploadedFile = file;\n                  };\n\n                  $scope.clearUploadedFile = function() {\n                    $scope.errorMessage = null;\n                    uploadedFile = null;\n                  };\n\n                  $scope.save = function() {\n                    if ($scope.isAudioTranslationValid()) {\n                      $scope.saveButtonText = BUTTON_TEXT_SAVING;\n                      $scope.saveInProgress = true;\n                      var explorationId = (\n                        ContextService.getExplorationId());\n                      AssetsBackendApiService.saveAudio(\n                        explorationId, generatedFilename, uploadedFile\n                      ).then(function() {\n                        $uibModalInstance.close({\n                          languageCode: languageCode,\n                          filename: generatedFilename,\n                          fileSizeBytes: uploadedFile.size\n                        });\n                      }, function(errorResponse) {\n                        $scope.errorMessage = (\n                          errorResponse.error || ERROR_MESSAGE_BAD_FILE_UPLOAD);\n                        uploadedFile = null;\n                        $scope.saveButtonText = BUTTON_TEXT_SAVE;\n                        $scope.saveInProgress = false;\n                      });\n                    }\n                  };\n\n                  $scope.cancel = function() {\n                    $uibModalInstance.dismiss('cancel');\n                    AlertsService.clearWarnings();\n                  };\n                }\n              ]\n            }).result.then(function(result) {\n              if ($scope.isAudioAvailable) {\n                StateContentIdsToAudioTranslationsService.displayed\n                  .deleteAudioTranslation(\n                    $scope.contentId, $scope.languageCode);\n              }\n              StateContentIdsToAudioTranslationsService.displayed\n                .addAudioTranslation(\n                  $scope.contentId, $scope.languageCode, result.filename,\n                  result.fileSizeBytes);\n              saveContentIdsToAudioTranslationChanges();\n              $scope.initAudioBar();\n            });\n          };\n\n          $scope.initAudioBar();\n        }]\n    };\n  }]);\n"
    },
    {
      "filename": "core/templates/dev/head/pages/exploration_editor/translation_tab/audio_translation_bar_directive.html",
      "content": "<div  class=\"oppia-drop-area\" ng-if=\"showDropArea\">\n  <div class=\"oppia-blur-background\"></div>\n  <div class=\"oppia-drop-area-message\">Drop your file here!</div>\n</div>\n<div class=\"oppia-audio-recording-bar\" ng-show=\"(!isAudioAvailable || audioIsUpdating) && !selectedRecording\">\n <div class=\"oppia-content-wrapper\">\n   <button class=\"btn oppia-audio-button\" disabled>\n     <i class=\"material-icons\">play_arrow</i>\n   </button>\n </div>\n <div class=\"oppia-content-wrapper oppia-audio-bar-info\">\n   <div ng-if=\"!cannotRecord && !checkingMicrophonePermission\">\n     No audio recorded.<span ng-if=\"canTranslate\"> Press <i class=\"material-icons\">mic</i>  to start recording.</span>\n   </div>\n   <div ng-if=\"checkingMicrophonePermission\">\n     Loading microphone.<loading-dots></loading-dots>\n   </div>\n   <div ng-if=\"recordingPermissionDenied && cannotRecord\">\n     You need to grant permission for this application to use your microphone.\n   </div>\n   <div ng-if=\"unsupportedBrowser && cannotRecord\">\n     Sorry, your browser does not support recording feature.\n   </div>\n </div>\n <div class=\"oppia-content-wrapper\">\n   <button\n     class=\"btn oppia-audio-button\"\n     uib-tooltip=\"Record\"\n     tooltip-placement=\"above\"\n     ng-click=\"checkAndStartRecording()\"\n     ng-disabled=\"!canTranslate || cannotRecord\">\n   <i class=\"material-icons\">&#xE029;</i>\n   </button>\n </div>\n <div class=\"oppia-content-wrapper\">\n   <button\n     class=\"btn oppia-audio-button\"\n     uib-tooltip=\"Upload\"\n     tooltip-placement=\"above\"\n     ng-click=\"openAddAudioTranslationModal()\"\n     ng-disabled=\"!canTranslate\">\n   <i class=\"material-icons\">&#xE2C6;</i>\n   </button>\n </div>\n</div>\n<div class=\"oppia-audio-recording-bar\" ng-show=\"selectedRecording\">\n  <ng-audio-recorder\n    id=\"<[RECORDER_ID]>\"\n    on-record-start=\"onRecordStart()\"\n    on-conversion-complete=\"onConversionComplete()\"\n    audio-model=\"audioBlob\"\n    time-limit=\"recordingTimeLimit\">\n    <div class=\"oppia-content-wrapper\">\n      <button class=\"btn oppia-audio-button\"\n        ng-click=\"recorder.status.isPlaying ? recorder.playbackPause() : recorder.playbackResume()\"\n        ng-disabled=\"recorder.status.isRecording || !recorder.audioModel\">\n        <i class=\"material-icons\">\n          {{recorder.status.isStopped || recorder.status.isPaused ? 'play_arrow' : 'pause']>\n        </i>\n      </button>\n    </div>\n    <div class=\"oppia-content-wrapper oppia-flex-1-wrapper\">\n      <div class=\"oppia-audio-visualiser\">\n        <div class=\"oppia-mp3-converting\" ng-if=\"recorder.status.isConverting\">\n          Converting to mp3<loading-dots></loading-dots>\n        </div>\n        <canvas-sizer id=\"analyser\">\n          <div class=\"oppia-recoding-analyzer\" ng-show=\"recorder.isHtml5 && recorder.status.isRecording\">\n            <ng-audio-recorder-analyzer height=\"84\" wave-color=\"black\" ></ng-audio-recorder-analyzer>\n          </div>\n          <div class=\"oppia-audio-wave-view\" ng-show=\"!recorder.status.isRecording && recorder.audioModel\" >\n            <ng-audio-recorder-wave-view wave-color=\"#009688\" progress-color=\"#ccc\" height=\"38\"></ng-audio-recorder-wave-view>\n          </div>\n        </canvas-sizer>\n      </div>\n    </div>\n    <div class=\"oppia-content-wrapper\" ng-if=\"recorder.status.isRecording\">\n      <div class=\"oppia-recording-timer\">\n          <[recorder.elapsedTime | formatTimer]> / <[recorder.timeLimit | formatTimer]>\n      </div>\n    </div>\n    <div class=\"oppia-content-wrapper\" ng-if=\"recorder.status.isRecording\">\n      <button class=\"btn oppia-audio-button\"\n        uib-tooltip=\"Stop\"\n        tooltip-placement=\"above\"\n        ng-click=\"recorder.stopRecord()\">\n          <i class=\"material-icons\">stop</i>\n        </button>\n    </div>\n  </ng-audio-recorder>\n  <div class=\"oppia-content-wrapper\" ng-if=\"!recorder.status.isRecording && audioBlob\">\n    <button\n      class=\"btn oppia-audio-button\"\n      uib-tooltip=\"Re-take\" tooltip-placement=\"above\"\n      ng-click=\"reRecord()\">\n      <i class=\"material-icons\">&#xE028;</i>\n    </button>\n  </div>\n  <div class=\"oppia-content-wrapper\" ng-if=\"!recorder.status.isRecording && audioBlob\">\n    <button class=\"btn oppia-audio-button\"\n            uib-tooltip=\"Save\" tooltip-placement=\"above\"\n            ng-click=\"saveRecordedAudio()\">\n      <i class=\"material-icons\">save</i>\n    </button>\n  </div>\n  <div class=\"oppia-content-wrapper\" ng-if=\"!recorder.status.isRecording && audioBlob\">\n    <button class=\"btn oppia-audio-button\"\n            uib-tooltip=\"Cancel\" tooltip-placement=\"above\"\n            ng-click=\"cancelRecording()\">\n      <i class=\"material-icons\">clear</i>\n    </button>\n  </div>\n</div>\n<div ng-if=\"isAudioAvailable && !audioIsUpdating\" class=\"oppia-audio-recording-bar\">\n  <div class=\"oppia-content-wrapper\">\n    <button\n      class=\"btn oppia-audio-button\"\n      ng-click=\"playPauseUploadedAudioTranslation()\">\n      <i class=\"material-icons\"><[isPlayingUploadedAudio() ? 'pause' : 'play_arrow']></i>\n    </button>\n  </div>\n  <div class=\"oppia-slider-section oppia-content-wrapper\">\n    <div ng-if=\"audioLoadingIndicatorIsShown\">\n      <md-progress-linear md-mode=\"indeterminate\"></md-progress-linear>\n    </div>\n    <div ng-if=\"!audioLoadingIndicatorIsShown\">\n      <md-slider ng-model=\"track.progress\" ng-model-options=\"{getterSetter: true}\" aria-label=\"audio-slider\">\n      </md-slider>\n    </div>\n  </div>\n  <div class=\"oppia-content-wrapper oppia-recording-timer\">\n    <div ng-if=\"showAudioTimer\">\n      <[getUploadedAudioTimer()]>\n    </div>\n  </div>\n  <div class=\"oppia-content-wrapper\">\n    <button\n      class=\"btn oppia-audio-button\"\n      ng-disabled=\"!canTranslate\"\n      uib-tooltip=\"Record new\"\n      tooltip-placement=\"above\"\n      ng-click=\"updateAudio()\">\n      <i class=\"material-icons\">&#xE028;</i>\n    </button>\n  </div>\n  <div class=\"oppia-content-wrapper\">\n    <button\n      class=\"btn oppia-audio-button\"\n      uib-tooltip=\"Delete\"\n      tooltip-placement=\"above\"\n      ng-disabled=\"!canTranslate\"\n      ng-click=\"openDeleteAudioTranslationModal()\">\n      <i class=\"material-icons\">&#xE872;</i>\n    </button>\n  </div>\n  <div class=\"oppia-content-wrapper\">\n    <button\n      class=\"btn oppia-audio-button\"\n      uib-tooltip=\"Upload audio\"\n      tooltip-placement=\"above\"\n      ng-disabled=\"!canTranslate\"\n      ng-click=\"openAddAudioTranslationModal()\">\n      <i class=\"material-icons\">publish</i>\n    </button>\n  </div>\n  <div class=\"oppia-content-wrapper\" ng-if=\"!audioNeedsUpdate\">\n    <button\n      class=\"btn oppia-audio-button\"\n      uib-tooltip=\"Mark need update\"\n      tooltip-placement=\"above\"\n      ng-disabled=\"!canTranslate\"\n      ng-click=\"toggleAudioNeedsUpdate()\">\n      <i class=\"material-icons\">update</i>\n    </button>\n  </div>\n  <div class=\"oppia-content-wrapper\" ng-if=\"audioNeedsUpdate\">\n    <button\n      class=\"btn oppia-audio-button\"\n      uib-tooltip=\"Unmark need update\"\n      tooltip-placement=\"above\"\n      ng-disabled=\"!canTranslate\"\n      ng-click=\"toggleAudioNeedsUpdate()\">\n      <i class=\"material-icons\">update</i>\n      <i class=\"material-icons oppia-unmark-icon\">clear</i>\n    </button>\n  </div>\n</div>\n<div class=\"oppia-translation-bottom-right-container\" ng-if=\"showRecorderWarning\">\n  <span>\n    <strong>Warning: </strong>Don't navigate to other tabs of this page before saving recorded audio, otherwise the recorded audio will be lost.\n  </span>\n</div>\n\n<style>\n  .oppia-drop-area {\n    border: 3px dashed #aaa;\n    height: 80%;\n    position: absolute;\n    top: 10%;\n    width: 100%;\n    z-index: 100;\n  }\n  .oppia-blur-background {\n    background-color: #fff;\n    height: 100%;\n    opacity: 0.8;\n    position: absolute;\n    width: 100%;\n  }\n  .oppia-drop-area-message {\n    font-size: 36px;\n    height: 100%;\n    padding: 20%;\n    position: absolute;\n    text-align: center;\n    width: 100%;\n  }\n  .oppia-audio-recording-bar {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    padding: 0px 10px;\n    background-color: #f7f7f7;\n  }\n  .audioRecorder {\n    display: flex;\n    align-items: center;\n  }\n  .audioRecorder > div:first-child {\n    width: 0 !important;\n  }\n  .oppia-content-wrapper {\n    margin: 0 10px;\n  }\n  .oppia-audio-bar-info {\n    background-color: #6f6f6f;\n    color: white;\n    padding: 5px 40px;\n    border-radius: 20px;\n    flex: 1;\n    text-align: center;\n    font-size: 12px;\n    height: 38px;\n    line-height: 27px;\n  }\n  .oppia-audio-button {\n    color: white;\n    background-color: #009688;\n    border-radius: 20px;\n    width: 38px;\n    padding-left: 6px;\n    transition: background-color .2s cubic-bezier(.35,0,.25,1);\n  }\n  .oppia-audio-button:hover {\n    color: white;\n    background-color: #01675d;\n  }\n  .oppia-audio-button[disabled] {\n    background-color: #9a9a9a;\n    pointer-events: auto;\n  }\n  .oppia-audio-button:focus {\n    color: white;\n  }\n  .oppia-audio-visualiser {\n    flex: 1;\n    height: 38px;\n  }\n  .oppia-flex-1-wrapper {\n    flex: 1;\n  }\n  .oppia-mp3-converting {\n    background-color: #6f6f6f;\n    color: white;\n    padding: 5px 40px;\n    border-radius: 20px;\n    flex: 1;\n    text-align: center;\n    font-size: 12px;\n    height: 38px;\n    line-height: 27px;\n  }\n  .oppia-recording-timer {\n    font-size: 14px;\n    width: 83px;\n    text-align: center;\n  }\n  .oppia-slider-section {\n    flex: 1;\n    background-color: #6f6f6f;\n    color: white;\n    padding: 0 15px;\n    border-radius: 20px;\n    text-align: center;\n    font-size: 12px;\n    height: 38px;\n  }\n  .oppia-translation-bottom-right-container {\n    position: relative;\n    top: 10px;\n    text-align: center;\n    font-size: 12px;\n    color: #ce133b;\n    letter-spacing: 0.5px;\n  }\n  .oppia-unmark-icon {\n    color: #fff;\n    font-size: 13px;\n    margin-top: -25px;\n    margin-left: -5px;\n    background-color: #7a7a7a;\n    border-radius: 25px;\n    font-weight: bold;\n    border: 1px solid #fff;\n  }\n  ng-audio-recorder {\n    width: 100%;\n  }\n  audio-translation-bar md-progress-linear {\n    padding-top: 12px;\n    height: 38px;\n  }\n  audio-translation-bar md-progress-linear.md-default-theme .md-container {\n    background-color: #f8f8f8;\n  }\n  audio-translation-bar md-progress-linear.md-default-theme .md-bar {\n    background-color: #009688;\n  }\n  audio-translation-bar md-slider .md-thumb-container {\n    left: 4px;\n  }\n  audio-translation-bar md-slider {\n    height: 38px;\n  }\n  audio-translation-bar md-slider .md-track-container {\n    top: 18px !important;\n    height: 1px;\n  }\n  audio-translation-bar md-slider .md-track {\n    background-color: #f8f8f8;\n  }\n  audio-translation-bar md-slider.md-default-theme .md-track-fill {\n    background-color: #009688;\n  }\n  audio-translation-bar md-slider .md-thumb {\n    top: 0;\n  }\n  audio-translation-bar md-slider.md-default-theme .md-thumb:after {\n    border-color: #ccc;\n    background-color: #009688;\n  }\n  audio-translation-bar canvas {\n    background: #e4e1d1;\n    max-width: unset;\n    border-radius: 50px;\n  }\n  audio-translation-bar .waveSurfer > wave:first-child {\n    border-radius: 50px;\n  }\n</style>\n"
    }
  ]
}