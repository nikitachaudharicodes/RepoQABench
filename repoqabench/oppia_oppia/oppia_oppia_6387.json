{
  "repo_name": "oppia_oppia",
  "issue_id": "6387",
  "issue_description": "# Remove remaining GLOBALS from HTML\n\n## Explanation\r\nThe aim of this project is to deprecate and remove all GLOBALS used in various html files across oppia codebase. This will help in static serving of the pages so that they can load faster.\r\nFor further explanation, please refer #5002.\r\n\r\nIf you'd like to help with this issue, please select a GLOBAL variable from the list below, put your name in parentheses next to it, and submit a PR after getting rid of the variable from GLOBALS in that file. Or select a GLOBAL from the list below, and comment on the issue that you'd be taking it up, and submit a PR. Once the PR is submitted, you can tick the checkboxes.\r\n\r\n## Remaining GLOBALS\r\n\r\n- maintenance.html\r\n  - [x] ADDITIONAL_ANGULAR_MODULES @Jamesjay4199 \r\n  - [x] DEV_MODE\r\n- admin.html\r\n  - [x] csrf_token @Jamesjay4199 \r\n  - [x] USER_EMAIL @Jamesjay4199 \r\n  - [x] LOGOUT_URL @abhaygupta97 \r\n  - [x] DEMO_EXPLORATIONS @Jamesjay4199 \r\n  - [x] DEMO_EXPLORATION_IDS @Jamesjay4199 \r\n  - [x] DEMO_COLLECTIONS @Jamesjay4199 \r\n  - [x] HUMAN_READABLE_CURRENT_TIME @Jamesjay4199 \r\n  - [x] CONTINUOUS_COMPUTATIONS_DATA @Jamesjay4199 \r\n  - [x] ONE_OFF_JOB_SPECS @Jamesjay4199 \r\n  - [x] UNFINISHED_JOB_DATA @Jamesjay4199 \r\n  - [x] RECENT_JOB_DATA @Jamesjay4199 \r\n  - [x] UPDATABLE_ROLES @Jamesjay4199 \r\n  - [x] VIEWABLE_ROLES @Jamesjay4199 \r\n  - [x] TOPIC_SUMMARIES @Jamesjay4199 \r\n  - [x] ROLE_GRAPH_DATA @Jamesjay4199 \r\n  - [x] userIsLoggedIn\r\n- creator_dashboard.html\r\n  - [x] DEFAULT_TWITTER_SHARE_MESSAGE_DASHBOARD @Jamesjay4199 \r\n  - [x] INTERACTION_SPECS\r\n  - [x] ALLOWED_INTERACTION_CATEGORIES @sophiewu6\r\n  - [x] DEFAULT_OBJECT_VALUES @Jamesjay4199 \r\n- exploration_player.html\r\n  - [x] collectionId @Jamesjay4199 \r\n  - [x] collectionTitle @Jamesjay4199 \r\n  - [x] DEFAULT_TWITTER_SHARE_MESSAGE_PLAYER @Jamesjay4199 \r\n  - [x] explorationVersion @Jamesjay4199 \r\n  - [x] INTERACTION_SPECS\r\n  - [x] canEdit @Jamesjay4199 \r\n- collection_editor.html\r\n  - [x] collectionId @Jamesjay4199 \r\n  - [x] TAG_REGEX @Jamesjay4199 \r\n- library.html @abhaygupta97 \r\n  - [x] LANGUAGE_CODES_AND_NAMES\r\n  - [x] SEARCH_DROPDOWN_CATEGORIES\r\n  - [x] PAGE_MODE\r\n- form_builder_test_page.html\r\n  - [x] ADDITIONAL_ANGULAR_MODULES\r\n- exploration_editor.html\r\n  - [x] ALLOWED_INTERACTION_CATEGORIES @sophiewu6 \r\n  - [x] can_edit\r\n  - [x] can_publish\r\n  - [x] can_translate\r\n  - [x] DEFAULT_OBJECT_VALUES @Jamesjay4199 \r\n  - [x] DEFAULT_TWITTER_SHARE_MESSAGE_EDITOR @Jamesjay4199 \r\n  - [x] INTERACTION_SPECS @Jamesjay4199 \r\n  - [x] INVALID_PARAMETER_NAMES @Jamesjay4199 \r\n  - [x] SHOW_TRAINABLE_UNRESOLVED_ANSWERS @Jamesjay4199 \r\n  - [x] TAG_REGEX @Jamesjay4199 \r\n  - [x] canDelete\r\n  - [x] canModifyRoles\r\n  - [x] canReleaseOwnership\r\n  - [x] canUnpublish\r\n- profile.html\r\n  - [x] PROFILE_USERNAME @Jamesjay4199 \r\n- skill_editor.html\r\n  - [x] INTERACTION_SPECS @Jamesjay4199 \r\n  - [x] ALLOWED_INTERACTION_CATEGORIES @sophiewu6 \r\n  - [x] DEFAULT_OBJECT_VALUES\r\n- signup.html @ShubhamBansal1997 \r\n  - [x] CAN_SEND_EMAILS\r\n- collection_player.html\r\n  - [x] collectionId @Jamesjay4199 \r\n  - [x] isLoggedIn @Jamesjay4199 \r\n  - [x] canEdit @Jamesjay4199 \r\n- topic_editor.html\r\n  - [x] INTERACTION_SPECS\r\n  - [x] ALLOWED_INTERACTION_CATEGORIES @sophiewu6 \r\n  - [x] DEFAULT_OBJECT_VALUES\r\n- preferences.html @abhaygupta97 \r\n  - [x] LANGUAGE_CODES_AND_NAMES\r\n",
  "issue_comments": [
    {
      "id": 470045557,
      "user": "prasadgujar",
      "body": "@abhaygupta97 can I take this issue?"
    },
    {
      "id": 470136076,
      "user": "abhaygupta97",
      "body": "@prasadgujar you need to choose a global variable from above list, then I will assign it to you."
    },
    {
      "id": 470192372,
      "user": "seanlip",
      "body": "Hi @prasadgujar, welcome! Please follow the instructions [here](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#setting-things-up) first to get started."
    },
    {
      "id": 470712077,
      "user": "ShubhamBansal1997",
      "body": "Hi @abhaygupta97 would like to work on this issue ```signup.html```"
    },
    {
      "id": 470807102,
      "user": "abhaygupta97",
      "body": "Hi @ShubhamBansal1997 assigned it to you. Go ahead! Thanks."
    },
    {
      "id": 470834360,
      "user": "Saumitra-Shukla",
      "body": "hi @abhaygupta97 may i work on this issue\r\ncreator_dashboard.html and skill_editor.html"
    },
    {
      "id": 470918297,
      "user": "abhaygupta97",
      "body": "Hi @Saumitra-Shukla you can choose any one GLOBAL variable from list given above and I will assign it to you."
    },
    {
      "id": 470932246,
      "user": "Saumitra-Shukla",
      "body": "@abhaygupta97 skill_editor.html"
    },
    {
      "id": 470935630,
      "user": "abhaygupta97",
      "body": "@Saumitra-Shukla choose any one GLOBAL among  `INTERACTION_SPECS`, `ALLOWED_INTERACTION_CATEGORIES` and `DEFAULT_OBJECT_VALUES` in skill_editor.html on which you want to work. I will assign it to you."
    },
    {
      "id": 470936645,
      "user": "Saumitra-Shukla",
      "body": "interaction_specs @abhaygupta97"
    },
    {
      "id": 470937535,
      "user": "abhaygupta97",
      "body": "@Saumitra-Shukla assigned it to you. Go ahead! Thanks."
    },
    {
      "id": 471069746,
      "user": "seanlip",
      "body": "@Saumitra-Shukla -- please make sure to follow the instructions [here](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#setting-things-up) first. Thanks!"
    },
    {
      "id": 472935976,
      "user": "bansalnitish",
      "body": "Hi @ShubhamBansal1997, @Saumitra-Shukla \r\nHow's this going on? Any updates regarding the same ? "
    },
    {
      "id": 472965018,
      "user": "prasadgujar",
      "body": "Hello everyone,\nSorry for the late reply(was hospitalized).\nI will looking forward to work again on the issue.\n\nOn Thu, 14 Mar, 2019, 9:33 PM Nitish Bansal, <notifications@github.com>\nwrote:\n\n> Hi @ShubhamBansal1997 <https://github.com/ShubhamBansal1997>,\n> @Saumitra-Shukla <https://github.com/Saumitra-Shukla>\n> How's this going on? Any updates regarding the same ?\n>\n> â€”\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/oppia/oppia/issues/6387#issuecomment-472935976>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AMQuWXTMTkRNBG0WXkiikgKlqZEn_8Udks5vWnK1gaJpZM4bc6TP>\n> .\n>\n"
    },
    {
      "id": 473033869,
      "user": "ShubhamBansal1997",
      "body": "@bansalnitish I have my mid sems till 16th march so will push by 17th March."
    },
    {
      "id": 473094159,
      "user": "bansalnitish",
      "body": "Sounds good, thanks for the update. All the Best for your MTE :)."
    },
    {
      "id": 473601525,
      "user": "sophiewu6",
      "body": "Hi, can I take ALLOWED_INTERACTION_CATEGORIES? Thanks!"
    },
    {
      "id": 473604754,
      "user": "ShubhamBansal1997",
      "body": "@bansalnitish I have raised the PR https://github.com/oppia/oppia/pull/6467"
    },
    {
      "id": 473617347,
      "user": "abhaygupta97",
      "body": "@sophiewu6 Assigned `ALLOWED_INTERACTION_CATEGORIES` to you. Go ahead! Thanks."
    },
    {
      "id": 479657221,
      "user": "import-keshav",
      "body": "@vojtechjelinek, why is it closed ?"
    },
    {
      "id": 480687363,
      "user": "esyang97",
      "body": "I would like to tackle `DEFAULT_OBJECT_VALUES` under `exploration_editor.html`.\r\n\r\nAs I work through the variable, would I be able to take up other global variables under exploration_editor.html as I see fit?"
    },
    {
      "id": 480698321,
      "user": "import-keshav",
      "body": "Yes sure @esyang97, I have assigned you go ahead.\r\nThanks "
    },
    {
      "id": 499295825,
      "user": "seanlip",
      "body": "Deassigning @esyang97 due to lack of response."
    },
    {
      "id": 525170113,
      "user": "jameesjohn",
      "body": "All Globals listed here has been removed."
    },
    {
      "id": 525171256,
      "user": "seanlip",
      "body": "That's great! Thanks @Jamesjay4199 and everyone else who contributed to this issue."
    }
  ],
  "text_context": "# Remove remaining GLOBALS from HTML\n\n## Explanation\r\nThe aim of this project is to deprecate and remove all GLOBALS used in various html files across oppia codebase. This will help in static serving of the pages so that they can load faster.\r\nFor further explanation, please refer #5002.\r\n\r\nIf you'd like to help with this issue, please select a GLOBAL variable from the list below, put your name in parentheses next to it, and submit a PR after getting rid of the variable from GLOBALS in that file. Or select a GLOBAL from the list below, and comment on the issue that you'd be taking it up, and submit a PR. Once the PR is submitted, you can tick the checkboxes.\r\n\r\n## Remaining GLOBALS\r\n\r\n- maintenance.html\r\n  - [x] ADDITIONAL_ANGULAR_MODULES @Jamesjay4199 \r\n  - [x] DEV_MODE\r\n- admin.html\r\n  - [x] csrf_token @Jamesjay4199 \r\n  - [x] USER_EMAIL @Jamesjay4199 \r\n  - [x] LOGOUT_URL @abhaygupta97 \r\n  - [x] DEMO_EXPLORATIONS @Jamesjay4199 \r\n  - [x] DEMO_EXPLORATION_IDS @Jamesjay4199 \r\n  - [x] DEMO_COLLECTIONS @Jamesjay4199 \r\n  - [x] HUMAN_READABLE_CURRENT_TIME @Jamesjay4199 \r\n  - [x] CONTINUOUS_COMPUTATIONS_DATA @Jamesjay4199 \r\n  - [x] ONE_OFF_JOB_SPECS @Jamesjay4199 \r\n  - [x] UNFINISHED_JOB_DATA @Jamesjay4199 \r\n  - [x] RECENT_JOB_DATA @Jamesjay4199 \r\n  - [x] UPDATABLE_ROLES @Jamesjay4199 \r\n  - [x] VIEWABLE_ROLES @Jamesjay4199 \r\n  - [x] TOPIC_SUMMARIES @Jamesjay4199 \r\n  - [x] ROLE_GRAPH_DATA @Jamesjay4199 \r\n  - [x] userIsLoggedIn\r\n- creator_dashboard.html\r\n  - [x] DEFAULT_TWITTER_SHARE_MESSAGE_DASHBOARD @Jamesjay4199 \r\n  - [x] INTERACTION_SPECS\r\n  - [x] ALLOWED_INTERACTION_CATEGORIES @sophiewu6\r\n  - [x] DEFAULT_OBJECT_VALUES @Jamesjay4199 \r\n- exploration_player.html\r\n  - [x] collectionId @Jamesjay4199 \r\n  - [x] collectionTitle @Jamesjay4199 \r\n  - [x] DEFAULT_TWITTER_SHARE_MESSAGE_PLAYER @Jamesjay4199 \r\n  - [x] explorationVersion @Jamesjay4199 \r\n  - [x] INTERACTION_SPECS\r\n  - [x] canEdit @Jamesjay4199 \r\n- collection_editor.html\r\n  - [x] collectionId @Jamesjay4199 \r\n  - [x] TAG_REGEX @Jamesjay4199 \r\n- library.html @abhaygupta97 \r\n  - [x] LANGUAGE_CODES_AND_NAMES\r\n  - [x] SEARCH_DROPDOWN_CATEGORIES\r\n  - [x] PAGE_MODE\r\n- form_builder_test_page.html\r\n  - [x] ADDITIONAL_ANGULAR_MODULES\r\n- exploration_editor.html\r\n  - [x] ALLOWED_INTERACTION_CATEGORIES @sophiewu6 \r\n  - [x] can_edit\r\n  - [x] can_publish\r\n  - [x] can_translate\r\n  - [x] DEFAULT_OBJECT_VALUES @Jamesjay4199 \r\n  - [x] DEFAULT_TWITTER_SHARE_MESSAGE_EDITOR @Jamesjay4199 \r\n  - [x] INTERACTION_SPECS @Jamesjay4199 \r\n  - [x] INVALID_PARAMETER_NAMES @Jamesjay4199 \r\n  - [x] SHOW_TRAINABLE_UNRESOLVED_ANSWERS @Jamesjay4199 \r\n  - [x] TAG_REGEX @Jamesjay4199 \r\n  - [x] canDelete\r\n  - [x] canModifyRoles\r\n  - [x] canReleaseOwnership\r\n  - [x] canUnpublish\r\n- profile.html\r\n  - [x] PROFILE_USERNAME @Jamesjay4199 \r\n- skill_editor.html\r\n  - [x] INTERACTION_SPECS @Jamesjay4199 \r\n  - [x] ALLOWED_INTERACTION_CATEGORIES @sophiewu6 \r\n  - [x] DEFAULT_OBJECT_VALUES\r\n- signup.html @ShubhamBansal1997 \r\n  - [x] CAN_SEND_EMAILS\r\n- collection_player.html\r\n  - [x] collectionId @Jamesjay4199 \r\n  - [x] isLoggedIn @Jamesjay4199 \r\n  - [x] canEdit @Jamesjay4199 \r\n- topic_editor.html\r\n  - [x] INTERACTION_SPECS\r\n  - [x] ALLOWED_INTERACTION_CATEGORIES @sophiewu6 \r\n  - [x] DEFAULT_OBJECT_VALUES\r\n- preferences.html @abhaygupta97 \r\n  - [x] LANGUAGE_CODES_AND_NAMES\r\n\n\n@abhaygupta97 can I take this issue?\n\n@prasadgujar you need to choose a global variable from above list, then I will assign it to you.\n\nHi @prasadgujar, welcome! Please follow the instructions [here](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#setting-things-up) first to get started.\n\nHi @abhaygupta97 would like to work on this issue ```signup.html```\n\nHi @ShubhamBansal1997 assigned it to you. Go ahead! Thanks.\n\nhi @abhaygupta97 may i work on this issue\r\ncreator_dashboard.html and skill_editor.html\n\nHi @Saumitra-Shukla you can choose any one GLOBAL variable from list given above and I will assign it to you.\n\n@abhaygupta97 skill_editor.html\n\n@Saumitra-Shukla choose any one GLOBAL among  `INTERACTION_SPECS`, `ALLOWED_INTERACTION_CATEGORIES` and `DEFAULT_OBJECT_VALUES` in skill_editor.html on which you want to work. I will assign it to you.\n\ninteraction_specs @abhaygupta97\n\n@Saumitra-Shukla assigned it to you. Go ahead! Thanks.\n\n@Saumitra-Shukla -- please make sure to follow the instructions [here](https://github.com/oppia/oppia/wiki/Contributing-code-to-Oppia#setting-things-up) first. Thanks!\n\nHi @ShubhamBansal1997, @Saumitra-Shukla \r\nHow's this going on? Any updates regarding the same ? \n\nHello everyone,\nSorry for the late reply(was hospitalized).\nI will looking forward to work again on the issue.\n\nOn Thu, 14 Mar, 2019, 9:33 PM Nitish Bansal, <notifications@github.com>\nwrote:\n\n> Hi @ShubhamBansal1997 <https://github.com/ShubhamBansal1997>,\n> @Saumitra-Shukla <https://github.com/Saumitra-Shukla>\n> How's this going on? Any updates regarding the same ?\n>\n> â€”\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/oppia/oppia/issues/6387#issuecomment-472935976>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AMQuWXTMTkRNBG0WXkiikgKlqZEn_8Udks5vWnK1gaJpZM4bc6TP>\n> .\n>\n\n\n@bansalnitish I have my mid sems till 16th march so will push by 17th March.\n\nSounds good, thanks for the update. All the Best for your MTE :).\n\nHi, can I take ALLOWED_INTERACTION_CATEGORIES? Thanks!\n\n@bansalnitish I have raised the PR https://github.com/oppia/oppia/pull/6467\n\n@sophiewu6 Assigned `ALLOWED_INTERACTION_CATEGORIES` to you. Go ahead! Thanks.\n\n@vojtechjelinek, why is it closed ?\n\nI would like to tackle `DEFAULT_OBJECT_VALUES` under `exploration_editor.html`.\r\n\r\nAs I work through the variable, would I be able to take up other global variables under exploration_editor.html as I see fit?\n\nYes sure @esyang97, I have assigned you go ahead.\r\nThanks \n\nDeassigning @esyang97 due to lack of response.\n\nAll Globals listed here has been removed.\n\nThat's great! Thanks @Jamesjay4199 and everyone else who contributed to this issue.",
  "pr_link": "https://github.com/oppia/oppia/pull/6467",
  "code_context": [
    {
      "filename": "core/controllers/profile.py",
      "content": "# Copyright 2014 The Oppia Authors. All Rights Reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS-IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n\"\"\"Controllers for the profile page.\"\"\"\n\nimport re\n\nfrom core.controllers import acl_decorators\nfrom core.controllers import base\nfrom core.domain import email_manager\nfrom core.domain import role_services\nfrom core.domain import subscription_services\nfrom core.domain import summary_services\nfrom core.domain import user_services\nfrom core.platform import models\nimport feconf\nimport utils\n\ncurrent_user_services = models.Registry.import_current_user_services()\n\n\nclass ProfilePage(base.BaseHandler):\n    \"\"\"The world-viewable profile page.\"\"\"\n\n    @acl_decorators.open_access\n    def get(self, username):\n        \"\"\"Handles GET requests for the publicly-viewable profile page.\"\"\"\n\n        user_settings = user_services.get_user_settings_from_username(username)\n\n        if not user_settings:\n            raise self.PageNotFoundException\n\n        self.values.update({\n            'PROFILE_USERNAME': user_settings.username,\n        })\n        self.render_template('pages/profile/profile.html')\n\n\nclass ProfileHandler(base.BaseHandler):\n    \"\"\"Provides data for the profile page.\"\"\"\n\n    GET_HANDLER_ERROR_RETURN_TYPE = feconf.HANDLER_TYPE_JSON\n\n    @acl_decorators.open_access\n    def get(self, username):\n        \"\"\"Handles GET requests.\"\"\"\n\n        user_settings = user_services.get_user_settings_from_username(username)\n        if not user_settings:\n            raise self.PageNotFoundException\n\n        created_exp_summary_dicts = []\n        edited_exp_summary_dicts = []\n\n        subscriber_ids = subscription_services.get_all_subscribers_of_creator(\n            user_settings.user_id)\n        is_already_subscribed = (self.user_id in subscriber_ids)\n        is_user_visiting_own_profile = (self.user_id == user_settings.user_id)\n\n        user_contributions = user_services.get_user_contributions(\n            user_settings.user_id)\n        if user_contributions:\n            created_exp_summary_dicts = (\n                summary_services.get_displayable_exp_summary_dicts_matching_ids(\n                    user_contributions.created_exploration_ids))\n            edited_exp_summary_dicts = (\n                summary_services.get_displayable_exp_summary_dicts_matching_ids(\n                    user_contributions.edited_exploration_ids))\n        profile_is_of_current_user = (self.username == username)\n\n        self.values.update({\n            'profile_is_of_current_user': profile_is_of_current_user,\n            'profile_username': user_settings.username,\n            'user_bio': user_settings.user_bio,\n            'subject_interests': user_settings.subject_interests,\n            'first_contribution_msec': (\n                user_settings.first_contribution_msec\n                if user_settings.first_contribution_msec else None),\n            'profile_picture_data_url': user_settings.profile_picture_data_url,\n            'user_impact_score': user_services.get_user_impact_score(\n                user_settings.user_id),\n            'created_exp_summary_dicts': created_exp_summary_dicts,\n            'edited_exp_summary_dicts': edited_exp_summary_dicts,\n            'is_already_subscribed': is_already_subscribed,\n            'is_user_visiting_own_profile': is_user_visiting_own_profile\n        })\n        self.render_json(self.values)\n\n\nclass PreferencesPage(base.BaseHandler):\n    \"\"\"The preferences page.\"\"\"\n\n    @acl_decorators.can_manage_own_profile\n    def get(self):\n        \"\"\"Handles GET requests.\"\"\"\n        self.values.update({\n            'meta_description': feconf.PREFERENCES_PAGE_DESCRIPTION,\n        })\n        self.render_template('pages/preferences/preferences.html')\n\n\nclass PreferencesHandler(base.BaseHandler):\n    \"\"\"Provides data for the preferences page.\"\"\"\n\n    GET_HANDLER_ERROR_RETURN_TYPE = feconf.HANDLER_TYPE_JSON\n\n    @acl_decorators.can_manage_own_profile\n    def get(self):\n        \"\"\"Handles GET requests.\"\"\"\n        user_settings = user_services.get_user_settings(self.user_id)\n        user_email_preferences = user_services.get_email_preferences(\n            self.user_id)\n\n        creators_subscribed_to = subscription_services.get_all_creators_subscribed_to( # pylint: disable=line-too-long\n            self.user_id)\n        creators_settings = user_services.get_users_settings(\n            creators_subscribed_to)\n        subscription_list = []\n\n        for index, creator_settings in enumerate(creators_settings):\n            subscription_summary = {\n                'creator_picture_data_url': (\n                    creator_settings.profile_picture_data_url),\n                'creator_username': creator_settings.username,\n                'creator_impact': (\n                    user_services.get_user_impact_score(\n                        creators_subscribed_to[index]))\n            }\n\n            subscription_list.append(subscription_summary)\n\n        self.values.update({\n            'preferred_language_codes': user_settings.preferred_language_codes,\n            'preferred_site_language_code': (\n                user_settings.preferred_site_language_code),\n            'preferred_audio_language_code': (\n                user_settings.preferred_audio_language_code),\n            'profile_picture_data_url': user_settings.profile_picture_data_url,\n            'default_dashboard': user_settings.default_dashboard,\n            'user_bio': user_settings.user_bio,\n            'subject_interests': user_settings.subject_interests,\n            'can_receive_email_updates': (\n                user_email_preferences.can_receive_email_updates),\n            'can_receive_editor_role_email': (\n                user_email_preferences.can_receive_editor_role_email),\n            'can_receive_feedback_message_email': (\n                user_email_preferences.can_receive_feedback_message_email),\n            'can_receive_subscription_email': (\n                user_email_preferences.can_receive_subscription_email),\n            'subscription_list': subscription_list\n        })\n        self.render_json(self.values)\n\n    @acl_decorators.can_manage_own_profile\n    def put(self):\n        \"\"\"Handles POST requests.\"\"\"\n        update_type = self.payload.get('update_type')\n        data = self.payload.get('data')\n\n        if update_type == 'user_bio':\n            if len(data) > feconf.MAX_BIO_LENGTH_IN_CHARS:\n                raise self.InvalidInputException(\n                    'User bio exceeds maximum character limit: %s'\n                    % feconf.MAX_BIO_LENGTH_IN_CHARS)\n            else:\n                user_services.update_user_bio(self.user_id, data)\n        elif update_type == 'subject_interests':\n            user_services.update_subject_interests(self.user_id, data)\n        elif update_type == 'preferred_language_codes':\n            user_services.update_preferred_language_codes(self.user_id, data)\n        elif update_type == 'preferred_site_language_code':\n            user_services.update_preferred_site_language_code(\n                self.user_id, data)\n        elif update_type == 'preferred_audio_language_code':\n            user_services.update_preferred_audio_language_code(\n                self.user_id, data)\n        elif update_type == 'profile_picture_data_url':\n            user_services.update_profile_picture_data_url(self.user_id, data)\n        elif update_type == 'default_dashboard':\n            user_services.update_user_default_dashboard(self.user_id, data)\n        elif update_type == 'email_preferences':\n            user_services.update_email_preferences(\n                self.user_id, data['can_receive_email_updates'],\n                data['can_receive_editor_role_email'],\n                data['can_receive_feedback_message_email'],\n                data['can_receive_subscription_email'])\n        else:\n            raise self.InvalidInputException(\n                'Invalid update type: %s' % update_type)\n\n        self.render_json({})\n\n\nclass ProfilePictureHandler(base.BaseHandler):\n    \"\"\"Provides the dataURI of the user's profile picture, or none if no user\n    picture is uploaded.\n    \"\"\"\n\n    GET_HANDLER_ERROR_RETURN_TYPE = feconf.HANDLER_TYPE_JSON\n\n    @acl_decorators.can_manage_own_profile\n    def get(self):\n        \"\"\"Handles GET requests.\"\"\"\n        user_settings = user_services.get_user_settings(self.user_id)\n        self.values.update({\n            'profile_picture_data_url': user_settings.profile_picture_data_url\n        })\n        self.render_json(self.values)\n\n\nclass ProfilePictureHandlerByUsernameHandler(base.BaseHandler):\n    \"\"\"Provides the dataURI of the profile picture of the specified user,\n    or None if no user picture is uploaded for the user with that ID.\n    \"\"\"\n\n    GET_HANDLER_ERROR_RETURN_TYPE = feconf.HANDLER_TYPE_JSON\n\n    @acl_decorators.open_access\n    def get(self, username):\n        user_id = user_services.get_user_id_from_username(username)\n        if user_id is None:\n            raise self.PageNotFoundException\n\n        user_settings = user_services.get_user_settings(user_id)\n        self.values.update({\n            'profile_picture_data_url_for_username': (\n                user_settings.profile_picture_data_url)\n        })\n        self.render_json(self.values)\n\n\nclass SignupPage(base.BaseHandler):\n    \"\"\"The page which prompts for username and acceptance of terms.\"\"\"\n\n    REDIRECT_UNFINISHED_SIGNUPS = False\n\n    @acl_decorators.require_user_id_else_redirect_to_homepage\n    def get(self):\n        \"\"\"Handles GET requests.\"\"\"\n        return_url = str(self.request.get('return_url', self.request.uri))\n        # Validating return_url for no external redirections.\n        if re.match('^/[^//]', return_url) is None:\n            return_url = '/'\n        if user_services.has_fully_registered(self.user_id):\n            self.redirect(return_url)\n            return\n\n        self.values.update({\n            'meta_description': feconf.SIGNUP_PAGE_DESCRIPTION,\n            'CAN_SEND_EMAILS': feconf.CAN_SEND_EMAILS,\n        })\n        self.render_template('pages/signup/signup.html')\n\n\nclass SignupHandler(base.BaseHandler):\n    \"\"\"Provides data for the editor prerequisites page.\"\"\"\n\n    REDIRECT_UNFINISHED_SIGNUPS = False\n\n    GET_HANDLER_ERROR_RETURN_TYPE = feconf.HANDLER_TYPE_JSON\n\n    @acl_decorators.require_user_id_else_redirect_to_homepage\n    def get(self):\n        \"\"\"Handles GET requests.\"\"\"\n        user_settings = user_services.get_user_settings(self.user_id)\n        self.render_json({\n            'can_send_emails': feconf.CAN_SEND_EMAILS,\n            'has_agreed_to_latest_terms': (\n                user_settings.last_agreed_to_terms and\n                user_settings.last_agreed_to_terms >=\n                feconf.REGISTRATION_PAGE_LAST_UPDATED_UTC),\n            'has_ever_registered': bool(\n                user_settings.username and user_settings.last_agreed_to_terms),\n            'username': user_settings.username,\n        })\n\n    @acl_decorators.require_user_id_else_redirect_to_homepage\n    def post(self):\n        \"\"\"Handles POST requests.\"\"\"\n        username = self.payload.get('username')\n        agreed_to_terms = self.payload.get('agreed_to_terms')\n        default_dashboard = self.payload.get('default_dashboard')\n        can_receive_email_updates = self.payload.get(\n            'can_receive_email_updates')\n\n        has_ever_registered = user_services.has_ever_registered(self.user_id)\n        has_fully_registered = user_services.has_fully_registered(self.user_id)\n\n        if has_fully_registered:\n            self.render_json({})\n            return\n\n        if not isinstance(agreed_to_terms, bool) or not agreed_to_terms:\n            raise self.InvalidInputException(\n                'In order to edit explorations on this site, you will '\n                'need to accept the license terms.')\n        else:\n            user_services.record_agreement_to_terms(self.user_id)\n\n        if not user_services.get_username(self.user_id):\n            try:\n                user_services.set_username(self.user_id, username)\n            except utils.ValidationError as e:\n                raise self.InvalidInputException(e)\n\n        if can_receive_email_updates is not None:\n            user_services.update_email_preferences(\n                self.user_id, can_receive_email_updates,\n                feconf.DEFAULT_EDITOR_ROLE_EMAIL_PREFERENCE,\n                feconf.DEFAULT_FEEDBACK_MESSAGE_EMAIL_PREFERENCE,\n                feconf.DEFAULT_SUBSCRIPTION_EMAIL_PREFERENCE)\n\n        # Note that an email is only sent when the user registers for the first\n        # time.\n        if feconf.CAN_SEND_EMAILS and not has_ever_registered:\n            email_manager.send_post_signup_email(self.user_id)\n\n        user_services.generate_initial_profile_picture(self.user_id)\n\n        if not has_ever_registered:\n            # Set the default dashboard for new users.\n            user_services.update_user_default_dashboard(\n                self.user_id, default_dashboard)\n\n        self.render_json({})\n\n\nclass UsernameCheckHandler(base.BaseHandler):\n    \"\"\"Checks whether a username has already been taken.\"\"\"\n\n    REDIRECT_UNFINISHED_SIGNUPS = False\n\n    @acl_decorators.require_user_id_else_redirect_to_homepage\n    def post(self):\n        \"\"\"Handles POST requests.\"\"\"\n        username = self.payload.get('username')\n        try:\n            user_services.UserSettings.require_valid_username(username)\n        except utils.ValidationError as e:\n            raise self.InvalidInputException(e)\n\n        username_is_taken = user_services.is_username_taken(username)\n        self.render_json({\n            'username_is_taken': username_is_taken,\n        })\n\n\nclass SiteLanguageHandler(base.BaseHandler):\n    \"\"\"Changes the preferred system language in the user's preferences.\"\"\"\n\n    @acl_decorators.can_manage_own_profile\n    def put(self):\n        \"\"\"Handles PUT requests.\"\"\"\n        site_language_code = self.payload.get('site_language_code')\n        user_services.update_preferred_site_language_code(\n            self.user_id, site_language_code)\n        self.render_json({})\n\n\nclass UserInfoHandler(base.BaseHandler):\n    \"\"\"Provides info about user.\"\"\"\n\n    GET_HANDLER_ERROR_RETURN_TYPE = feconf.HANDLER_TYPE_JSON\n\n    @acl_decorators.require_user_id\n    def get(self):\n        \"\"\"Handles GET requests.\"\"\"\n\n        user_actions = user_services.UserActionsInfo(self.user_id).actions\n        user_settings = user_services.get_user_settings(\n            self.user_id, strict=False)\n        self.render_json({\n            'is_moderator': (\n                user_services.is_at_least_moderator(self.user_id)),\n            'is_admin': user_services.is_admin(self.user_id),\n            'is_super_admin': (\n                current_user_services.is_current_user_super_admin()),\n            'is_topic_manager': user_services.is_topic_manager(self.user_id),\n            'can_create_collections': bool(\n                role_services.ACTION_CREATE_COLLECTION in user_actions),\n            'preferred_site_language_code': (\n                user_settings.preferred_site_language_code),\n            'username': user_settings.username,\n            'user_is_logged_in': True\n        })\n\n\nclass UrlHandler(base.BaseHandler):\n    \"\"\"The handler for generating login URL.\"\"\"\n\n    GET_HANDLER_ERROR_RETURN_TYPE = feconf.HANDLER_TYPE_JSON\n\n    @acl_decorators.open_access\n    def get(self):\n        login_url = None\n        if self.user_id:\n            self.render_json({'login_url': None})\n        else:\n            if self.request and self.request.get('current_url'):\n                target_url = (\n                    '/' if self.request.get('current_url').endswith(\n                        feconf.SPLASH_URL)\n                    else self.request.get('current_url'))\n                login_url = (\n                    current_user_services.create_login_url(target_url))\n                self.render_json({'login_url': login_url})\n            else:\n                raise self.InvalidInputException(\n                    'Incomplete or empty GET parameters passed'\n                )\n"
    },
    {
      "filename": "core/templates/dev/head/pages/signup/Signup.js",
      "content": "// Copyright 2014 The Oppia Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Data and controllers for the Oppia profile page.\n */\n\noppia.controller('Signup', [\n  '$http', '$rootScope', '$scope', '$uibModal', 'AlertsService',\n  'FocusManagerService',\n  'SiteAnalyticsService', 'UrlInterpolationService', 'UrlService',\n  'SITE_NAME',\n  function(\n      $http, $rootScope, $scope, $uibModal, AlertsService,\n      FocusManagerService,\n      SiteAnalyticsService, UrlInterpolationService, UrlService,\n      SITE_NAME) {\n    var _SIGNUP_DATA_URL = '/signuphandler/data';\n    $rootScope.loadingMessage = 'I18N_SIGNUP_LOADING';\n    $scope.warningI18nCode = '';\n    $scope.siteName = SITE_NAME;\n    $scope.submissionInProcess = false;\n\n    $http.get(_SIGNUP_DATA_URL).then(function(response) {\n      var data = response.data;\n      $rootScope.loadingMessage = '';\n      $scope.username = data.username;\n      $scope.hasEverRegistered = data.has_ever_registered;\n      $scope.hasAgreedToLatestTerms = data.has_agreed_to_latest_terms;\n      $scope.showEmailPreferencesForm = data.can_send_emails;\n      $scope.hasUsername = Boolean($scope.username);\n      FocusManagerService.setFocus('usernameInputField');\n    });\n\n    $scope.blurredAtLeastOnce = false;\n    $scope.canReceiveEmailUpdates = null;\n\n    $scope.isFormValid = function() {\n      return (\n        $scope.hasAgreedToLatestTerms &&\n        ($scope.hasUsername || !$scope.getWarningText($scope.username))\n      );\n    };\n\n    $scope.showLicenseExplanationModal = function() {\n      $uibModal.open({\n        templateUrl: UrlInterpolationService.getDirectiveTemplateUrl(\n          '/pages/signup/licence_explanation_modal_directive.html'),\n        backdrop: true,\n        resolve: {},\n        controller: [\n          '$scope', '$uibModalInstance', 'SITE_NAME',\n          function($scope, $uibModalInstance, SITE_NAME) {\n            $scope.siteName = SITE_NAME;\n            $scope.close = function() {\n              $uibModalInstance.dismiss('cancel');\n            };\n          }\n        ]\n      });\n    };\n\n    $scope.onUsernameInputFormBlur = function(username) {\n      if ($scope.hasUsername) {\n        return;\n      }\n      AlertsService.clearWarnings();\n      $scope.blurredAtLeastOnce = true;\n      $scope.updateWarningText(username);\n      if (!$scope.warningI18nCode) {\n        $http.post('usernamehandler/data', {\n          username: $scope.username\n        }).then(function(response) {\n          if (response.data.username_is_taken) {\n            $scope.warningI18nCode = 'I18N_SIGNUP_ERROR_USERNAME_TAKEN';\n          }\n        });\n      }\n    };\n\n    // Returns the warning text corresponding to the validation error for the\n    // given username, or an empty string if the username is valid.\n    $scope.updateWarningText = function(username) {\n      var alphanumeric = /^[A-Za-z0-9]+$/;\n      var admin = /admin/i;\n      var oppia = /oppia/i;\n\n      if (!username) {\n        $scope.warningI18nCode = 'I18N_SIGNUP_ERROR_NO_USERNAME';\n      } else if (username.indexOf(' ') !== -1) {\n        $scope.warningI18nCode = 'I18N_SIGNUP_ERROR_USERNAME_WITH_SPACES';\n      } else if (username.length > 50) {\n        $scope.warningI18nCode = 'I18N_SIGNUP_ERROR_USERNAME_MORE_50_CHARS';\n      } else if (!alphanumeric.test(username)) {\n        $scope.warningI18nCode = 'I18N_SIGNUP_ERROR_USERNAME_ONLY_ALPHANUM';\n      } else if (admin.test(username)) {\n        $scope.warningI18nCode = 'I18N_SIGNUP_ERROR_USERNAME_WITH_ADMIN';\n      } else if (oppia.test(username)) {\n        $scope.warningI18nCode = 'I18N_SIGNUP_ERROR_USERNAME_NOT_AVAILABLE';\n      } else {\n        $scope.warningI18nCode = '';\n      }\n    };\n\n    $scope.onSelectEmailPreference = function() {\n      $scope.emailPreferencesWarningText = '';\n    };\n\n    $scope.submitPrerequisitesForm = function(\n        agreedToTerms, username, canReceiveEmailUpdates) {\n      if (!agreedToTerms) {\n        AlertsService.addWarning('I18N_SIGNUP_ERROR_MUST_AGREE_TO_TERMS');\n        return;\n      }\n\n      if (!$scope.hasUsername && $scope.warningI18nCode) {\n        return;\n      }\n\n      var requestParams = {\n        agreed_to_terms: agreedToTerms,\n        can_receive_email_updates: null\n      };\n\n      var defaultDashboard = constants.DASHBOARD_TYPE_LEARNER;\n      var returnUrl = window.decodeURIComponent(\n        UrlService.getUrlParams().return_url);\n\n      if (returnUrl.indexOf('creator_dashboard') !== -1) {\n        defaultDashboard = constants.DASHBOARD_TYPE_CREATOR;\n      } else {\n        defaultDashboard = constants.DASHBOARD_TYPE_LEARNER;\n      }\n\n      requestParams = {\n        agreed_to_terms: agreedToTerms,\n        can_receive_email_updates: null,\n        default_dashboard: defaultDashboard\n      };\n\n      if (!$scope.hasUsername) {\n        requestParams.username = username;\n      }\n\n      if (GLOBALS.CAN_SEND_EMAILS && !$scope.hasUsername) {\n        if (canReceiveEmailUpdates === null) {\n          $scope.emailPreferencesWarningText = 'I18N_SIGNUP_FIELD_REQUIRED';\n          return;\n        }\n\n        if (canReceiveEmailUpdates === 'yes') {\n          requestParams.can_receive_email_updates = true;\n        } else if (canReceiveEmailUpdates === 'no') {\n          requestParams.can_receive_email_updates = false;\n        } else {\n          throw Error(\n            'Invalid value for email preferences: ' + canReceiveEmailUpdates);\n        }\n      }\n\n      SiteAnalyticsService.registerNewSignupEvent();\n\n      $scope.submissionInProcess = true;\n      $http.post(_SIGNUP_DATA_URL, requestParams).then(function() {\n        window.location = window.decodeURIComponent(\n          UrlService.getUrlParams().return_url);\n      }, function(rejection) {\n        if (\n          rejection.data && rejection.data.status_code === 401) {\n          $scope.showRegistrationSessionExpiredModal();\n        }\n        $scope.submissionInProcess = false;\n      });\n    };\n\n    $scope.showRegistrationSessionExpiredModal = function() {\n      $uibModal.open({\n        templateUrl: UrlInterpolationService.getDirectiveTemplateUrl(\n          '/pages/signup/registration_session_expired_modal_directive.html'),\n        backdrop: 'static',\n        keyboard: false,\n        resolve: {},\n        controller: [\n          '$scope', '$uibModalInstance', 'SiteAnalyticsService',\n          'UserService', '$timeout', '$window',\n          function($scope, $uibModalInstance, SiteAnalyticsService,\n              UserService, $timeout, $window) {\n            $scope.continueRegistration = function() {\n              UserService.getLoginUrlAsync().then(\n                function(loginUrl) {\n                  if (loginUrl) {\n                    $timeout(function() {\n                      $window.location = loginUrl;\n                    }, 150);\n                  } else {\n                    throw Error('Login url not found.');\n                  }\n                }\n              );\n              $uibModalInstance.dismiss('cancel');\n            };\n          }\n        ]\n      });\n    };\n  }\n]);\n"
    },
    {
      "filename": "core/templates/dev/head/pages/signup/signup.html",
      "content": "{% extends 'pages/base.html' %}\n\n{% block maintitle %}\n  Join the community - Oppia\n{% endblock maintitle %}\n\n{% block navbar_breadcrumb %}\n  <ul class=\"nav navbar-nav oppia-navbar-breadcrumb\">\n    <li>\n      <span class=\"oppia-navbar-breadcrumb-separator\"></span>\n      <span translate=\"I18N_SIGNUP_REGISTRATION\"></span>\n    </li>\n  </ul>\n{% endblock navbar_breadcrumb %}\n\n{% block header_js %}\n  {{ super() }}\n{% endblock header_js %}\n\n{% block content %}\n  <!-- NOTE: This page should not contain any direct anchors to internal links. If the user visits an internal\n  link before completing the signup process, they will be logged out.\n  -->\n\n  <div class=\"oppia-page-cards-container\" ng-controller=\"Signup\">\n    <md-card class=\"oppia-page-card\">\n      <h2 class=\"oppia-signup-page-title\" translate=\"I18N_SIGNUP_COMPLETE_REGISTRATION\"></h2>\n\n      <form>\n        <div ng-show=\"!hasUsername\" role=\"form\" class=\"form-horizontal\">\n          <div class=\"form-group\">\n            <label for=\"username\" class=\"col-lg-3 col-md-3 col-sm-3\" translate=\"I18N_SIGNUP_USERNAME\"></label>\n\n            <div class=\"col-lg-9 col-md-9 col-sm-9\">\n              <input type=\"text\" ng-model=\"username\" id=\"username\" class=\"form-control protractor-test-username-input\" ng-blur=\"onUsernameInputFormBlur(username)\" ng-change=\"updateWarningText(username)\" ng-trim=\"false\" focus-on=\"usernameInputField\" style=\"width: 260px;\" autofocus=\"true\">\n              <span class=\"help-block\" style=\"font-size: 0.8em;\" translate=\"I18N_SIGNUP_USERNAME_EXPLANATION\"></span>\n              <div style=\"height: 18px; width: 550px;\">\n                <span style=\"color: red; font-size: 0.8em;\" aria-live=\"assertive\" ng-show=\"blurredAtLeastOnce\">\n                  <[warningI18nCode | translate]>\n                </span>\n              </div>\n            </div>\n          </div>\n\n          <div ng-show=\"showEmailPreferencesForm\" class=\"form-group\">\n            <label for=\"canReceiveEmailUpdates\" class=\"col-lg-3 col-md-3 col-sm-3\" translate=\"I18N_SIGNUP_EMAIL_PREFERENCES\"></label>\n            <div class=\"col-lg-9 col-md-9 col-sm-9\">\n              <div class=\"radio\">\n                <label>\n                  <input type=\"radio\" ng-model=\"canReceiveEmailUpdates\" value=\"yes\" name=\"canReceiveEmailUpdates\" ng-change=\"onSelectEmailPreference()\">\n                  <span translate=\"I18N_SIGNUP_SEND_ME_NEWS\"></span>\n                </label>\n                <label>\n                  <input type=\"radio\" ng-model=\"canReceiveEmailUpdates\" value=\"no\" name=\"canReceiveEmailUpdates\" ng-change=\"onSelectEmailPreference()\">\n                  <span translate=\"I18N_SIGNUP_DO_NOT_SEND_EMAILS\"></span>\n                </label>\n                <span class=\"help-block\" style=\"font-size: smaller\" translate=\"I18N_SIGNUP_EMAIL_PREFERENCES_EXPLAIN\">\n                </span>\n              </div>\n              <div style=\"height: 18px; width: 550px;\">\n                <span style=\"color: red; font-size: 0.8em;\" aria-live=\"assertive\" ng-show=\"blurredAtLeastOnce\" translate=\"<[emailPreferencesWarningText]>\">\n                </span>\n              </div>\n            </div>\n          </div>\n          <hr>\n        </div>\n\n        <div class=\"oppia-long-text\" ng-if=\"hasEverRegistered\">\n          <p>\n            <em translate=\"I18N_SIGNUP_UPDATE_WARNING\"></em>\n          </p>\n        </div>\n        <div class=\"oppia-long-text\" ng-if=\"!hasEverRegistered\">\n          <p style=\"font-size: 1em;\" translate=\"I18N_SIGNUP_SITE_DESCRIPTION\" translate-values=\"{sitename: siteName}\">\n\n          </p>\n        </div>\n\n        <div>\n          <strong translate=\"I18N_SIGNUP_CC_TITLE\"></strong>\n          <br>\n          <span translate=\"I18N_SIGNUP_LICENSE_NOTE\" translate-compile></span>\n        </div>\n\n        <hr>\n\n        <div class=\"checkbox oppia-long-text\">\n          <label>\n            <input type=\"checkbox\" ng-model=\"hasAgreedToLatestTerms\"\n                   class=\"protractor-test-agree-to-terms-checkbox\">\n            <span translate=\"I18N_SIGNUP_AGREE_LICENSE_DESCRIPTION\" translate-value-sitename=\"<[siteName]>\">\n            </span>\n          </label>\n        </div>\n\n        <br>\n\n        <button type=\"submit\" class=\"btn btn-success protractor-test-register-user\"\n                ng-disabled=\"warningI18nCode || !hasAgreedToLatestTerms || submissionInProcess\"\n                ng-click=\"submitPrerequisitesForm(hasAgreedToLatestTerms, username, canReceiveEmailUpdates)\"\n                translate=\"I18N_SIGNUP_BUTTON_SUBMIT\">\n        </button>\n      </form>\n    </md-card>\n  </div>\n\n{% endblock %}\n\n{% block footer_js %}\n  {{ super() }}\n  <script src=\"/templates/dev/head/pages/signup/Signup.js\"></script>\n  <script src=\"/templates/dev/head/services/IdGenerationService.js\"></script>\n  <script src=\"/templates/dev/head/services/SiteAnalyticsService.js\"></script>\n{% endblock footer_js %}\n"
    }
  ],
  "questions": [
    "@vojtechjelinek, why is it closed ?"
  ],
  "golden_answers": [
    "I would like to tackle `DEFAULT_OBJECT_VALUES` under `exploration_editor.html`.\r\n\r\nAs I work through the variable, would I be able to take up other global variables under exploration_editor.html as I see fit?"
  ],
  "questions_generated": [
    "What is the main objective of removing GLOBALS from HTML files in the oppia codebase?",
    "How should contributors go about resolving this issue related to GLOBALS in the oppia repository?",
    "What is the likely reason for selecting HTML files like 'admin.html' and 'profile.html' for GLOBALS removal?",
    "In the context of the oppia codebase, what role does the 'ProfileHandler' class play?",
    "Why is it important to check for 'user_settings' in the 'ProfilePage' class before attempting to render the profile template?",
    "What is the significance of decorators like '@acl_decorators.open_access' in the oppia codebase?",
    "How does the removal of GLOBALS from HTML files potentially impact the oppia codebase's maintainability?",
    "What might be the challenges of removing GLOBALS from HTML files in a large codebase like oppia?"
  ],
  "golden_answers_generated": [
    "The main objective is to deprecate and remove all GLOBALS used in various HTML files to allow for static serving of pages, which can help them load faster.",
    "Contributors should select a GLOBAL variable from the provided list, note their name next to it, and submit a pull request (PR) after removing the variable from GLOBALS in that file. They should also comment on the issue to indicate they are working on it.",
    "These HTML files are part of the user-facing pages that benefit from static serving for improved load times and performance, thus making them priorities for removing GLOBALS.",
    "The 'ProfileHandler' class provides data for the profile page and handles GET requests to fetch user settings based on the username. It returns data in JSON format as specified by the 'GET_HANDLER_ERROR_RETURN_TYPE'.",
    "Checking for 'user_settings' ensures that the requested user profile actually exists. If 'user_settings' is not found, it raises a 'PageNotFoundException', preventing errors from attempting to render a non-existent profile.",
    "Decorators like '@acl_decorators.open_access' are used to manage access control, allowing certain handlers to be accessed openly without authentication, which is critical for pages that should be publicly viewable.",
    "Removing GLOBALS can improve maintainability by reducing the reliance on global state, making the HTML files more modular, easier to test, and less prone to bugs related to unintended interactions between global variables.",
    "Challenges include ensuring that all dependencies on each GLOBAL are identified and refactored safely, maintaining functionality without regressions, and managing the coordination between multiple contributors to avoid conflicts and ensure consistency."
  ]
}