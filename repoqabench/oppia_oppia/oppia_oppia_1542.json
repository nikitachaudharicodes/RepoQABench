{
  "repo_name": "oppia_oppia",
  "issue_id": "1542",
  "issue_description": "# RTE components aren't displaying correctly in answer group headers\n\nTo reproduce:\n1. Log in as an admin, and go to /admin.\n2. Reload the root_linear_coefficient_theorem.yaml exploration.\n3. Go to the editor page for that exploration (/create/3).\n4. Navigate to the third state (\"More General Expansion\").\n5. Notice that the description of the first answer group under \"Learner's Answers and Oppia's Responses\" has an empty string where the math formula should be -- see screenshot below. (You can expand the group to see that it's actually comparing to the third choice.)\n   ![rte-bug-2](https://cloud.githubusercontent.com/assets/10575562/13423468/e518e326-df4f-11e5-886f-bd0ac18559cd.png)\n\nInstead, the answer group header should show the math formula instead (possibly truncated).\n\nA good starting point to look at is `core/templates/dev/head/editor/state_editor_responses.html`.\n",
  "issue_comments": [
    {
      "id": 190638999,
      "user": "seanlip",
      "body": "Note: it doesn't really make sense to show things like collapsibles, tabs or videos in these headers, so perhaps we may want to replace some of these things with placeholders like [Video] instead.\n"
    },
    {
      "id": 192884945,
      "user": "rishabhs95",
      "body": "so are we supposed to display the equation at this place or its corresponding index or add something else?\n"
    },
    {
      "id": 192971922,
      "user": "rishabhs95",
      "body": "working with this issue, can you please provide a clear guideline on what needs to be done?\n"
    },
    {
      "id": 193230932,
      "user": "seanlip",
      "body": "For simplicity, let's start with the following: replace RTE components in these strings with their names. So, for example, the results might look like:\n- Answer is equal to '[math]'\n- Answer is equal to '[video]'\n- Answer is equal to '[link]'\n"
    },
    {
      "id": 193232218,
      "user": "rishabhs95",
      "body": "okay, i'll do that\n"
    },
    {
      "id": 193421025,
      "user": "rishabhs95",
      "body": "is it acceptable to assign the value of `vartype`?\n\n<img width=\"730\" alt=\"screen shot 2016-03-08 at 1 22 14 am\" src=\"https://cloud.githubusercontent.com/assets/10002834/13581324/5192ba3c-e4cc-11e5-87ad-df451babbef7.png\">\n"
    },
    {
      "id": 193568766,
      "user": "seanlip",
      "body": "No, it isn't. As a user I have no idea what that means.\n"
    },
    {
      "id": 193611946,
      "user": "rishabhs95",
      "body": "okay, got it. it should be easy for the user to understand what type of answer is it. working on it.\n"
    },
    {
      "id": 203751441,
      "user": "seanlip",
      "body": "Hi @rishabhs95 -- did you make any progress with this?\n"
    },
    {
      "id": 204431594,
      "user": "rishabhs95",
      "body": "hey @seanlip , actually I was quite busy these days .... please keep moving with the bug... i will definitely catch up later sometime... sorry for the delay\n"
    },
    {
      "id": 204616076,
      "user": "seanlip",
      "body": "Thanks for the update, @rishabhs95! I've unassigned you from the issue.\n"
    },
    {
      "id": 354639748,
      "user": "seanlip",
      "body": "See [this comment](https://github.com/oppia/oppia/pull/4269#issuecomment-354637495) in #4269, which is probably related. Screenshot:\r\n\r\n![image](https://user-images.githubusercontent.com/11807091/34465765-25a5b6e6-ee83-11e7-8f8d-09c3d2162fb6.png)"
    },
    {
      "id": 356175640,
      "user": "kevinlee12",
      "body": "HI @Nix07, how's this issue coming along? Thanks!"
    },
    {
      "id": 356199160,
      "user": "Nix07",
      "body": "Thanks @kevinlee12 for reminding me. I thought this issue is fixed by one of my earlier PR. Will start working on it. Sorry for the delay.\r\n  "
    }
  ],
  "text_context": "# RTE components aren't displaying correctly in answer group headers\n\nTo reproduce:\n1. Log in as an admin, and go to /admin.\n2. Reload the root_linear_coefficient_theorem.yaml exploration.\n3. Go to the editor page for that exploration (/create/3).\n4. Navigate to the third state (\"More General Expansion\").\n5. Notice that the description of the first answer group under \"Learner's Answers and Oppia's Responses\" has an empty string where the math formula should be -- see screenshot below. (You can expand the group to see that it's actually comparing to the third choice.)\n   ![rte-bug-2](https://cloud.githubusercontent.com/assets/10575562/13423468/e518e326-df4f-11e5-886f-bd0ac18559cd.png)\n\nInstead, the answer group header should show the math formula instead (possibly truncated).\n\nA good starting point to look at is `core/templates/dev/head/editor/state_editor_responses.html`.\n\n\nNote: it doesn't really make sense to show things like collapsibles, tabs or videos in these headers, so perhaps we may want to replace some of these things with placeholders like [Video] instead.\n\n\nso are we supposed to display the equation at this place or its corresponding index or add something else?\n\n\nworking with this issue, can you please provide a clear guideline on what needs to be done?\n\n\nFor simplicity, let's start with the following: replace RTE components in these strings with their names. So, for example, the results might look like:\n- Answer is equal to '[math]'\n- Answer is equal to '[video]'\n- Answer is equal to '[link]'\n\n\nokay, i'll do that\n\n\nis it acceptable to assign the value of `vartype`?\n\n<img width=\"730\" alt=\"screen shot 2016-03-08 at 1 22 14 am\" src=\"https://cloud.githubusercontent.com/assets/10002834/13581324/5192ba3c-e4cc-11e5-87ad-df451babbef7.png\">\n\n\nNo, it isn't. As a user I have no idea what that means.\n\n\nokay, got it. it should be easy for the user to understand what type of answer is it. working on it.\n\n\nHi @rishabhs95 -- did you make any progress with this?\n\n\nhey @seanlip , actually I was quite busy these days .... please keep moving with the bug... i will definitely catch up later sometime... sorry for the delay\n\n\nThanks for the update, @rishabhs95! I've unassigned you from the issue.\n\n\nSee [this comment](https://github.com/oppia/oppia/pull/4269#issuecomment-354637495) in #4269, which is probably related. Screenshot:\r\n\r\n![image](https://user-images.githubusercontent.com/11807091/34465765-25a5b6e6-ee83-11e7-8f8d-09c3d2162fb6.png)\n\nHI @Nix07, how's this issue coming along? Thanks!\n\nThanks @kevinlee12 for reminding me. I thought this issue is fixed by one of my earlier PR. Will start working on it. Sorry for the delay.\r\n  ",
  "pr_link": "https://github.com/oppia/oppia/pull/4269",
  "code_context": [
    {
      "filename": "core/templates/dev/head/filters.js",
      "content": "// Copyright 2014 The Oppia Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Filters for Oppia.\n */\n\noppia.constant('RULE_SUMMARY_WRAP_CHARACTER_COUNT', 30);\n\noppia.filter('spacesToUnderscores', [function() {\n  return function(input) {\n    return input.trim().replace(/ /g, '_');\n  };\n}]);\n\noppia.filter('underscoresToCamelCase', [function() {\n  return function(input) {\n    return input.replace(/_+(.)/g, function(match, group1) {\n      return group1.toUpperCase();\n    });\n  };\n}]);\n\noppia.filter('camelCaseToHyphens', [function() {\n  return function(input) {\n    var result = input.replace(/([a-z])?([A-Z])/g, '$1-$2').toLowerCase();\n    if (result[0] === '-') {\n      result = result.substring(1);\n    }\n    return result;\n  };\n}]);\n\n// Filter that truncates long descriptors.\noppia.filter('truncate', ['$filter', function($filter) {\n  return function(input, length, suffix) {\n    if (!input) {\n      return '';\n    }\n    if (isNaN(length)) {\n      length = 70;\n    }\n    if (suffix === undefined) {\n      suffix = '...';\n    }\n    if (!angular.isString(input)) {\n      input = String(input);\n    }\n    input = $filter('convertToPlainText')(input);\n    return (\n      input.length <= length ? input : (\n        input.substring(0, length - suffix.length) + suffix));\n  };\n}]);\n\noppia.filter('truncateAtFirstLine', [function() {\n  return function(input) {\n    if (!input) {\n      return input;\n    }\n\n    var pattern = /(\\r\\n|[\\n\\v\\f\\r\\x85\\u2028\\u2029])/g;\n    // Normalize line endings then split using the normalized delimiter.\n    var lines = input.replace(pattern, '\\n').split('\\n');\n    var firstNonemptyLineIndex = -1;\n    var otherNonemptyLinesExist = false;\n    for (var i = 0; i < lines.length; i++) {\n      if (lines[i].length > 0) {\n        if (firstNonemptyLineIndex === -1) {\n          firstNonemptyLineIndex = i;\n        } else {\n          otherNonemptyLinesExist = true;\n          break;\n        }\n      }\n    }\n    var suffix = otherNonemptyLinesExist ? '...' : '';\n    return (\n      firstNonemptyLineIndex !== -1 ?\n      lines[firstNonemptyLineIndex] + suffix : '');\n  };\n}]);\n\n// Filter that rounds a number to 1 decimal place.\noppia.filter('round1', [function() {\n  return function(input) {\n    return Math.round(input * 10) / 10;\n  };\n}]);\n\n// Filter that replaces all {{...}} in a string with '...'.\noppia.filter('replaceInputsWithEllipses', [function() {\n  var pattern = /\\{\\{\\s*(\\w+)\\s*(\\|\\s*\\w+\\s*)?\\}\\}/g;\n  return function(input) {\n    return input ? input.replace(pattern, '...') : '';\n  };\n}]);\n\n// Filter that truncates a string at the first '...'.\noppia.filter('truncateAtFirstEllipsis', [function() {\n  var pattern = /\\.\\.\\./g;\n  return function(input) {\n    if (!input) {\n      return '';\n    }\n    var matchLocation = input.search(pattern);\n    return matchLocation === -1 ? input : (input.substring(0, matchLocation));\n  };\n}]);\n\noppia.filter('wrapTextWithEllipsis', [\n  '$filter', 'UtilsService', function($filter, UtilsService) {\n    return function(input, characterCount) {\n      if (UtilsService.isString(input)) {\n        input = $filter('normalizeWhitespace')(input);\n        if (input.length <= characterCount || characterCount < 3) {\n          // String fits within the criteria; no wrapping is necessary.\n          return input;\n        }\n\n        // Replace characters counting backwards from character count with an\n        // ellipsis, then trim the string.\n        return input.substr(0, characterCount - 3).trim() + '...';\n      } else {\n        return input;\n      }\n    };\n  }\n]);\n\n// Filter that changes {{...}} tags into the corresponding parameter input\n// values. Note that this returns an HTML string to accommodate the case of\n// multiple-choice input and image-click input.\noppia.filter('parameterizeRuleDescription', [\n  'INTERACTION_SPECS', function(INTERACTION_SPECS) {\n    return function(rule, interactionId, choices) {\n      if (!rule) {\n        return '';\n      }\n\n      if (!INTERACTION_SPECS.hasOwnProperty(interactionId)) {\n        console.error('Cannot find interaction with id ' + interactionId);\n        return '';\n      }\n      var description = INTERACTION_SPECS[interactionId].rule_descriptions[\n        rule.type];\n      if (!description) {\n        console.error(\n          'Cannot find description for rule ' + rule.type +\n          ' for interaction ' + interactionId);\n        return '';\n      }\n\n      var inputs = rule.inputs;\n      var finalDescription = description;\n\n      var PATTERN = /\\{\\{\\s*(\\w+)\\s*(\\|\\s*\\w+\\s*)?\\}\\}/;\n      var iter = 0;\n      while (true) {\n        if (!description.match(PATTERN) || iter === 100) {\n          break;\n        }\n        iter++;\n\n        var varName = description.match(PATTERN)[1];\n        var varType = description.match(PATTERN)[2];\n        if (varType) {\n          varType = varType.substring(1);\n        }\n\n        var replacementText = '[INVALID]';\n        // Special case for MultipleChoiceInput, ImageClickInput, and\n        // ItemSelectionInput.\n        if (choices) {\n          if (varType === 'SetOfHtmlString') {\n            replacementText = '[';\n            var key = inputs[varName];\n            for (var i = 0; i < key.length; i++) {\n              replacementText += key[i];\n              if (i < key.length - 1) {\n                replacementText += ',';\n              }\n            }\n            replacementText += ']';\n          } else {\n            // The following case is for MultipleChoiceInput\n            for (var i = 0; i < choices.length; i++) {\n              if (choices[i].val === inputs[varName]) {\n                replacementText = '\\'' + choices[i].label + '\\'';\n              }\n            }\n          }\n          // TODO(sll): Generalize this to use the inline string representation\n          // of an object type.\n        } else if (varType === 'MusicPhrase') {\n          replacementText = '[';\n          for (var i = 0; i < inputs[varName].length; i++) {\n            if (i !== 0) {\n              replacementText += ', ';\n            }\n            replacementText += inputs[varName][i].readableNoteName;\n          }\n          replacementText += ']';\n        } else if (varType === 'CoordTwoDim') {\n          var latitude = inputs[varName][0] || 0.0;\n          var longitude = inputs[varName][1] || 0.0;\n          replacementText = '(';\n          replacementText += (\n            inputs[varName][0] >= 0.0 ?\n            latitude.toFixed(2) + '°N' :\n            -latitude.toFixed(2) + '°S');\n          replacementText += ', ';\n          replacementText += (\n            inputs[varName][1] >= 0.0 ?\n            longitude.toFixed(2) + '°E' :\n            -longitude.toFixed(2) + '°W');\n          replacementText += ')';\n        } else if (varType === 'NormalizedString') {\n          replacementText = '\"' + inputs[varName] + '\"';\n        } else if (varType === 'Graph') {\n          replacementText = '[reference graph]';\n        } else {\n          replacementText = inputs[varName];\n        }\n\n        description = description.replace(PATTERN, ' ');\n        finalDescription = finalDescription.replace(PATTERN, replacementText);\n      }\n      return finalDescription;\n    };\n  }\n]);\n\n// Filter that removes whitespace from the beginning and end of a string, and\n// replaces interior whitespace with a single space character.\noppia.filter('normalizeWhitespace', ['UtilsService', function(UtilsService) {\n  return function(input) {\n    if (UtilsService.isString(input)) {\n      // Remove whitespace from the beginning and end of the string, and\n      // replace interior whitespace with a single space character.\n      input = input.trim();\n      input = input.replace(/\\s{2,}/g, ' ');\n      return input;\n    } else {\n      return input;\n    }\n  };\n}]);\n\n// Filter that takes a string, trims and normalizes spaces within each\n// line, and removes blank lines. Note that any spaces whose removal does not\n// result in two alphanumeric \"words\" being joined together are also removed,\n// so \"hello ? \" becomes \"hello?\".\noppia.filter('normalizeWhitespacePunctuationAndCase', [function() {\n  return function(input) {\n    if (typeof input === 'string' || input instanceof String) {\n      var isAlphanumeric = function(character) {\n        return 'qwertyuiopasdfghjklzxcvbnm0123456789'.indexOf(\n          character.toLowerCase()) !== -1;\n      };\n\n      input = input.trim();\n      var inputLines = input.split('\\n');\n      var resultLines = [];\n      for (var i = 0; i < inputLines.length; i++) {\n        var result = '';\n\n        var inputLine = inputLines[i].trim().replace(/\\s{2,}/g, ' ');\n        for (var j = 0; j < inputLine.length; j++) {\n          var currentChar = inputLine.charAt(j).toLowerCase();\n          if (currentChar === ' ') {\n            if (j > 0 && j < inputLine.length - 1 &&\n                isAlphanumeric(inputLine.charAt(j - 1)) &&\n                isAlphanumeric(inputLine.charAt(j + 1))) {\n              result += currentChar;\n            }\n          } else {\n            result += currentChar;\n          }\n        }\n\n        if (result) {\n          resultLines.push(result);\n        }\n      }\n\n      return resultLines.join('\\n');\n    } else {\n      return input;\n    }\n  };\n}]);\n\noppia.filter('convertToPlainText', [function() {\n  return function(input) {\n    var strippedText = input.replace(/(<([^>]+)>)/ig, '');\n    strippedText = strippedText.replace(/&nbsp;/ig, ' ');\n    strippedText = strippedText.replace(/&quot;/ig, '');\n\n    var trimmedText = strippedText.trim();\n    if (trimmedText.length === 0) {\n      return strippedText;\n    } else {\n      return trimmedText;\n    }\n  };\n}]);\n\n// Filter that summarizes a large number to a decimal followed by\n// the appropriate metric prefix (K, M or B). For example, 167656\n// becomes 167.7K.\n// Users of this filter should ensure that the input is a non-negative number.\noppia.filter('summarizeNonnegativeNumber', [function() {\n  return function(input) {\n    input = Number(input);\n    // Nine zeros for billions (e.g. 146008788788 --> 146.0B).\n    // Six zeros for millions (e.g. 146008788 --> 146.0M).\n    // Three zeros for thousands (e.g. 146008 --> 146.0K).\n    // No change for small numbers (e.g. 12 --> 12).\n    return (\n      input >= 1.0e+9 ? (input / 1.0e+9).toFixed(1) + 'B' :\n      input >= 1.0e+6 ? (input / 1.0e+6).toFixed(1) + 'M' :\n      input >= 1.0e+3 ? (input / 1.0e+3).toFixed(1) + 'K' :\n      input);\n  };\n}]);\n\n// Note that this filter does not truncate at the middle of a word.\noppia.filter('truncateAndCapitalize', [function() {\n  return function(input, maxNumberOfCharacters) {\n    if (!input) {\n      return input;\n    }\n    var words = input.trim().match(/\\S+/g);\n\n    // Capitalize the first word and add it to the result.\n    var result = words[0].charAt(0).toUpperCase() + words[0].slice(1);\n\n    // Add the remaining words to the result until the character limit is\n    // reached.\n    for (var i = 1; i < words.length; i++) {\n      if (!maxNumberOfCharacters ||\n          result.length + 1 + words[i].length <= maxNumberOfCharacters) {\n        result += ' ';\n        result += words[i];\n      } else {\n        result += '...';\n        break;\n      }\n    }\n\n    return result;\n  };\n}]);\n\noppia.filter('capitalize', [function() {\n  return function(input) {\n    if (!input) {\n      return input;\n    }\n\n    var trimmedInput = input.trim();\n    return trimmedInput.charAt(0).toUpperCase() + trimmedInput.slice(1);\n  };\n}]);\n\noppia.filter('removeDuplicatesInArray', [function() {\n  return function(input) {\n    return input.filter(function(val, pos) {\n      return input.indexOf(val) === pos;\n    });\n  };\n}]);\n\noppia.filter('stripFormatting', [function() {\n  return function(html, whitelistedImgClasses) {\n    // Oppia RTE adds style attribute to bold and italics tags that\n    // must be removed.\n    var styleRegex = new RegExp(' style=\\\"[^\\\"]+\\\"', 'gm');\n    // Strip out anything between and including <>,\n    // unless it is an img whose class includes one of the whitelisted classes\n    // or is the bold or italics tags.\n    var tagRegex = new RegExp(\n      '(?!<img.*class=\".*(' + whitelistedImgClasses.join('|') +\n      ').*\".*>)(?!<b>|<\\/b>|<i>|<\\/i>)<[^>]+>', 'gm');\n    var strippedText = html ? String(html).replace(styleRegex, '') : '';\n    strippedText = strippedText ? String(strippedText).replace(\n      tagRegex, '') : '';\n    return strippedText;\n  };\n}]);\n"
    },
    {
      "filename": "core/templates/dev/head/pages/exploration_editor/editor_tab/StateSolution.js",
      "content": "// Copyright 2017 The Oppia Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Controller for solution.\n */\n\noppia.controller('StateSolution', [\n  '$scope', '$rootScope', '$uibModal', '$filter', 'EditorStateService',\n  'AlertsService', 'INTERACTION_SPECS', 'stateSolutionService',\n  'explorationStatesService', 'SolutionVerificationService',\n  'ExplorationHtmlFormatterService', 'stateInteractionIdService',\n  'stateHintsService', 'UrlInterpolationService', 'SolutionObjectFactory',\n  'ExplorationContextService', 'ExplorationWarningsService',\n  'INFO_MESSAGE_SOLUTION_IS_INVALID',\n  function(\n    $scope, $rootScope, $uibModal, $filter, EditorStateService,\n    AlertsService, INTERACTION_SPECS, stateSolutionService,\n    explorationStatesService, SolutionVerificationService,\n    ExplorationHtmlFormatterService, stateInteractionIdService,\n    stateHintsService, UrlInterpolationService, SolutionObjectFactory,\n    ExplorationContextService, ExplorationWarningsService,\n    INFO_MESSAGE_SOLUTION_IS_INVALID) {\n    $scope.correctAnswer = null;\n    $scope.correctAnswerEditorHtml = '';\n    $scope.inlineSolutionEditorIsActive = false;\n    $scope.SOLUTION_EDITOR_FOCUS_LABEL = (\n      'currentCorrectAnswerEditorHtmlForSolutionEditor');\n    $scope.stateHintsService = stateHintsService;\n    $scope.stateInteractionIdService = stateInteractionIdService;\n    $scope.stateSolutionService = stateSolutionService;\n\n\n    ExplorationWarningsService.updateWarnings();\n\n    $scope.isSolutionValid = function() {\n      return explorationStatesService.isSolutionValid(\n        EditorStateService.getActiveStateName());\n    };\n\n    $scope.correctAnswerEditorHtml = (\n      ExplorationHtmlFormatterService.getInteractionHtml(\n        stateInteractionIdService.savedMemento,\n        explorationStatesService.getInteractionCustomizationArgsMemento(\n          EditorStateService.getActiveStateName()),\n        $scope.SOLUTION_EDITOR_FOCUS_LABEL));\n\n    $scope.toggleInlineSolutionEditorIsActive = function() {\n      $scope.inlineSolutionEditorIsActive = (\n        !$scope.inlineSolutionEditorIsActive);\n    };\n\n    $scope.getSolutionSummary = function() {\n      var solution = stateSolutionService.savedMemento;\n      var solutionAsPlainText =\n        solution.getSummary(stateInteractionIdService.savedMemento);\n      solutionAsPlainText = $filter('convertToPlainText')(solutionAsPlainText);\n      return solutionAsPlainText;\n    };\n\n    // This returns false if the current interaction ID is null.\n    $scope.isCurrentInteractionLinear = function() {\n      return (\n        stateInteractionIdService.savedMemento &&\n        INTERACTION_SPECS[stateInteractionIdService.savedMemento].is_linear);\n    };\n\n    $scope.openAddOrUpdateSolutionModal = function() {\n      AlertsService.clearWarnings();\n      $rootScope.$broadcast('externalSave');\n      $scope.inlineSolutionEditorIsActive = false;\n\n      $uibModal.open({\n        templateUrl: UrlInterpolationService.getDirectiveTemplateUrl(\n          '/pages/exploration_editor/editor_tab/' +\n          'add_or_update_solution_modal_directive.html'),\n        backdrop: 'static',\n        controller: [\n          '$scope', '$uibModalInstance', 'stateSolutionService',\n          function(\n            $scope, $uibModalInstance, stateSolutionService) {\n            $scope.stateSolutionService = stateSolutionService;\n            $scope.correctAnswerEditorHtml = (\n              ExplorationHtmlFormatterService.getInteractionHtml(\n                stateInteractionIdService.savedMemento,\n                explorationStatesService.getInteractionCustomizationArgsMemento(\n                  EditorStateService.getActiveStateName()),\n                $scope.SOLUTION_EDITOR_FOCUS_LABEL));\n            $scope.EXPLANATION_FORM_SCHEMA = {\n              type: 'html',\n              ui_config: {}\n            };\n\n            $scope.data = {\n              answerIsExclusive: false,\n              correctAnswer: null,\n              explanation: ''\n            };\n\n            $scope.submitAnswer = function(answer) {\n              $scope.data.correctAnswer = answer;\n            };\n\n            $scope.saveSolution = function() {\n              $uibModalInstance.close({\n                solution: SolutionObjectFactory.createNew(\n                  $scope.data.answerIsExclusive,\n                  $scope.data.correctAnswer,\n                  $scope.data.explanation)\n              });\n            };\n\n            $scope.cancel = function() {\n              $uibModalInstance.dismiss('cancel');\n              AlertsService.clearWarnings();\n            };\n          }\n        ]\n      }).result.then(function(result) {\n        var correctAnswer = result.solution.correctAnswer;\n        var currentStateName = EditorStateService.getActiveStateName();\n        var state = explorationStatesService.getState(currentStateName);\n        var solutionIsValid = SolutionVerificationService.verifySolution(\n          ExplorationContextService.getExplorationId(), state, correctAnswer);\n\n        explorationStatesService.updateSolutionValidity(\n          currentStateName, solutionIsValid);\n        ExplorationWarningsService.updateWarnings();\n        if (!solutionIsValid) {\n          AlertsService.addInfoMessage(INFO_MESSAGE_SOLUTION_IS_INVALID);\n        }\n\n        stateSolutionService.displayed = result.solution;\n        stateSolutionService.saveDisplayedValue();\n      });\n    };\n\n    $scope.deleteSolution = function(index, evt) {\n      evt.stopPropagation();\n\n      AlertsService.clearWarnings();\n      $uibModal.open({\n        templateUrl: UrlInterpolationService.getDirectiveTemplateUrl(\n          '/pages/exploration_editor/editor_tab/' +\n          'delete_solution_modal_directive.html'),\n        backdrop: true,\n        controller: [\n          '$scope', '$uibModalInstance',\n          function($scope, $uibModalInstance) {\n            $scope.reallyDelete = function() {\n              $uibModalInstance.close();\n            };\n\n            $scope.cancel = function() {\n              $uibModalInstance.dismiss('cancel');\n              AlertsService.clearWarnings();\n            };\n          }\n        ]\n      }).result.then(function() {\n        stateSolutionService.displayed = null;\n        stateSolutionService.saveDisplayedValue();\n        explorationStatesService.deleteSolutionValidity(\n          EditorStateService.getActiveStateName());\n      });\n    };\n  }\n]);\n"
    },
    {
      "filename": "core/templates/dev/head/pages/exploration_editor/editor_tab/state_editor_solution.html",
      "content": "<div ng-controller=\"StateSolution\">\n  <div ng-if=\"stateHintsService.displayed.length > 0\">\n    <div class=\"oppia-editor-header\">\n      <strong>Solution</strong>\n    </div>\n    <md-card class=\"oppia-editor-card-with-avatar\">\n      <div class=\"oppia-editor-card-body\">\n        <ul class=\"nav oppia-option-list nav-stacked nav-pills\" role=\"tablist\"\n            ng-if=\"stateSolutionService.savedMemento &&\n                   stateSolutionService.savedMemento.explanation\">\n          <li ng-class=\"!inlineSolutionEditorIsActive\"\n              class=\"oppia-rule-block oppia-sortable-hint oppia-prevent-selection\"\n              style=\"margin-top: 0;\">\n            <div class=\"oppia-rule-header-warning-placement\"\n                 ng-if=\"!isSolutionValid()\"\n                 ng-click=\"toggleInlineSolutionEditorIsActive()\"\n                 uib-tooltip=\"This solution does not lead to another card. Verify the responses specified or change the solution.\"\n                 tooltip-placement=\"bottom\">\n              <div class=\"oppia-rule-header-warning-style\">\n                ⚠\n              </div>\n            </div>\n            <a ng-click=\"toggleInlineSolutionEditorIsActive()\"\n               class=\"oppia-rule-tab protractor-test-oppia-solution-tab\">\n              <response-header summary=\"getSolutionSummary()\"\n                               short-summary=\"getSolutionSummary()\"\n                               on-delete-fn=\"deleteSolution\">\n              </response-header>\n            </a>\n\n            <div ng-if=\"inlineSolutionEditorIsActive\">\n              <div class=\"oppia-editor-card-section protractor-test-oppia-solution-body\">\n                <solution-editor interaction-id=\"stateInteractionIdService.savedMemento\"\n                                 correct-answer-editor-html=\"correctAnswerEditorHtml\">\n                </solution-editor>\n              </div>\n            </div>\n          </li>\n        </ul>\n      </div>\n    </md-card>\n\n    <md-card style=\"margin: 0; padding: 0;\">\n      <div ng-if=\"editabilityService.isEditableOutsideTutorialMode()\">\n        <button ng-if=\"!stateSolutionService.savedMemento\"\n                type=\"button\"\n                class=\"btn btn-default btn-lg oppia-add-hint-button protractor-test-oppia-add-solution-button\"\n                ng-click=\"openAddOrUpdateSolutionModal()\">\n          + Add Solution\n        </button>\n      </div>\n    </md-card>\n  </div>\n</div>\n"
    }
  ],
  "questions": [],
  "golden_answers": [],
  "questions_generated": [
    "What is causing the RTE components to not display correctly in the answer group headers in the 'oppia_oppia' repository?",
    "How should the RTE components be handled in the answer group headers according to the issue description?",
    "Where in the codebase is a good starting point to investigate the issue with RTE components not displaying correctly?",
    "What is the role of the 'truncate' filter in the 'filters.js' file, and how might it relate to the issue at hand?",
    "Why might it be necessary to replace complex RTE components with placeholders in the answer group headers?"
  ],
  "golden_answers_generated": [
    "The RTE components are not displaying correctly because they are being replaced by empty strings instead of their expected content. This could be due to an issue in the rendering logic of the header, possibly in the HTML template where the content is supposed to be displayed.",
    "The issue description suggests replacing RTE components in the answer group headers with their names. For instance, math formulas should be replaced with '[math]', videos with '[video]', and links with '[link]'. This provides a clear indication of the content type without displaying the actual component.",
    "A good starting point to investigate this issue is the 'core/templates/dev/head/editor/state_editor_responses.html' file. This file likely contains the HTML template responsible for rendering the answer group headers where the RTE components are displayed.",
    "The 'truncate' filter in 'filters.js' is used to shorten long strings to a specified length, adding a suffix if the string exceeds that length. In the context of this issue, it might be used to truncate long RTE component names or descriptions in the answer group headers to ensure they fit within the UI constraints.",
    "It may be necessary to replace complex RTE components with placeholders to avoid cluttering the UI with complex or unsupported elements like collapsibles, tabs, or videos. Using placeholders such as '[Video]' or '[math]' ensures that the UI remains clean and the type of content is communicated clearly to the user."
  ]
}