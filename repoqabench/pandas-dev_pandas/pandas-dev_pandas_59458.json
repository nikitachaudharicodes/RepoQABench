{
  "repo_name": "pandas-dev_pandas",
  "issue_id": "59458",
  "issue_description": "# DOC: fix docstring validation errors for `pandas.Timestamp`\n\nfollow up on issues #56804 and #58063\r\npandas has a script for validating docstrings:\r\n\r\nhttps://github.com/pandas-dev/pandas/blob/0cdc6a48302ba1592b8825868de403ff9b0ea2a5/ci/code_checks.sh#L206-L244\r\n\r\nCurrently, some methods fail docstring validation check.\r\nThe task here is:\r\n* take 2-4 methods\r\n* run: `scripts/validate_docstrings.py <method-name>`\r\n*  fix the docstrings according to whatever error is reported\r\n* remove those methods fromÂ `code_checks.sh` script\r\n* commit, push, open pull request\r\n\r\nExample:\r\n```\r\nscripts/validate_docstrings.py pandas.Timestamp.tz_localize\r\n```\r\npandas.Timestamp.tz_localize fails with the  SA01  error\r\n```\r\n################################################################################\r\n################################## Validation ##################################\r\n################################################################################\r\n\r\n1 Errors found for `pandas.Timestamp.tz_localize`:\r\n        SA01    See Also section not found\r\n```\r\n\r\nPlease don't comment `take` as multiple people can work on this issue. You also don't need to ask for permission to work on this, just comment on which methods are you going to work.\r\n\r\nIf you're new contributor, please check the [contributing guide](https://pandas.pydata.org/docs/dev/development/contributing.html)\r\n",
  "issue_comments": [
    {
      "id": 2277848804,
      "user": "mimistiv",
      "body": "I will take \r\n`pandas.Timestamp.combine`\r\n`pandas.Timestamp.ctime`\r\n`pandas.Timestamp.date` "
    },
    {
      "id": 2277858099,
      "user": "EduardAkhmetshin",
      "body": "Taking `replace`, `normalize`, `to_numpy`, and `to_period`"
    },
    {
      "id": 2277957493,
      "user": "NavaneetthaSundararaj",
      "body": "Listing as a checklist to tracked the tasks that are already picked \r\n\r\n\r\n- [x] -i \"pandas.Timestamp.combine PR01,SA01\" \\  https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2277848804\r\n- [x]  -i \"pandas.Timestamp.ctime SA01\" \\ https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2277848804\r\n- [x]  -i \"pandas.Timestamp.date SA01\" \\ https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2277848804\r\n- [x]  -i \"pandas.Timestamp.day GL08\" \\  https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2277915097\r\n- [x]  -i \"pandas.Timestamp.fold GL08\" \\  https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2277915097\r\n- [x]  -i \"pandas.Timestamp.fromordinal SA01\" \\  https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2281748570\r\n- [x]  -i \"pandas.Timestamp.fromtimestamp PR01,SA01\" \\ https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2281748570\r\n- [x]  -i \"pandas.Timestamp.hour GL08\" \\  https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2277964718\r\n- [x]  -i \"pandas.Timestamp.max PR02\" \\ https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2277964718\r\n- [x]  -i \"pandas.Timestamp.microsecond GL08\" \\ https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2277964718\r\n- [x]  -i \"pandas.Timestamp.min PR02\" \\ https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2277964718\r\n- [x]  -i \"pandas.Timestamp.minute GL08\" \\ https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2282326767\r\n- [x]  -i \"pandas.Timestamp.month GL08\" \\ https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2282326767\r\n- [x]  -i \"pandas.Timestamp.month_name SA01\" \\ https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2278954301\r\n- [x]  -i \"pandas.Timestamp.nanosecond GL08\" \\ https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2282326767\r\n- [x]  -i \"pandas.Timestamp.normalize SA01\" \\  https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2277858099\r\n- [x]  -i \"pandas.Timestamp.quarter SA01\" \\ https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2278954301\r\n- [x]  -i \"pandas.Timestamp.replace PR07,SA01\" \\  https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2277858099\r\n- [x]  -i \"pandas.Timestamp.resolution PR02\" \\ https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2283015310\r\n- [x]  -i \"pandas.Timestamp.second GL08\" \\ https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2282326767\r\n- [x]  -i \"pandas.Timestamp.strptime PR01,SA01\" \\  https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2278582882\r\n- [x]  -i \"pandas.Timestamp.timestamp SA01\" \\ https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2278582882\r\n- [x]  -i \"pandas.Timestamp.timetuple SA01\" \\ https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2278582882\r\n- [x]  -i \"pandas.Timestamp.timetz SA01\" \\ https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2278582882\r\n- [x]  -i \"pandas.Timestamp.to_datetime64 SA01\" \\ https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2278582882\r\n- [x]  -i \"pandas.Timestamp.to_julian_date SA01\" \\ https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2278582882\r\n- [x]  -i \"pandas.Timestamp.to_numpy PR01\" \\  https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2277858099\r\n- [x]  -i \"pandas.Timestamp.to_period PR01,SA01\" \\  https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2277858099\r\n- [x]  -i \"pandas.Timestamp.today SA01\" \\  https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2278150810\r\n- [x]  -i \"pandas.Timestamp.toordinal SA01\" \\  https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2278150810\r\n- [x]  -i \"pandas.Timestamp.tz_localize SA01\" \\ https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2282834048\r\n- [x]  -i \"pandas.Timestamp.tzinfo GL08\" \\ https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2283015310\r\n- [x]  -i \"pandas.Timestamp.tzname SA01\" \\ https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2282834048\r\n- [x]  -i \"pandas.Timestamp.unit SA01\" \\ https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2282679680\r\n- [x]  -i \"pandas.Timestamp.utcfromtimestamp PR01,SA01\" \\ https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2282834048\r\n- [x]  -i \"pandas.Timestamp.utcoffset SA01\" \\ https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2282679680\r\n- [x]  -i \"pandas.Timestamp.utctimetuple SA01\" \\ https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2282679680\r\n- [x]  -i \"pandas.Timestamp.value GL08\" \\ https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2278898146\r\n- [x]  -i \"pandas.Timestamp.year GL08\" \\ https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2278898146"
    },
    {
      "id": 2277964718,
      "user": "NavaneetthaSundararaj",
      "body": "I will take:  \r\n\r\npandas.Timestamp.hour\r\npandas.Timestamp.max\r\npandas.Timestamp.microsecond\r\npandas.Timestamp.min"
    },
    {
      "id": 2278150810,
      "user": "dnajjar",
      "body": "I'll take\r\n \"pandas.Timestamp.today\"\r\n \"pandas.Timestamp.toordinal \""
    },
    {
      "id": 2278582882,
      "user": "jsngn",
      "body": "I'll take\r\n```\r\n-i \"pandas.Timestamp.strptime PR01,SA01\" \\\r\n-i \"pandas.Timestamp.timestamp SA01\" \\\r\n-i \"pandas.Timestamp.timetuple SA01\" \\\r\n-i \"pandas.Timestamp.timetz SA01\" \\\r\n-i \"pandas.Timestamp.to_datetime64 SA01\" \\\r\n-i \"pandas.Timestamp.to_julian_date SA01\" \\\r\n```"
    },
    {
      "id": 2278898146,
      "user": "zocacc",
      "body": "I'll take \r\n -i \"pandas.Timestamp.year GL08\" \\\r\n-i \"pandas.Timestamp.value GL08\" \\"
    },
    {
      "id": 2278954301,
      "user": "josh-tan77",
      "body": "i'll take \r\n\r\n-i  pandas.Timestamp.month_name SA01\r\n-i \"pandas.Timestamp.quarter SA01"
    },
    {
      "id": 2281748570,
      "user": "znarfm",
      "body": "I'll take \r\n\r\n -i \"pandas.Timestamp.fromordinal SA01\" \r\n -i \"pandas.Timestamp.fromtimestamp PR01,SA01\" "
    },
    {
      "id": 2282326767,
      "user": "CICDooley",
      "body": "I'll take: \r\n-i \"pandas.Timestamp.minute GL08\" \\\r\n-i \"pandas.Timestamp.month GL08\" \\\r\n-i \"pandas.Timestamp.nanosecond GL08\" \\\r\n-i \"pandas.Timestamp.second GL08\" \\\r\n"
    },
    {
      "id": 2282679680,
      "user": "shreyas-dev",
      "body": "I'll take:\r\n```\r\n-i \"pandas.Timestamp.unit SA01\" \\\r\n -i \"pandas.Timestamp.utcoffset SA01\" \\\r\n -i \"pandas.Timestamp.utctimetuple SA01\"\r\n ```"
    },
    {
      "id": 2282834048,
      "user": "MichaelMoyles",
      "body": "I'll take:\r\npandas.Timestamp.tz_localize\r\npandas.Timestamp.tzname\r\npandas.Timestamp.utcfromtimestamp"
    },
    {
      "id": 2286812147,
      "user": "Blacksujit",
      "body": "i will take:\r\n\r\n -i \"pandas.Timestamp.utcoffset SA01\" \\\r\n -i \"pandas.Timestamp.utctimetuple SA01\" \\"
    },
    {
      "id": 2301608160,
      "user": "SHYALI",
      "body": "I'll take :\r\npandas.Timestamp.tz_localize SA01\r\npandas.Timestamp.tzinfo GL08\r\npandas.Timestamp.tzname SA01"
    },
    {
      "id": 2304144992,
      "user": "40gilad",
      "body": "ill take:\r\n -i \"pandas.Timestamp.utcfromtimestamp PR01,SA01\" \\\r\n -i \"pandas.Timestamp.utcoffset SA01\" \\\r\n -i \"pandas.Timestamp.utctimetuple SA01\" \\"
    },
    {
      "id": 2304715238,
      "user": "40gilad",
      "body": "did anyone understand how it should be done? im chaning the doc of my functions in timestamp.pyx, nattype.pyx and nothing is being changed when im running scripts/validate_docstrings.py <method-name>"
    },
    {
      "id": 2304836688,
      "user": "natmokval",
      "body": "> did anyone understand how it should be done? im chaning the doc of my functions in timestamp.pyx, nattype.pyx and nothing is being changed when im running scripts/validate_docstrings.py\r\n\r\n@40gilad, did you rebuild pandas after your changes?\r\nYou need to compile pandas again each time the C extensions change, for example if you modified any file in `pandas/_libs`.\r\nPlease check the documetation \"Contributing to pandas\", particularly the section: [build and install pandas](https://pandas.pydata.org/docs/development/contributing_environment.html#step-3-build-and-install-pandas)"
    },
    {
      "id": 2305133477,
      "user": "40gilad",
      "body": "> > did anyone understand how it should be done? im chaning the doc of my functions in timestamp.pyx, nattype.pyx and nothing is being changed when im running scripts/validate_docstrings.py\r\n> \r\n> @40gilad, did you rebuild pandas after your changes? You need to compile pandas again each time the C extensions change, for example if you modified any file in `pandas/_libs`. Please check the documetation \"Contributing to pandas\", particularly the section: [build and install pandas](https://pandas.pydata.org/docs/development/contributing_environment.html#step-3-build-and-install-pandas)\r\n\r\ni get:\r\nerror: command 'C:\\\\Program Files\\\\Microsoft Visual Studio\\\\2022\\\\Community\\\\VC\\\\Tools\\\\MSVC\\\\14.38.33130\\\\bin\\\\HostX86\\\\x64\\\\link.exe' failed with exit code 1120"
    },
    {
      "id": 2321872207,
      "user": "natmokval",
      "body": "It seems like the only method not picked is `pandas.Timestamp.resolution.` I will work on this method."
    },
    {
      "id": 2322224574,
      "user": "NavaneetthaSundararaj",
      "body": "> I will take:\r\n> \r\n> pandas.Timestamp.hour pandas.Timestamp.max pandas.Timestamp.microsecond pandas.Timestamp.min\r\n\r\nHour and microsecond seems to be done by https://github.com/pandas-dev/pandas/pull/59622\r\n"
    },
    {
      "id": 2404674284,
      "user": "asdkfjsd",
      "body": "i see those question are still on code_checks.sh\r\ncould i take\r\n\r\n> -i \"pandas.Timestamp.nanosecond GL08\"\r\n> -i \"pandas.Timestamp.year GL08\" \\"
    },
    {
      "id": 2404720033,
      "user": "mimistiv",
      "body": "> i see those question are still on code_checks.sh could i take\r\n> \r\n> > -i \"pandas.Timestamp.nanosecond GL08\"\r\n> > -i \"pandas.Timestamp.year GL08\" \\\r\n\r\nHello @asdkfjsd I have a PR open for this and have been waiting for a review for a while now. \r\n@MarcoGorelli "
    },
    {
      "id": 2404896998,
      "user": "asdkfjsd",
      "body": "> > i see those question are still on code_checks.sh could i take\r\n> > > -i \"pandas.Timestamp.nanosecond GL08\"\r\n> > > -i \"pandas.Timestamp.year GL08\" \\\r\n> \r\n> Hello @asdkfjsd I have a PR open for this and have been waiting for a review for a while now. @MarcoGorelli\r\n\r\ni'm sorry , i will find another one "
    },
    {
      "id": 2424749228,
      "user": "amitsubhashchejara",
      "body": "I think all the tasks are picked already ð."
    },
    {
      "id": 2558258606,
      "user": "vineethsaivs",
      "body": "I'll take:\r\npandas.Timestamp.tz_localize\r\npandas.Timestamp.toordinal\r\n"
    },
    {
      "id": 2682600804,
      "user": "chinar-amrutkar",
      "body": "Do any functions still need to be fixed? "
    },
    {
      "id": 2715866826,
      "user": "olivecon",
      "body": "I'll take pandas.Timestamp.resolution"
    },
    {
      "id": 2730335427,
      "user": "j-hendricks",
      "body": "`Timestamp.tzinfo` has already been resolved here: #61100"
    },
    {
      "id": 2781355997,
      "user": "j-hendricks",
      "body": "Taking the following:\n\n        -i \"pandas.Timestamp.max PR02\" \\\n        -i \"pandas.Timestamp.min PR02\" \\\n        -i \"pandas.Timestamp.resolution PR02\" \\"
    }
  ],
  "text_context": "# DOC: fix docstring validation errors for `pandas.Timestamp`\n\nfollow up on issues #56804 and #58063\r\npandas has a script for validating docstrings:\r\n\r\nhttps://github.com/pandas-dev/pandas/blob/0cdc6a48302ba1592b8825868de403ff9b0ea2a5/ci/code_checks.sh#L206-L244\r\n\r\nCurrently, some methods fail docstring validation check.\r\nThe task here is:\r\n* take 2-4 methods\r\n* run: `scripts/validate_docstrings.py <method-name>`\r\n*  fix the docstrings according to whatever error is reported\r\n* remove those methods fromÂ `code_checks.sh` script\r\n* commit, push, open pull request\r\n\r\nExample:\r\n```\r\nscripts/validate_docstrings.py pandas.Timestamp.tz_localize\r\n```\r\npandas.Timestamp.tz_localize fails with the  SA01  error\r\n```\r\n################################################################################\r\n################################## Validation ##################################\r\n################################################################################\r\n\r\n1 Errors found for `pandas.Timestamp.tz_localize`:\r\n        SA01    See Also section not found\r\n```\r\n\r\nPlease don't comment `take` as multiple people can work on this issue. You also don't need to ask for permission to work on this, just comment on which methods are you going to work.\r\n\r\nIf you're new contributor, please check the [contributing guide](https://pandas.pydata.org/docs/dev/development/contributing.html)\r\n\n\nI will take \r\n`pandas.Timestamp.combine`\r\n`pandas.Timestamp.ctime`\r\n`pandas.Timestamp.date` \n\nTaking `replace`, `normalize`, `to_numpy`, and `to_period`\n\nListing as a checklist to tracked the tasks that are already picked \r\n\r\n\r\n- [x] -i \"pandas.Timestamp.combine PR01,SA01\" \\  https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2277848804\r\n- [x]  -i \"pandas.Timestamp.ctime SA01\" \\ https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2277848804\r\n- [x]  -i \"pandas.Timestamp.date SA01\" \\ https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2277848804\r\n- [x]  -i \"pandas.Timestamp.day GL08\" \\  https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2277915097\r\n- [x]  -i \"pandas.Timestamp.fold GL08\" \\  https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2277915097\r\n- [x]  -i \"pandas.Timestamp.fromordinal SA01\" \\  https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2281748570\r\n- [x]  -i \"pandas.Timestamp.fromtimestamp PR01,SA01\" \\ https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2281748570\r\n- [x]  -i \"pandas.Timestamp.hour GL08\" \\  https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2277964718\r\n- [x]  -i \"pandas.Timestamp.max PR02\" \\ https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2277964718\r\n- [x]  -i \"pandas.Timestamp.microsecond GL08\" \\ https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2277964718\r\n- [x]  -i \"pandas.Timestamp.min PR02\" \\ https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2277964718\r\n- [x]  -i \"pandas.Timestamp.minute GL08\" \\ https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2282326767\r\n- [x]  -i \"pandas.Timestamp.month GL08\" \\ https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2282326767\r\n- [x]  -i \"pandas.Timestamp.month_name SA01\" \\ https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2278954301\r\n- [x]  -i \"pandas.Timestamp.nanosecond GL08\" \\ https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2282326767\r\n- [x]  -i \"pandas.Timestamp.normalize SA01\" \\  https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2277858099\r\n- [x]  -i \"pandas.Timestamp.quarter SA01\" \\ https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2278954301\r\n- [x]  -i \"pandas.Timestamp.replace PR07,SA01\" \\  https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2277858099\r\n- [x]  -i \"pandas.Timestamp.resolution PR02\" \\ https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2283015310\r\n- [x]  -i \"pandas.Timestamp.second GL08\" \\ https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2282326767\r\n- [x]  -i \"pandas.Timestamp.strptime PR01,SA01\" \\  https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2278582882\r\n- [x]  -i \"pandas.Timestamp.timestamp SA01\" \\ https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2278582882\r\n- [x]  -i \"pandas.Timestamp.timetuple SA01\" \\ https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2278582882\r\n- [x]  -i \"pandas.Timestamp.timetz SA01\" \\ https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2278582882\r\n- [x]  -i \"pandas.Timestamp.to_datetime64 SA01\" \\ https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2278582882\r\n- [x]  -i \"pandas.Timestamp.to_julian_date SA01\" \\ https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2278582882\r\n- [x]  -i \"pandas.Timestamp.to_numpy PR01\" \\  https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2277858099\r\n- [x]  -i \"pandas.Timestamp.to_period PR01,SA01\" \\  https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2277858099\r\n- [x]  -i \"pandas.Timestamp.today SA01\" \\  https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2278150810\r\n- [x]  -i \"pandas.Timestamp.toordinal SA01\" \\  https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2278150810\r\n- [x]  -i \"pandas.Timestamp.tz_localize SA01\" \\ https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2282834048\r\n- [x]  -i \"pandas.Timestamp.tzinfo GL08\" \\ https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2283015310\r\n- [x]  -i \"pandas.Timestamp.tzname SA01\" \\ https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2282834048\r\n- [x]  -i \"pandas.Timestamp.unit SA01\" \\ https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2282679680\r\n- [x]  -i \"pandas.Timestamp.utcfromtimestamp PR01,SA01\" \\ https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2282834048\r\n- [x]  -i \"pandas.Timestamp.utcoffset SA01\" \\ https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2282679680\r\n- [x]  -i \"pandas.Timestamp.utctimetuple SA01\" \\ https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2282679680\r\n- [x]  -i \"pandas.Timestamp.value GL08\" \\ https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2278898146\r\n- [x]  -i \"pandas.Timestamp.year GL08\" \\ https://github.com/pandas-dev/pandas/issues/59458#issuecomment-2278898146\n\nI will take:  \r\n\r\npandas.Timestamp.hour\r\npandas.Timestamp.max\r\npandas.Timestamp.microsecond\r\npandas.Timestamp.min\n\nI'll take\r\n \"pandas.Timestamp.today\"\r\n \"pandas.Timestamp.toordinal \"\n\nI'll take\r\n```\r\n-i \"pandas.Timestamp.strptime PR01,SA01\" \\\r\n-i \"pandas.Timestamp.timestamp SA01\" \\\r\n-i \"pandas.Timestamp.timetuple SA01\" \\\r\n-i \"pandas.Timestamp.timetz SA01\" \\\r\n-i \"pandas.Timestamp.to_datetime64 SA01\" \\\r\n-i \"pandas.Timestamp.to_julian_date SA01\" \\\r\n```\n\nI'll take \r\n -i \"pandas.Timestamp.year GL08\" \\\r\n-i \"pandas.Timestamp.value GL08\" \\\n\ni'll take \r\n\r\n-i  pandas.Timestamp.month_name SA01\r\n-i \"pandas.Timestamp.quarter SA01\n\nI'll take \r\n\r\n -i \"pandas.Timestamp.fromordinal SA01\" \r\n -i \"pandas.Timestamp.fromtimestamp PR01,SA01\" \n\nI'll take: \r\n-i \"pandas.Timestamp.minute GL08\" \\\r\n-i \"pandas.Timestamp.month GL08\" \\\r\n-i \"pandas.Timestamp.nanosecond GL08\" \\\r\n-i \"pandas.Timestamp.second GL08\" \\\r\n\n\nI'll take:\r\n```\r\n-i \"pandas.Timestamp.unit SA01\" \\\r\n -i \"pandas.Timestamp.utcoffset SA01\" \\\r\n -i \"pandas.Timestamp.utctimetuple SA01\"\r\n ```\n\nI'll take:\r\npandas.Timestamp.tz_localize\r\npandas.Timestamp.tzname\r\npandas.Timestamp.utcfromtimestamp\n\ni will take:\r\n\r\n -i \"pandas.Timestamp.utcoffset SA01\" \\\r\n -i \"pandas.Timestamp.utctimetuple SA01\" \\\n\nI'll take :\r\npandas.Timestamp.tz_localize SA01\r\npandas.Timestamp.tzinfo GL08\r\npandas.Timestamp.tzname SA01\n\nill take:\r\n -i \"pandas.Timestamp.utcfromtimestamp PR01,SA01\" \\\r\n -i \"pandas.Timestamp.utcoffset SA01\" \\\r\n -i \"pandas.Timestamp.utctimetuple SA01\" \\\n\ndid anyone understand how it should be done? im chaning the doc of my functions in timestamp.pyx, nattype.pyx and nothing is being changed when im running scripts/validate_docstrings.py <method-name>\n\n> did anyone understand how it should be done? im chaning the doc of my functions in timestamp.pyx, nattype.pyx and nothing is being changed when im running scripts/validate_docstrings.py\r\n\r\n@40gilad, did you rebuild pandas after your changes?\r\nYou need to compile pandas again each time the C extensions change, for example if you modified any file in `pandas/_libs`.\r\nPlease check the documetation \"Contributing to pandas\", particularly the section: [build and install pandas](https://pandas.pydata.org/docs/development/contributing_environment.html#step-3-build-and-install-pandas)\n\n> > did anyone understand how it should be done? im chaning the doc of my functions in timestamp.pyx, nattype.pyx and nothing is being changed when im running scripts/validate_docstrings.py\r\n> \r\n> @40gilad, did you rebuild pandas after your changes? You need to compile pandas again each time the C extensions change, for example if you modified any file in `pandas/_libs`. Please check the documetation \"Contributing to pandas\", particularly the section: [build and install pandas](https://pandas.pydata.org/docs/development/contributing_environment.html#step-3-build-and-install-pandas)\r\n\r\ni get:\r\nerror: command 'C:\\\\Program Files\\\\Microsoft Visual Studio\\\\2022\\\\Community\\\\VC\\\\Tools\\\\MSVC\\\\14.38.33130\\\\bin\\\\HostX86\\\\x64\\\\link.exe' failed with exit code 1120\n\nIt seems like the only method not picked is `pandas.Timestamp.resolution.` I will work on this method.\n\n> I will take:\r\n> \r\n> pandas.Timestamp.hour pandas.Timestamp.max pandas.Timestamp.microsecond pandas.Timestamp.min\r\n\r\nHour and microsecond seems to be done by https://github.com/pandas-dev/pandas/pull/59622\r\n\n\ni see those question are still on code_checks.sh\r\ncould i take\r\n\r\n> -i \"pandas.Timestamp.nanosecond GL08\"\r\n> -i \"pandas.Timestamp.year GL08\" \\\n\n> i see those question are still on code_checks.sh could i take\r\n> \r\n> > -i \"pandas.Timestamp.nanosecond GL08\"\r\n> > -i \"pandas.Timestamp.year GL08\" \\\r\n\r\nHello @asdkfjsd I have a PR open for this and have been waiting for a review for a while now. \r\n@MarcoGorelli \n\n> > i see those question are still on code_checks.sh could i take\r\n> > > -i \"pandas.Timestamp.nanosecond GL08\"\r\n> > > -i \"pandas.Timestamp.year GL08\" \\\r\n> \r\n> Hello @asdkfjsd I have a PR open for this and have been waiting for a review for a while now. @MarcoGorelli\r\n\r\ni'm sorry , i will find another one \n\nI think all the tasks are picked already ð.\n\nI'll take:\r\npandas.Timestamp.tz_localize\r\npandas.Timestamp.toordinal\r\n\n\nDo any functions still need to be fixed? \n\nI'll take pandas.Timestamp.resolution\n\n`Timestamp.tzinfo` has already been resolved here: #61100\n\nTaking the following:\n\n        -i \"pandas.Timestamp.max PR02\" \\\n        -i \"pandas.Timestamp.min PR02\" \\\n        -i \"pandas.Timestamp.resolution PR02\" \\",
  "pr_link": "https://github.com/pandas-dev/pandas/pull/59622",
  "code_context": [
    {
      "filename": "ci/code_checks.sh",
      "content": "#!/bin/bash\n#\n# Run checks related to code quality.\n#\n# This script is intended for both the CI and to check locally that code standards are\n# respected. We run doctests here (currently some files only), and we\n# validate formatting error in docstrings.\n#\n# Usage:\n#   $ ./ci/code_checks.sh               # run all checks\n#   $ ./ci/code_checks.sh code          # checks on imported code\n#   $ ./ci/code_checks.sh doctests      # run doctests\n#   $ ./ci/code_checks.sh docstrings    # validate docstring errors\n#   $ ./ci/code_checks.sh single-docs   # check single-page docs build warning-free\n#   $ ./ci/code_checks.sh notebooks     # check execution of documentation notebooks\n\nset -uo pipefail\n\nif [[ -v 1 ]]; then\n    CHECK=$1\nelse\n    # script will fail if it uses an unset variable (i.e. $1 is not provided)\n    CHECK=\"\"\nfi\n\n[[ -z \"$CHECK\" || \"$CHECK\" == \"code\" || \"$CHECK\" == \"doctests\" || \"$CHECK\" == \"docstrings\" || \"$CHECK\" == \"single-docs\" || \"$CHECK\" == \"notebooks\" ]] || \\\n    { echo \"Unknown command $1. Usage: $0 [code|doctests|docstrings|single-docs|notebooks]\"; exit 9999; }\n\nBASE_DIR=\"$(dirname $0)/..\"\nRET=0\n\n### CODE ###\nif [[ -z \"$CHECK\" || \"$CHECK\" == \"code\" ]]; then\n\n    MSG='Check import. No warnings, and blocklist some optional dependencies' ; echo $MSG\n    python -W error -c \"\nimport sys\nimport pandas\n\nblocklist = {'bs4', 'gcsfs', 'html5lib', 'http', 'ipython', 'jinja2', 'hypothesis',\n             'lxml', 'matplotlib', 'openpyxl', 'py', 'pytest', 's3fs', 'scipy',\n             'tables', 'urllib.request', 'xlrd', 'xlsxwriter'}\n\n# GH#28227 for some of these check for top-level modules, while others are\n#  more specific (e.g. urllib.request)\nimport_mods = set(m.split('.')[0] for m in sys.modules) | set(sys.modules)\nmods = blocklist & import_mods\nif mods:\n    sys.stderr.write('err: pandas should not import: {}\\n'.format(', '.join(mods)))\n    sys.exit(len(mods))\n    \"\n    RET=$(($RET + $?)) ; echo $MSG \"DONE\"\n\nfi\n\n### DOCTESTS ###\nif [[ -z \"$CHECK\" || \"$CHECK\" == \"doctests\" ]]; then\n\n    MSG='Python and Cython Doctests' ; echo $MSG\n    python -c 'import pandas as pd; pd.test(run_doctests=True)'\n    RET=$(($RET + $?)) ; echo $MSG \"DONE\"\n\nfi\n\n### DOCSTRINGS ###\nif [[ -z \"$CHECK\" || \"$CHECK\" == \"docstrings\" ]]; then\n\n    MSG='Validate Docstrings' ; echo $MSG\n    $BASE_DIR/scripts/validate_docstrings.py \\\n        --format=actions \\\n        -i ES01 `# For now it is ok if docstrings are missing the extended summary` \\\n        -i \"pandas.Series.dt PR01\" `# Accessors are implemented as classes, but we do not document the Parameters section` \\\n        -i \"pandas.MultiIndex.reorder_levels RT03,SA01\" \\\n        -i \"pandas.MultiIndex.to_frame RT03\" \\\n        -i \"pandas.NA SA01\" \\\n        -i \"pandas.NaT SA01\" \\\n        -i \"pandas.Period.freq GL08\" \\\n        -i \"pandas.Period.freqstr SA01\" \\\n        -i \"pandas.Period.ordinal GL08\" \\\n        -i \"pandas.Period.strftime PR01,SA01\" \\\n        -i \"pandas.Period.to_timestamp SA01\" \\\n        -i \"pandas.PeriodDtype SA01\" \\\n        -i \"pandas.PeriodDtype.freq SA01\" \\\n        -i \"pandas.PeriodIndex.day SA01\" \\\n        -i \"pandas.PeriodIndex.day_of_week SA01\" \\\n        -i \"pandas.PeriodIndex.day_of_year SA01\" \\\n        -i \"pandas.PeriodIndex.dayofweek SA01\" \\\n        -i \"pandas.PeriodIndex.dayofyear SA01\" \\\n        -i \"pandas.PeriodIndex.days_in_month SA01\" \\\n        -i \"pandas.PeriodIndex.daysinmonth SA01\" \\\n        -i \"pandas.PeriodIndex.from_fields PR07,SA01\" \\\n        -i \"pandas.PeriodIndex.from_ordinals SA01\" \\\n        -i \"pandas.PeriodIndex.hour SA01\" \\\n        -i \"pandas.PeriodIndex.is_leap_year SA01\" \\\n        -i \"pandas.PeriodIndex.minute SA01\" \\\n        -i \"pandas.PeriodIndex.month SA01\" \\\n        -i \"pandas.PeriodIndex.quarter SA01\" \\\n        -i \"pandas.PeriodIndex.qyear GL08\" \\\n        -i \"pandas.PeriodIndex.second SA01\" \\\n        -i \"pandas.PeriodIndex.to_timestamp RT03,SA01\" \\\n        -i \"pandas.PeriodIndex.week SA01\" \\\n        -i \"pandas.PeriodIndex.weekday SA01\" \\\n        -i \"pandas.PeriodIndex.weekofyear SA01\" \\\n        -i \"pandas.PeriodIndex.year SA01\" \\\n        -i \"pandas.RangeIndex PR07\" \\\n        -i \"pandas.RangeIndex.from_range PR01,SA01\" \\\n        -i \"pandas.RangeIndex.start SA01\" \\\n        -i \"pandas.RangeIndex.step SA01\" \\\n        -i \"pandas.RangeIndex.stop SA01\" \\\n        -i \"pandas.Series.cat.add_categories PR01,PR02\" \\\n        -i \"pandas.Series.cat.as_ordered PR01\" \\\n        -i \"pandas.Series.cat.as_unordered PR01\" \\\n        -i \"pandas.Series.cat.remove_categories PR01,PR02\" \\\n        -i \"pandas.Series.cat.remove_unused_categories PR01\" \\\n        -i \"pandas.Series.cat.rename_categories PR01,PR02\" \\\n        -i \"pandas.Series.cat.reorder_categories PR01,PR02\" \\\n        -i \"pandas.Series.cat.set_categories PR01,PR02\" \\\n        -i \"pandas.Series.dt.as_unit PR01,PR02\" \\\n        -i \"pandas.Series.dt.ceil PR01,PR02\" \\\n        -i \"pandas.Series.dt.day_name PR01,PR02\" \\\n        -i \"pandas.Series.dt.floor PR01,PR02\" \\\n        -i \"pandas.Series.dt.freq GL08\" \\\n        -i \"pandas.Series.dt.microseconds SA01\" \\\n        -i \"pandas.Series.dt.month_name PR01,PR02\" \\\n        -i \"pandas.Series.dt.nanoseconds SA01\" \\\n        -i \"pandas.Series.dt.normalize PR01\" \\\n        -i \"pandas.Series.dt.qyear GL08\" \\\n        -i \"pandas.Series.dt.round PR01,PR02\" \\\n        -i \"pandas.Series.dt.seconds SA01\" \\\n        -i \"pandas.Series.dt.strftime PR01,PR02\" \\\n        -i \"pandas.Series.dt.to_period PR01,PR02\" \\\n        -i \"pandas.Series.dt.total_seconds PR01\" \\\n        -i \"pandas.Series.dt.tz_convert PR01,PR02\" \\\n        -i \"pandas.Series.dt.tz_localize PR01,PR02\" \\\n        -i \"pandas.Series.dt.unit GL08\" \\\n        -i \"pandas.Series.pad PR01,SA01\" \\\n        -i \"pandas.Series.sem PR01,RT03,SA01\" \\\n        -i \"pandas.Series.sparse PR01,SA01\" \\\n        -i \"pandas.Series.sparse.fill_value SA01\" \\\n        -i \"pandas.Series.sparse.from_coo PR07,SA01\" \\\n        -i \"pandas.Series.sparse.npoints SA01\" \\\n        -i \"pandas.Series.sparse.sp_values SA01\" \\\n        -i \"pandas.Series.sparse.to_coo PR07,RT03,SA01\" \\\n        -i \"pandas.Series.std PR01,RT03,SA01\" \\\n        -i \"pandas.Series.str.wrap RT03,SA01\" \\\n        -i \"pandas.Series.str.zfill RT03\" \\\n        -i \"pandas.Timedelta.asm8 SA01\" \\\n        -i \"pandas.Timedelta.ceil SA01\" \\\n        -i \"pandas.Timedelta.components SA01\" \\\n        -i \"pandas.Timedelta.floor SA01\" \\\n        -i \"pandas.Timedelta.max PR02\" \\\n        -i \"pandas.Timedelta.min PR02\" \\\n        -i \"pandas.Timedelta.resolution PR02\" \\\n        -i \"pandas.Timedelta.round SA01\" \\\n        -i \"pandas.Timedelta.to_numpy PR01\" \\\n        -i \"pandas.Timedelta.to_timedelta64 SA01\" \\\n        -i \"pandas.Timedelta.total_seconds SA01\" \\\n        -i \"pandas.Timedelta.view SA01\" \\\n        -i \"pandas.TimedeltaIndex.as_unit RT03,SA01\" \\\n        -i \"pandas.TimedeltaIndex.components SA01\" \\\n        -i \"pandas.TimedeltaIndex.microseconds SA01\" \\\n        -i \"pandas.TimedeltaIndex.nanoseconds SA01\" \\\n        -i \"pandas.TimedeltaIndex.seconds SA01\" \\\n        -i \"pandas.TimedeltaIndex.to_pytimedelta RT03,SA01\" \\\n        -i \"pandas.Timestamp.fold GL08\" \\\n        -i \"pandas.Timestamp.max PR02\" \\\n        -i \"pandas.Timestamp.min PR02\" \\\n        -i \"pandas.Timestamp.nanosecond GL08\" \\\n        -i \"pandas.Timestamp.resolution PR02\" \\\n        -i \"pandas.Timestamp.tzinfo GL08\" \\\n        -i \"pandas.Timestamp.value GL08\" \\\n        -i \"pandas.Timestamp.year GL08\" \\\n        -i \"pandas.api.extensions.ExtensionArray.duplicated RT03,SA01\" \\\n        -i \"pandas.api.extensions.ExtensionArray.fillna SA01\" \\\n        -i \"pandas.api.extensions.ExtensionArray.insert PR07,RT03,SA01\" \\\n        -i \"pandas.api.extensions.ExtensionArray.interpolate PR01,SA01\" \\\n        -i \"pandas.api.extensions.ExtensionArray.isin PR07,RT03,SA01\" \\\n        -i \"pandas.api.extensions.ExtensionArray.tolist RT03,SA01\" \\\n        -i \"pandas.api.extensions.ExtensionArray.unique RT03,SA01\" \\\n        -i \"pandas.api.extensions.ExtensionArray.view SA01\" \\\n        -i \"pandas.api.interchange.from_dataframe RT03,SA01\" \\\n        -i \"pandas.api.types.is_bool PR01,SA01\" \\\n        -i \"pandas.api.types.is_categorical_dtype SA01\" \\\n        -i \"pandas.api.types.is_complex PR01,SA01\" \\\n        -i \"pandas.api.types.is_complex_dtype SA01\" \\\n        -i \"pandas.api.types.is_datetime64_dtype SA01\" \\\n        -i \"pandas.api.types.is_datetime64_ns_dtype SA01\" \\\n        -i \"pandas.api.types.is_datetime64tz_dtype SA01\" \\\n        -i \"pandas.api.types.is_dict_like PR07,SA01\" \\\n        -i \"pandas.api.types.is_extension_array_dtype SA01\" \\\n        -i \"pandas.api.types.is_file_like PR07,SA01\" \\\n        -i \"pandas.api.types.is_float PR01,SA01\" \\\n        -i \"pandas.api.types.is_float_dtype SA01\" \\\n        -i \"pandas.api.types.is_hashable PR01,RT03,SA01\" \\\n        -i \"pandas.api.types.is_int64_dtype SA01\" \\\n        -i \"pandas.api.types.is_integer PR01,SA01\" \\\n        -i \"pandas.api.types.is_integer_dtype SA01\" \\\n        -i \"pandas.api.types.is_interval_dtype SA01\" \\\n        -i \"pandas.api.types.is_iterator PR07,SA01\" \\\n        -i \"pandas.api.types.is_list_like SA01\" \\\n        -i \"pandas.api.types.is_named_tuple PR07,SA01\" \\\n        -i \"pandas.api.types.is_object_dtype SA01\" \\\n        -i \"pandas.api.types.is_re PR07,SA01\" \\\n        -i \"pandas.api.types.is_re_compilable PR07,SA01\" \\\n        -i \"pandas.api.types.pandas_dtype PR07,RT03,SA01\" \\\n        -i \"pandas.arrays.ArrowExtensionArray PR07,SA01\" \\\n        -i \"pandas.arrays.BooleanArray SA01\" \\\n        -i \"pandas.arrays.DatetimeArray SA01\" \\\n        -i \"pandas.arrays.FloatingArray SA01\" \\\n        -i \"pandas.arrays.IntegerArray SA01\" \\\n        -i \"pandas.arrays.IntervalArray.left SA01\" \\\n        -i \"pandas.arrays.IntervalArray.length SA01\" \\\n        -i \"pandas.arrays.IntervalArray.mid SA01\" \\\n        -i \"pandas.arrays.IntervalArray.right SA01\" \\\n        -i \"pandas.arrays.NumpyExtensionArray SA01\" \\\n        -i \"pandas.arrays.SparseArray PR07,SA01\" \\\n        -i \"pandas.arrays.TimedeltaArray PR07,SA01\" \\\n        -i \"pandas.core.groupby.DataFrameGroupBy.__iter__ RT03,SA01\" \\\n        -i \"pandas.core.groupby.DataFrameGroupBy.agg RT03\" \\\n        -i \"pandas.core.groupby.DataFrameGroupBy.aggregate RT03\" \\\n        -i \"pandas.core.groupby.DataFrameGroupBy.boxplot PR07,RT03,SA01\" \\\n        -i \"pandas.core.groupby.DataFrameGroupBy.filter SA01\" \\\n        -i \"pandas.core.groupby.DataFrameGroupBy.get_group RT03,SA01\" \\\n        -i \"pandas.core.groupby.DataFrameGroupBy.groups SA01\" \\\n        -i \"pandas.core.groupby.DataFrameGroupBy.hist RT03\" \\\n        -i \"pandas.core.groupby.DataFrameGroupBy.indices SA01\" \\\n        -i \"pandas.core.groupby.DataFrameGroupBy.max SA01\" \\\n        -i \"pandas.core.groupby.DataFrameGroupBy.min SA01\" \\\n        -i \"pandas.core.groupby.DataFrameGroupBy.nth PR02\" \\\n        -i \"pandas.core.groupby.DataFrameGroupBy.nunique SA01\" \\\n        -i \"pandas.core.groupby.DataFrameGroupBy.ohlc SA01\" \\\n        -i \"pandas.core.groupby.DataFrameGroupBy.plot PR02\" \\\n        -i \"pandas.core.groupby.DataFrameGroupBy.prod SA01\" \\\n        -i \"pandas.core.groupby.DataFrameGroupBy.sem SA01\" \\\n        -i \"pandas.core.groupby.DataFrameGroupBy.sum SA01\" \\\n        -i \"pandas.core.groupby.SeriesGroupBy.__iter__ RT03,SA01\" \\\n        -i \"pandas.core.groupby.SeriesGroupBy.agg RT03\" \\\n        -i \"pandas.core.groupby.SeriesGroupBy.aggregate RT03\" \\\n        -i \"pandas.core.groupby.SeriesGroupBy.filter PR01,SA01\" \\\n        -i \"pandas.core.groupby.SeriesGroupBy.get_group RT03,SA01\" \\\n        -i \"pandas.core.groupby.SeriesGroupBy.groups SA01\" \\\n        -i \"pandas.core.groupby.SeriesGroupBy.indices SA01\" \\\n        -i \"pandas.core.groupby.SeriesGroupBy.is_monotonic_decreasing SA01\" \\\n        -i \"pandas.core.groupby.SeriesGroupBy.is_monotonic_increasing SA01\" \\\n        -i \"pandas.core.groupby.SeriesGroupBy.max SA01\" \\\n        -i \"pandas.core.groupby.SeriesGroupBy.min SA01\" \\\n        -i \"pandas.core.groupby.SeriesGroupBy.nth PR02\" \\\n        -i \"pandas.core.groupby.SeriesGroupBy.ohlc SA01\" \\\n        -i \"pandas.core.groupby.SeriesGroupBy.plot PR02\" \\\n        -i \"pandas.core.groupby.SeriesGroupBy.prod SA01\" \\\n        -i \"pandas.core.groupby.SeriesGroupBy.sem SA01\" \\\n        -i \"pandas.core.groupby.SeriesGroupBy.sum SA01\" \\\n        -i \"pandas.core.resample.Resampler.__iter__ RT03,SA01\" \\\n        -i \"pandas.core.resample.Resampler.ffill RT03\" \\\n        -i \"pandas.core.resample.Resampler.get_group RT03,SA01\" \\\n        -i \"pandas.core.resample.Resampler.groups SA01\" \\\n        -i \"pandas.core.resample.Resampler.indices SA01\" \\\n        -i \"pandas.core.resample.Resampler.max PR01,RT03,SA01\" \\\n        -i \"pandas.core.resample.Resampler.mean SA01\" \\\n        -i \"pandas.core.resample.Resampler.min PR01,RT03,SA01\" \\\n        -i \"pandas.core.resample.Resampler.ohlc SA01\" \\\n        -i \"pandas.core.resample.Resampler.prod SA01\" \\\n        -i \"pandas.core.resample.Resampler.quantile PR01,PR07\" \\\n        -i \"pandas.core.resample.Resampler.sem SA01\" \\\n        -i \"pandas.core.resample.Resampler.std SA01\" \\\n        -i \"pandas.core.resample.Resampler.sum SA01\" \\\n        -i \"pandas.core.resample.Resampler.transform PR01,RT03,SA01\" \\\n        -i \"pandas.core.resample.Resampler.var SA01\" \\\n        -i \"pandas.core.window.expanding.Expanding.corr PR01\" \\\n        -i \"pandas.core.window.expanding.Expanding.count PR01\" \\\n        -i \"pandas.core.window.rolling.Rolling.max PR01\" \\\n        -i \"pandas.core.window.rolling.Window.std PR01\" \\\n        -i \"pandas.core.window.rolling.Window.var PR01\" \\\n        -i \"pandas.date_range RT03\" \\\n        -i \"pandas.errors.AbstractMethodError PR01,SA01\" \\\n        -i \"pandas.errors.AttributeConflictWarning SA01\" \\\n        -i \"pandas.errors.CSSWarning SA01\" \\\n        -i \"pandas.errors.CategoricalConversionWarning SA01\" \\\n        -i \"pandas.errors.ChainedAssignmentError SA01\" \\\n        -i \"pandas.errors.ClosedFileError SA01\" \\\n        -i \"pandas.errors.DataError SA01\" \\\n        -i \"pandas.errors.DuplicateLabelError SA01\" \\\n        -i \"pandas.errors.EmptyDataError SA01\" \\\n        -i \"pandas.errors.IntCastingNaNError SA01\" \\\n        -i \"pandas.errors.InvalidIndexError SA01\" \\\n        -i \"pandas.errors.InvalidVersion SA01\" \\\n        -i \"pandas.errors.MergeError SA01\" \\\n        -i \"pandas.errors.NullFrequencyError SA01\" \\\n        -i \"pandas.errors.NumExprClobberingError SA01\" \\\n        -i \"pandas.errors.NumbaUtilError SA01\" \\\n        -i \"pandas.errors.OptionError SA01\" \\\n        -i \"pandas.errors.OutOfBoundsDatetime SA01\" \\\n        -i \"pandas.errors.OutOfBoundsTimedelta SA01\" \\\n        -i \"pandas.errors.PerformanceWarning SA01\" \\\n        -i \"pandas.errors.PossibleDataLossError SA01\" \\\n        -i \"pandas.errors.PossiblePrecisionLoss SA01\" \\\n        -i \"pandas.errors.SpecificationError SA01\" \\\n        -i \"pandas.errors.UndefinedVariableError PR01,SA01\" \\\n        -i \"pandas.errors.UnsortedIndexError SA01\" \\\n        -i \"pandas.errors.UnsupportedFunctionCall SA01\" \\\n        -i \"pandas.errors.ValueLabelTypeMismatch SA01\" \\\n        -i \"pandas.infer_freq SA01\" \\\n        -i \"pandas.io.formats.style.Styler.apply RT03\" \\\n        -i \"pandas.io.formats.style.Styler.apply_index RT03\" \\\n        -i \"pandas.io.formats.style.Styler.background_gradient RT03\" \\\n        -i \"pandas.io.formats.style.Styler.bar RT03,SA01\" \\\n        -i \"pandas.io.formats.style.Styler.clear SA01\" \\\n        -i \"pandas.io.formats.style.Styler.concat RT03,SA01\" \\\n        -i \"pandas.io.formats.style.Styler.export RT03\" \\\n        -i \"pandas.io.formats.style.Styler.from_custom_template SA01\" \\\n        -i \"pandas.io.formats.style.Styler.hide RT03,SA01\" \\\n        -i \"pandas.io.formats.style.Styler.highlight_between RT03\" \\\n        -i \"pandas.io.formats.style.Styler.highlight_max RT03\" \\\n        -i \"pandas.io.formats.style.Styler.highlight_min RT03\" \\\n        -i \"pandas.io.formats.style.Styler.highlight_null RT03\" \\\n        -i \"pandas.io.formats.style.Styler.highlight_quantile RT03\" \\\n        -i \"pandas.io.formats.style.Styler.map RT03\" \\\n        -i \"pandas.io.formats.style.Styler.map_index RT03\" \\\n        -i \"pandas.io.formats.style.Styler.set_caption RT03,SA01\" \\\n        -i \"pandas.io.formats.style.Styler.set_properties RT03,SA01\" \\\n        -i \"pandas.io.formats.style.Styler.set_sticky RT03,SA01\" \\\n        -i \"pandas.io.formats.style.Styler.set_table_attributes PR07,RT03\" \\\n        -i \"pandas.io.formats.style.Styler.set_table_styles RT03\" \\\n        -i \"pandas.io.formats.style.Styler.set_td_classes RT03\" \\\n        -i \"pandas.io.formats.style.Styler.set_tooltips RT03,SA01\" \\\n        -i \"pandas.io.formats.style.Styler.set_uuid PR07,RT03,SA01\" \\\n        -i \"pandas.io.formats.style.Styler.text_gradient RT03\" \\\n        -i \"pandas.io.formats.style.Styler.to_excel PR01\" \\\n        -i \"pandas.io.formats.style.Styler.to_string SA01\" \\\n        -i \"pandas.io.formats.style.Styler.use RT03\" \\\n        -i \"pandas.io.json.build_table_schema PR07,RT03,SA01\" \\\n        -i \"pandas.io.stata.StataReader.data_label SA01\" \\\n        -i \"pandas.io.stata.StataReader.value_labels RT03,SA01\" \\\n        -i \"pandas.io.stata.StataReader.variable_labels RT03,SA01\" \\\n        -i \"pandas.io.stata.StataWriter.write_file SA01\" \\\n        -i \"pandas.json_normalize RT03,SA01\" \\\n        -i \"pandas.period_range RT03,SA01\" \\\n        -i \"pandas.plotting.andrews_curves RT03,SA01\" \\\n        -i \"pandas.plotting.lag_plot RT03,SA01\" \\\n        -i \"pandas.plotting.scatter_matrix PR07,SA01\" \\\n        -i \"pandas.set_eng_float_format RT03,SA01\" \\\n        -i \"pandas.testing.assert_extension_array_equal SA01\" \\\n        -i \"pandas.tseries.offsets.BDay PR02,SA01\" \\\n        -i \"pandas.tseries.offsets.BQuarterBegin.is_on_offset GL08\" \\\n        -i \"pandas.tseries.offsets.BQuarterBegin.n GL08\" \\\n        -i \"pandas.tseries.offsets.BQuarterBegin.normalize GL08\" \\\n        -i \"pandas.tseries.offsets.BQuarterBegin.rule_code GL08\" \\\n        -i \"pandas.tseries.offsets.BQuarterBegin.startingMonth GL08\" \\\n        -i \"pandas.tseries.offsets.BQuarterEnd.is_on_offset GL08\" \\\n        -i \"pandas.tseries.offsets.BQuarterEnd.n GL08\" \\\n        -i \"pandas.tseries.offsets.BQuarterEnd.normalize GL08\" \\\n        -i \"pandas.tseries.offsets.BQuarterEnd.rule_code GL08\" \\\n        -i \"pandas.tseries.offsets.BQuarterEnd.startingMonth GL08\" \\\n        -i \"pandas.tseries.offsets.BYearBegin.is_on_offset GL08\" \\\n        -i \"pandas.tseries.offsets.BYearBegin.month GL08\" \\\n        -i \"pandas.tseries.offsets.BYearBegin.n GL08\" \\\n        -i \"pandas.tseries.offsets.BYearBegin.normalize GL08\" \\\n        -i \"pandas.tseries.offsets.BYearEnd.is_on_offset GL08\" \\\n        -i \"pandas.tseries.offsets.BYearEnd.month GL08\" \\\n        -i \"pandas.tseries.offsets.BYearEnd.n GL08\" \\\n        -i \"pandas.tseries.offsets.BYearEnd.normalize GL08\" \\\n        -i \"pandas.tseries.offsets.BusinessDay PR02,SA01\" \\\n        -i \"pandas.tseries.offsets.BusinessDay.calendar GL08\" \\\n        -i \"pandas.tseries.offsets.BusinessDay.holidays GL08\" \\\n        -i \"pandas.tseries.offsets.BusinessDay.is_on_offset GL08\" \\\n        -i \"pandas.tseries.offsets.BusinessDay.n GL08\" \\\n        -i \"pandas.tseries.offsets.BusinessDay.normalize GL08\" \\\n        -i \"pandas.tseries.offsets.BusinessDay.weekmask GL08\" \\\n        -i \"pandas.tseries.offsets.BusinessHour PR02,SA01\" \\\n        -i \"pandas.tseries.offsets.BusinessHour.calendar GL08\" \\\n        -i \"pandas.tseries.offsets.BusinessHour.end GL08\" \\\n        -i \"pandas.tseries.offsets.BusinessHour.holidays GL08\" \\\n        -i \"pandas.tseries.offsets.BusinessHour.is_on_offset GL08\" \\\n        -i \"pandas.tseries.offsets.BusinessHour.n GL08\" \\\n        -i \"pandas.tseries.offsets.BusinessHour.normalize GL08\" \\\n        -i \"pandas.tseries.offsets.BusinessHour.start GL08\" \\\n        -i \"pandas.tseries.offsets.BusinessHour.weekmask GL08\" \\\n        -i \"pandas.tseries.offsets.BusinessMonthBegin.is_on_offset GL08\" \\\n        -i \"pandas.tseries.offsets.BusinessMonthBegin.n GL08\" \\\n        -i \"pandas.tseries.offsets.BusinessMonthBegin.normalize GL08\" \\\n        -i \"pandas.tseries.offsets.BusinessMonthEnd.is_on_offset GL08\" \\\n        -i \"pandas.tseries.offsets.BusinessMonthEnd.n GL08\" \\\n        -i \"pandas.tseries.offsets.BusinessMonthEnd.normalize GL08\" \\\n        -i \"pandas.tseries.offsets.CBMonthBegin PR02\" \\\n        -i \"pandas.tseries.offsets.CBMonthEnd PR02\" \\\n        -i \"pandas.tseries.offsets.CDay PR02,SA01\" \\\n        -i \"pandas.tseries.offsets.CustomBusinessDay PR02,SA01\" \\\n        -i \"pandas.tseries.offsets.CustomBusinessDay.calendar GL08\" \\\n        -i \"pandas.tseries.offsets.CustomBusinessDay.holidays GL08\" \\\n        -i \"pandas.tseries.offsets.CustomBusinessDay.is_on_offset GL08\" \\\n        -i \"pandas.tseries.offsets.CustomBusinessDay.n GL08\" \\\n        -i \"pandas.tseries.offsets.CustomBusinessDay.normalize GL08\" \\\n        -i \"pandas.tseries.offsets.CustomBusinessDay.weekmask GL08\" \\\n        -i \"pandas.tseries.offsets.CustomBusinessHour PR02,SA01\" \\\n        -i \"pandas.tseries.offsets.CustomBusinessHour.calendar GL08\" \\\n        -i \"pandas.tseries.offsets.CustomBusinessHour.end GL08\" \\\n        -i \"pandas.tseries.offsets.CustomBusinessHour.holidays GL08\" \\\n        -i \"pandas.tseries.offsets.CustomBusinessHour.is_on_offset GL08\" \\\n        -i \"pandas.tseries.offsets.CustomBusinessHour.n GL08\" \\\n        -i \"pandas.tseries.offsets.CustomBusinessHour.normalize GL08\" \\\n        -i \"pandas.tseries.offsets.CustomBusinessHour.start GL08\" \\\n        -i \"pandas.tseries.offsets.CustomBusinessHour.weekmask GL08\" \\\n        -i \"pandas.tseries.offsets.CustomBusinessMonthBegin PR02\" \\\n        -i \"pandas.tseries.offsets.CustomBusinessMonthBegin.calendar GL08\" \\\n        -i \"pandas.tseries.offsets.CustomBusinessMonthBegin.holidays GL08\" \\\n        -i \"pandas.tseries.offsets.CustomBusinessMonthBegin.is_on_offset SA01\" \\\n        -i \"pandas.tseries.offsets.CustomBusinessMonthBegin.m_offset GL08\" \\\n        -i \"pandas.tseries.offsets.CustomBusinessMonthBegin.n GL08\" \\\n        -i \"pandas.tseries.offsets.CustomBusinessMonthBegin.normalize GL08\" \\\n        -i \"pandas.tseries.offsets.CustomBusinessMonthBegin.weekmask GL08\" \\\n        -i \"pandas.tseries.offsets.CustomBusinessMonthEnd PR02\" \\\n        -i \"pandas.tseries.offsets.CustomBusinessMonthEnd.calendar GL08\" \\\n        -i \"pandas.tseries.offsets.CustomBusinessMonthEnd.holidays GL08\" \\\n        -i \"pandas.tseries.offsets.CustomBusinessMonthEnd.is_on_offset SA01\" \\\n        -i \"pandas.tseries.offsets.CustomBusinessMonthEnd.m_offset GL08\" \\\n        -i \"pandas.tseries.offsets.CustomBusinessMonthEnd.n GL08\" \\\n        -i \"pandas.tseries.offsets.CustomBusinessMonthEnd.normalize GL08\" \\\n        -i \"pandas.tseries.offsets.CustomBusinessMonthEnd.weekmask GL08\" \\\n        -i \"pandas.tseries.offsets.DateOffset.is_on_offset GL08\" \\\n        -i \"pandas.tseries.offsets.DateOffset.n GL08\" \\\n        -i \"pandas.tseries.offsets.DateOffset.normalize GL08\" \\\n        -i \"pandas.tseries.offsets.Day.is_on_offset GL08\" \\\n        -i \"pandas.tseries.offsets.Day.n GL08\" \\\n        -i \"pandas.tseries.offsets.Day.normalize GL08\" \\\n        -i \"pandas.tseries.offsets.Easter.is_on_offset GL08\" \\\n        -i \"pandas.tseries.offsets.Easter.n GL08\" \\\n        -i \"pandas.tseries.offsets.Easter.normalize GL08\" \\\n        -i \"pandas.tseries.offsets.FY5253.get_rule_code_suffix GL08\" \\\n        -i \"pandas.tseries.offsets.FY5253.get_year_end GL08\" \\\n        -i \"pandas.tseries.offsets.FY5253.is_on_offset GL08\" \\\n        -i \"pandas.tseries.offsets.FY5253.n GL08\" \\\n        -i \"pandas.tseries.offsets.FY5253.normalize GL08\" \\\n        -i \"pandas.tseries.offsets.FY5253.rule_code GL08\" \\\n        -i \"pandas.tseries.offsets.FY5253.startingMonth GL08\" \\\n        -i \"pandas.tseries.offsets.FY5253.variation GL08\" \\\n        -i \"pandas.tseries.offsets.FY5253.weekday GL08\" \\\n        -i \"pandas.tseries.offsets.FY5253Quarter.get_rule_code_suffix GL08\" \\\n        -i \"pandas.tseries.offsets.FY5253Quarter.get_weeks GL08\" \\\n        -i \"pandas.tseries.offsets.FY5253Quarter.is_on_offset GL08\" \\\n        -i \"pandas.tseries.offsets.FY5253Quarter.n GL08\" \\\n        -i \"pandas.tseries.offsets.FY5253Quarter.normalize GL08\" \\\n        -i \"pandas.tseries.offsets.FY5253Quarter.qtr_with_extra_week GL08\" \\\n        -i \"pandas.tseries.offsets.FY5253Quarter.rule_code GL08\" \\\n        -i \"pandas.tseries.offsets.FY5253Quarter.startingMonth GL08\" \\\n        -i \"pandas.tseries.offsets.FY5253Quarter.variation GL08\" \\\n        -i \"pandas.tseries.offsets.FY5253Quarter.weekday GL08\" \\\n        -i \"pandas.tseries.offsets.FY5253Quarter.year_has_extra_week GL08\" \\\n        -i \"pandas.tseries.offsets.Hour.is_on_offset GL08\" \\\n        -i \"pandas.tseries.offsets.Hour.n GL08\" \\\n        -i \"pandas.tseries.offsets.Hour.normalize GL08\" \\\n        -i \"pandas.tseries.offsets.LastWeekOfMonth SA01\" \\\n        -i \"pandas.tseries.offsets.LastWeekOfMonth.is_on_offset GL08\" \\\n        -i \"pandas.tseries.offsets.LastWeekOfMonth.n GL08\" \\\n        -i \"pandas.tseries.offsets.LastWeekOfMonth.normalize GL08\" \\\n        -i \"pandas.tseries.offsets.LastWeekOfMonth.week GL08\" \\\n        -i \"pandas.tseries.offsets.LastWeekOfMonth.weekday GL08\" \\\n        -i \"pandas.tseries.offsets.Micro.is_on_offset GL08\" \\\n        -i \"pandas.tseries.offsets.Micro.n GL08\" \\\n        -i \"pandas.tseries.offsets.Micro.normalize GL08\" \\\n        -i \"pandas.tseries.offsets.Milli.is_on_offset GL08\" \\\n        -i \"pandas.tseries.offsets.Milli.n GL08\" \\\n        -i \"pandas.tseries.offsets.Milli.normalize GL08\" \\\n        -i \"pandas.tseries.offsets.Minute.is_on_offset GL08\" \\\n        -i \"pandas.tseries.offsets.Minute.n GL08\" \\\n        -i \"pandas.tseries.offsets.Minute.normalize GL08\" \\\n        -i \"pandas.tseries.offsets.MonthBegin.is_on_offset GL08\" \\\n        -i \"pandas.tseries.offsets.MonthBegin.n GL08\" \\\n        -i \"pandas.tseries.offsets.MonthBegin.normalize GL08\" \\\n        -i \"pandas.tseries.offsets.MonthEnd.is_on_offset GL08\" \\\n        -i \"pandas.tseries.offsets.MonthEnd.n GL08\" \\\n        -i \"pandas.tseries.offsets.MonthEnd.normalize GL08\" \\\n        -i \"pandas.tseries.offsets.Nano.is_on_offset GL08\" \\\n        -i \"pandas.tseries.offsets.Nano.normalize GL08\" \\\n        -i \"pandas.tseries.offsets.Nano.n GL08\" \\\n        -i \"pandas.tseries.offsets.QuarterBegin.is_on_offset GL08\" \\\n        -i \"pandas.tseries.offsets.QuarterBegin.n GL08\" \\\n        -i \"pandas.tseries.offsets.QuarterBegin.normalize GL08\" \\\n        -i \"pandas.tseries.offsets.QuarterBegin.rule_code GL08\" \\\n        -i \"pandas.tseries.offsets.QuarterBegin.startingMonth GL08\" \\\n        -i \"pandas.tseries.offsets.QuarterEnd.is_on_offset GL08\" \\\n        -i \"pandas.tseries.offsets.QuarterEnd.n GL08\" \\\n        -i \"pandas.tseries.offsets.QuarterEnd.normalize GL08\" \\\n        -i \"pandas.tseries.offsets.QuarterEnd.rule_code GL08\" \\\n        -i \"pandas.tseries.offsets.QuarterEnd.startingMonth GL08\" \\\n        -i \"pandas.tseries.offsets.Second.is_on_offset GL08\" \\\n        -i \"pandas.tseries.offsets.Second.n GL08\" \\\n        -i \"pandas.tseries.offsets.Second.normalize GL08\" \\\n        -i \"pandas.tseries.offsets.SemiMonthBegin SA01\" \\\n        -i \"pandas.tseries.offsets.SemiMonthBegin.day_of_month GL08\" \\\n        -i \"pandas.tseries.offsets.SemiMonthBegin.is_on_offset GL08\" \\\n        -i \"pandas.tseries.offsets.SemiMonthBegin.n GL08\" \\\n        -i \"pandas.tseries.offsets.SemiMonthBegin.normalize GL08\" \\\n        -i \"pandas.tseries.offsets.SemiMonthBegin.rule_code GL08\" \\\n        -i \"pandas.tseries.offsets.SemiMonthEnd SA01\" \\\n        -i \"pandas.tseries.offsets.SemiMonthEnd.day_of_month GL08\" \\\n        -i \"pandas.tseries.offsets.SemiMonthEnd.is_on_offset GL08\" \\\n        -i \"pandas.tseries.offsets.SemiMonthEnd.n GL08\" \\\n        -i \"pandas.tseries.offsets.SemiMonthEnd.normalize GL08\" \\\n        -i \"pandas.tseries.offsets.SemiMonthEnd.rule_code GL08\" \\\n        -i \"pandas.tseries.offsets.Tick GL08\" \\\n        -i \"pandas.tseries.offsets.Tick.is_on_offset GL08\" \\\n        -i \"pandas.tseries.offsets.Tick.n GL08\" \\\n        -i \"pandas.tseries.offsets.Tick.normalize GL08\" \\\n        -i \"pandas.tseries.offsets.Week.is_on_offset GL08\" \\\n        -i \"pandas.tseries.offsets.Week.n GL08\" \\\n        -i \"pandas.tseries.offsets.Week.normalize GL08\" \\\n        -i \"pandas.tseries.offsets.Week.weekday GL08\" \\\n        -i \"pandas.tseries.offsets.WeekOfMonth SA01\" \\\n        -i \"pandas.tseries.offsets.WeekOfMonth.is_on_offset GL08\" \\\n        -i \"pandas.tseries.offsets.WeekOfMonth.n GL08\" \\\n        -i \"pandas.tseries.offsets.WeekOfMonth.normalize GL08\" \\\n        -i \"pandas.tseries.offsets.WeekOfMonth.week GL08\" \\\n        -i \"pandas.tseries.offsets.WeekOfMonth.weekday GL08\" \\\n        -i \"pandas.tseries.offsets.YearBegin.is_on_offset GL08\" \\\n        -i \"pandas.tseries.offsets.YearBegin.month GL08\" \\\n        -i \"pandas.tseries.offsets.YearBegin.n GL08\" \\\n        -i \"pandas.tseries.offsets.YearBegin.normalize GL08\" \\\n        -i \"pandas.tseries.offsets.YearEnd.is_on_offset GL08\" \\\n        -i \"pandas.tseries.offsets.YearEnd.month GL08\" \\\n        -i \"pandas.tseries.offsets.YearEnd.n GL08\" \\\n        -i \"pandas.tseries.offsets.YearEnd.normalize GL08\" \\\n        -i \"pandas.util.hash_pandas_object PR07,SA01\" # There should be no backslash in the final line, please keep this comment in the last ignored function\n\n    RET=$(($RET + $?)) ; echo $MSG \"DONE\"\n\nfi\n\n### DOCUMENTATION NOTEBOOKS ###\nif [[ -z \"$CHECK\" || \"$CHECK\" == \"notebooks\" ]]; then\n\n    MSG='Notebooks' ; echo $MSG\n    jupyter nbconvert --execute $(find doc/source -name '*.ipynb') --to notebook\n    RET=$(($RET + $?)) ; echo $MSG \"DONE\"\n\nfi\n\n### SINGLE-PAGE DOCS ###\nif [[ -z \"$CHECK\" || \"$CHECK\" == \"single-docs\" ]]; then\n    python doc/make.py --warnings-are-errors --no-browser --single pandas.Series.value_counts\n    python doc/make.py --warnings-are-errors --no-browser --single pandas.Series.str.split\nfi\n\nexit $RET\n"
    }
  ]
}