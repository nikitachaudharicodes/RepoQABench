{
  "repo_name": "pandas-dev_pandas",
  "issue_id": "48779",
  "issue_description": "# BUG: pd.offsets.MonthEnd() delevers wrong month\n\n### Pandas version checks\n\n- [X] I have checked that this issue has not already been reported.\n\n- [X] I have confirmed this bug exists on the [latest version](https://pandas.pydata.org/docs/whatsnew/index.html) of pandas.\n\n- [X] I have confirmed this bug exists on the main branch of pandas.\n\n\n### Reproducible Example\n\n```python\nimport pandas as pd\r\nts = pd.Timestamp(2017, 1, 31)\r\nts + pd.offsets.MonthEnd()\n```\n\n\n### Issue Description\n\nI expect that the answer is: Timestamp('2017-01-31 00:00:00')\r\nbut I get: Timestamp('2017-02-28 00:00:00')\n\n### Expected Behavior\n\nTimestamp('2017-01-31 00:00:00')\n\n### Installed Versions\n\n<details>\r\n\r\n\r\nINSTALLED VERSIONS\r\n------------------\r\ncommit           : 4bfe3d07b4858144c219b9346329027024102ab6\r\npython           : 3.9.12.final.0\r\npython-bits      : 64\r\nOS               : Windows\r\nOS-release       : 10\r\nVersion          : 10.0.19044\r\nmachine          : AMD64\r\nprocessor        : Intel64 Family 6 Model 140 Stepping 1, GenuineIntel\r\nbyteorder        : little\r\nLC_ALL           : None\r\nLANG             : None\r\nLOCALE           : Dutch_Netherlands.1252\r\n\r\npandas           : 1.4.2\r\nnumpy            : 1.21.5\r\npytz             : 2021.3\r\ndateutil         : 2.8.2\r\npip              : 21.2.4\r\nsetuptools       : 61.2.0\r\nCython           : 0.29.28\r\npytest           : 7.1.1\r\nhypothesis       : None\r\nsphinx           : 4.4.0\r\nblosc            : None\r\nfeather          : None\r\nxlsxwriter       : 3.0.3\r\nlxml.etree       : 4.8.0\r\nhtml5lib         : None\r\npymysql          : None\r\npsycopg2         : None\r\njinja2           : 2.11.3\r\nIPython          : 8.2.0\r\npandas_datareader: None\r\nbs4              : 4.11.1\r\nbottleneck       : 1.3.4\r\nbrotli           : \r\nfastparquet      : None\r\nfsspec           : 2022.02.0\r\ngcsfs            : None\r\nmarkupsafe       : 2.0.1\r\nmatplotlib       : 3.5.1\r\nnumba            : 0.55.1\r\nnumexpr          : 2.8.1\r\nodfpy            : None\r\nopenpyxl         : 3.0.9\r\npandas_gbq       : None\r\npyarrow          : None\r\npyreadstat       : None\r\npyxlsb           : None\r\ns3fs             : None\r\nscipy            : 1.7.3\r\nsnappy           : \r\nsqlalchemy       : 1.4.32\r\ntables           : 3.6.1\r\ntabulate         : 0.8.9\r\nxarray           : 0.20.1\r\nxlrd             : 2.0.1\r\nxlwt             : None\r\nzstandard        : None\r\n\r\n</details>\r\n",
  "issue_comments": [
    {
      "id": 1257707096,
      "user": "MarcoGorelli",
      "body": "Thanks for the report\r\n\r\n`MonthEnd` goes to the next date which is an end of the month, so this seems correct\r\n\r\nYou probably want `MonthEnd(0)` to get the end of the current month\r\n\r\nMight be good to add this as an example to the docs as it seems to be a common source of confusion https://stackoverflow.com/questions/37354105/find-the-end-of-the-month-of-a-pandas-dataframe-series"
    },
    {
      "id": 1257765057,
      "user": "ZDenizYStenhaug",
      "body": "Hi! :) I'd love to help with the documentation if this issue is still relevant. If so, could you please assign it to me?\r\nThanks, have a good day."
    },
    {
      "id": 1257812935,
      "user": "MarcoGorelli",
      "body": "thanks, go ahead! if you comment \"take\" the issue will be assigned to you, do reach out if you have questions"
    },
    {
      "id": 1257860540,
      "user": "ZDenizYStenhaug",
      "body": "take"
    },
    {
      "id": 1265785839,
      "user": "ChhaSahil",
      "body": "take"
    },
    {
      "id": 1272543037,
      "user": "jtimko16",
      "body": "Hello, I am looking for my very first contribution. Is there still something I can help will (I would probably need a little bit of guidance). Thanks"
    },
    {
      "id": 1272544607,
      "user": "MarcoGorelli",
      "body": "yup, pull requests welcome https://pandas.pydata.org/pandas-docs/stable/development/contributing.html"
    },
    {
      "id": 1272843613,
      "user": "jtimko16",
      "body": "take"
    },
    {
      "id": 1274248580,
      "user": "pjousma",
      "body": "Thanks,\n\nI found a equivalent solution: ts.replace(day=1) + pd.offsets.MonthEnd(0)\nFor me it is not logical to go to the next month when no parameters are\ngiven.\nFor me it is logical that the default parameter should be '0' when no\nparameters are given by the user.\n\nBut thanks for the quick response\n\n\nOp ma 26 sep. 2022 om 10:51 schreef Marco Edward Gorelli <\n***@***.***>:\n\n> Thanks for the report\n>\n> MonthEnd goes to the next date which is an end of the month, so this\n> seems correct\n>\n> You probably want MonthEnd(0) to get the end of the current month\n>\n> Might be good to add this as an example to the docs as it seems to be a\n> common source of confusion\n> https://stackoverflow.com/questions/37354105/find-the-end-of-the-month-of-a-pandas-dataframe-series\n>\n> —\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/48779#issuecomment-1257707096>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/A3IXQLDZWOMAEFHTFZOVUQDWAFPZDANCNFSM6AAAAAAQVRXV34>\n> .\n> You are receiving this because you authored the thread.Message ID:\n> ***@***.***>\n>\n"
    },
    {
      "id": 1274463033,
      "user": "jtimko16",
      "body": "> Thanks, I found a equivalent solution: ts.replace(day=1) + pd.offsets.MonthEnd(0) For me it is not logical to go to the next month when no parameters are given. For me it is logical that the default parameter should be '0' when no parameters are given by the user. But thanks for the quick response Op ma 26 sep. 2022 om 10:51 schreef Marco Edward Gorelli < ***@***.***>:\r\n> […](#)\r\n> Thanks for the report MonthEnd goes to the next date which is an end of the month, so this seems correct You probably want MonthEnd(0) to get the end of the current month Might be good to add this as an example to the docs as it seems to be a common source of confusion https://stackoverflow.com/questions/37354105/find-the-end-of-the-month-of-a-pandas-dataframe-series — Reply to this email directly, view it on GitHub <[#48779 (comment)](https://github.com/pandas-dev/pandas/issues/48779#issuecomment-1257707096)>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/A3IXQLDZWOMAEFHTFZOVUQDWAFPZDANCNFSM6AAAAAAQVRXV34> . You are receiving this because you authored the thread.Message ID: ***@***.***>\r\n\r\nHello, pjousma\r\n\r\nThanks for your comment. I've been thinking about it, and also agree, that the default n parameter should be zero. And also the same for pandas.tseries.offsets.YearEnd() function (it has the same issue).\r\n\r\nWho can decide whether we should change parameter to zero or keep it as is?\r\n\r\nThanks,\r\nJ."
    },
    {
      "id": 1275720855,
      "user": "MarcoGorelli",
      "body": "this'd be a breaking change and would have to go through a deprecation cycle, not sure it'd be worth it. Would be more in favour of just clearly documenting the behaviour"
    },
    {
      "id": 1275857917,
      "user": "jtimko16",
      "body": "> this'd be a breaking change and would have to go through a deprecation cycle, not sure it'd be worth it. Would be more in favour of just clearly documenting the behaviour\r\n\r\nOk, ok. I am going to update the documentation in the next few days. I'll let you know in case of any questions/issues. Thanks."
    },
    {
      "id": 1279701966,
      "user": "jtimko16",
      "body": "Hi @MarcoGorelli , please may I ask you for a clarification.\r\n\r\nDo I understand correctly, I should is update this page of documentation?: https://pandas.pydata.org/docs/reference/api/pandas.tseries.offsets.MonthEnd.html\r\n\r\nTherefore I'll be modifying this part of code \r\nhttps://github.com/pandas-dev/pandas/blob/main/pandas/_libs/tslibs/offsets.pyx (class MonthEnd; starting from row 2746 - I am going to write more examples into the comment block below). Is it correct? Thanks\r\n\r\n![image](https://user-images.githubusercontent.com/61096773/195978661-ab2eb615-b7d6-49e8-b1f5-c702ddf68944.png)\r\n"
    },
    {
      "id": 1279704060,
      "user": "MarcoGorelli",
      "body": "yeah looks fine"
    },
    {
      "id": 1280055330,
      "user": "jtimko16",
      "body": "I created a Pull Request https://github.com/pandas-dev/pandas/pull/49133\r\n\r\nHowever as it is my very Pull Request, therefore for now, I marked it as a draft. Please can you look at it and give me some feedback? Thanks"
    },
    {
      "id": 1284045381,
      "user": "pjousma",
      "body": "\"When parameter n=0, always offset to the end of month.\n\nWhen parameter n=1, depend on the given date:\na) Given date is on an anchor point (last day of the month) -> offset to\nthe end of the following month.\n\nb) Given date is not on an anchor point -> offset to the end of the same\nmonth.\"\n\nFor me the functionality of the parameter is not logical.\nMy intepretation is that n the offset of the data used by this function.\nn=0: end of month (of used date)\nn=1: end of next month\nn=2: end of 2e next month\nn=-1: end of previous month\n\nAn intepration as mentioned \"n=1 a if ... else  b\" is for me very unlogical.\n\nOp zo 16 okt. 2022 om 22:54 schreef Jan Timko ***@***.***>:\n\n> I created a Pull Request #49133\n> <https://github.com/pandas-dev/pandas/pull/49133>\n>\n> However as it is my very Pull Request, therefore for now, I marked it as a\n> draft. Please can you look at it and give me some feedback? Thanks\n>\n> —\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/48779#issuecomment-1280055330>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/A3IXQLBOJSCRDFHHADNJHNDWDRTOPANCNFSM6AAAAAAQVRXV34>\n> .\n> You are receiving this because you authored the thread.Message ID:\n> ***@***.***>\n>\n"
    },
    {
      "id": 1284553042,
      "user": "jtimko16",
      "body": "@pjousma Yes, I agree that the current behavior is little bit confusing, and what you suggested is definitely more logical.\r\n\r\nHowever, I believe that as quick immediate solution we can document current logic (if everything goes well we can close this PR in next several days) and in longer term we can open discussion about changing functionality of the 'n' parameter. Not sure about processes here in Panda, but it make take some time to approve an implement the change.\r\n"
    },
    {
      "id": 1284587500,
      "user": "MarcoGorelli",
      "body": "Yeah changing behaviour shouldn't be taken lightly - for a start, would there be a way to communicate the change to users in such a way as to not flood them with warnings every time they use `MonthEnd`?\r\n\r\nBut certainly it should be clearly documented with examples so thanks @honza26 for taking this on!"
    },
    {
      "id": 1295850022,
      "user": "jtimko16",
      "body": "Hello, unfortunately I am facing technical issues with setting up environment and will not be able to finish (my laptop is quite old and slow, therefore cannot install a lot of tools that will slow it done further)\r\n\r\nPR in progress for anyone who want to take it from there:\r\nhttps://github.com/pandas-dev/pandas/pull/49133\r\n\r\nIf any question, feel free to reach out. And @MarcoGorelli thanks a lot for help and guidance with it (although I didn't manage to cross the finishing line).\r\n\r\nCheers,\r\nJan"
    },
    {
      "id": 1295855905,
      "user": "MarcoGorelli",
      "body": "hey @honza26 - if you want to come to the next new contributors meeting, you could share you screen and we could resolve your technical issues with you?"
    },
    {
      "id": 1295869325,
      "user": "justin4480",
      "body": "take"
    },
    {
      "id": 1295892988,
      "user": "justin4480",
      "body": "Hi.  I'm a long time user of pandas, but this is my first contribution.  Can I update both the docstring and the docs?\r\n\r\nI plan to:\r\n1. make clear that normalize is an ignored parameter\r\n2. clarify the unintuitive logic when MonthEnd n > 0 and added to a Timestamp not at monthend\r\n\r\n**normalize is an ignored parameter**\r\n\r\ndocstring states _(class) Docstring shows MonthEnd(n: int = ..., **normalize**: bool = ...)_, however normalize doesn't appear to do anything:\r\n\r\n```python\r\nfor date in pd.date_range(start='2000-01-01', end='2001-01-01'):\r\n    for n in [-1, 0, 1, 2]:\r\n        a = date + pd.offsets.MonthEnd(n=n, normalize=True)\r\n        b = date + pd.offsets.MonthEnd(n=n, normalize=False)\r\n        assert a == b\r\n```\r\n\r\n**unintuitive logic** \r\n\r\n```python\r\nfor n in range(-2, 3):\r\n    print(f\"\\n{n=}\")\r\n    print(f\"2000-05-01 -> {(pd.Timestamp('2000-05-01') + pd.offsets.MonthEnd(n=n)).strftime('%Y-%m-%d')}\")\r\n    print(f\"2000-05-15 -> {(pd.Timestamp('2000-05-15') + pd.offsets.MonthEnd(n=n)).strftime('%Y-%m-%d')}\")\r\n    print(f\"2000-05-31 -> {(pd.Timestamp('2000-05-31') + pd.offsets.MonthEnd(n=n)).strftime('%Y-%m-%d')}\")\r\n```\r\n\r\n```diff\r\n# n=-2\r\n+ 2000-05-01 -> 2000-03-31\r\n+ 2000-05-15 -> 2000-03-31\r\n+ 2000-05-31 -> 2000-03-31\r\n\r\n# n=-1\r\n+ 2000-05-01 -> 2000-04-30\r\n+ 2000-05-15 -> 2000-04-30\r\n+ 2000-05-31 -> 2000-04-30\r\n\r\n# n=0\r\n+ 2000-05-01 -> 2000-05-31\r\n+ 2000-05-15 -> 2000-05-31\r\n+ 2000-05-31 -> 2000-05-31\r\n\r\n# n=1\r\n! 2000-05-01 -> 2000-05-31\r\n! 2000-05-15 -> 2000-05-31\r\n+ 2000-05-31 -> 2000-06-30\r\n\r\n# n=2\r\n! 2000-05-01 -> 2000-06-30\r\n! 2000-05-15 -> 2000-06-30\r\n+ 2000-05-31 -> 2000-07-31\r\n```\r\n\r\nI appreciate the breaking changes impact, but this really does feel like a bug to me as I would expect MonthEnd() should behave like excels =EOMONTH function.\r\n\r\nRegardless, I will at least document as clearly as possible with examples, but it's going to be hard to explain away given results are not even consistent, i.e. n = -1 Vs n = +1 (as shown above)."
    },
    {
      "id": 1295918726,
      "user": "jtimko16",
      "body": "> hey @honza26 - if you want to come to the next new contributors meeting, you could share you screen and we could resolve your technical issues with you?\r\n\r\nThanks for your offer. I will try to build the environment again, and potentially join the next contributors meeting. "
    },
    {
      "id": 1296189006,
      "user": "jtimko16",
      "body": "@justin4480  Thanks for taking this further. A good initiative!\r\n\r\nA good explanation of general offset logic is here: (in case it helps)\r\nhttps://pandas.pydata.org/docs/user_guide/timeseries.html\r\n\r\n<img width=\"496\" alt=\"image\" src=\"https://user-images.githubusercontent.com/61096773/198872006-0ebdbea2-64fa-4859-b1ea-08f3fdf18d66.png\">\r\n"
    },
    {
      "id": 1296221051,
      "user": "MarcoGorelli",
      "body": "That's a good reference, it's just not very easy to discover from the docstrings.\r\n\r\nI'd be all for just adding a simple example to the docstrings of each of those offsets (`MonthEnd`, `MonthBegin`, `WeekEnd`)"
    },
    {
      "id": 1296299468,
      "user": "justin4480",
      "body": "> @justin4480 Thanks for taking this further. A good initiative!\r\n> \r\n> A good explanation of general offset logic is here: (in case it helps) https://pandas.pydata.org/docs/user_guide/timeseries.html\r\n> \r\n> <img alt=\"image\" width=\"496\" src=\"https://user-images.githubusercontent.com/61096773/198872006-0ebdbea2-64fa-4859-b1ea-08f3fdf18d66.png\">\r\n\r\n@honza26 Thanks for sending this over.  This was very helpful in understanding the logic & design intent!\r\n\r\nHowever, one doubt for me remains regarding the **normalize** parameter.  The docs claim:\r\n![image](https://user-images.githubusercontent.com/6503098/198890392-295862ea-9f7c-408c-b2a4-27dd286b3a0b.png)\r\nsource: https://pandas.pydata.org/docs/user_guide/timeseries.html#parametric-offsets\r\n\r\nHowever the below runs perfectly fine.\r\n\r\n```python\r\nfor dt in pd.date_range(start='2000-01-01', end='2001-01-01'):\r\n    for n in range(-2, 3):\r\n        a = dt + pd.offsets.MonthEnd(n=n, normalize=True)\r\n        b = dt + pd.offsets.MonthEnd(n=n, normalize=False)\r\n        assert a == b\r\n        c = dt - pd.offsets.MonthEnd(n=n, normalize=True)\r\n        d = dt - pd.offsets.MonthEnd(n=n, normalize=False)\r\n        assert c == d\r\n```\r\n"
    },
    {
      "id": 1296347651,
      "user": "jtimko16",
      "body": "@justin4480 \r\nIf normalize is True, then datetime is normalized to midnight. If you dont have any 'time' part of in your date/datetime variables, it makes no difference.\r\n\r\nMy examples to show functionality:\r\n\r\n`dt_now = datetime.datetime.now()\r\nprint(f'Datetime now: {dt_now}\\n')\r\n\r\na = dt_now + pd.offsets.MonthEnd(n=1, normalize=True)\r\nb = dt_now + pd.offsets.MonthEnd(n=1, normalize=False)\r\n\r\nprint(f'Offset to MonthEnd; normalize = True: {a}')\r\nprint(f'Offset to MonthEnd; normalize = False: {b}')\r\n`\r\n\r\nAnd output is:\r\n\r\n`Datetime now: 2022-10-30 20:42:39.526462\r\n\r\nOffset to MonthEnd; normalize = True: 2022-10-31 00:00:00\r\nOffset to MonthEnd; normalize = False: 2022-10-31 20:42:39.526462`\r\n"
    },
    {
      "id": 1304952750,
      "user": "justin4480",
      "body": "Sorry I was determined to do this, but have spent far too long trying to get my environment setup.  I tried both the recommended docker & mamba dev environment setup, but just couldn't get the pytest suite to run without tones of errors (before making any code edits).  I will revisit when I have more time as I do want to contribute, but have unassigned this particular issue for now."
    },
    {
      "id": 1312454594,
      "user": "zemnly",
      "body": "Hi, I'd like to take a shot at this. Gonna be my first contribution here. I've been using Pandas on and off for my job since the past 3 years (:"
    },
    {
      "id": 1312454711,
      "user": "zemnly",
      "body": "take"
    }
  ],
  "text_context": "# BUG: pd.offsets.MonthEnd() delevers wrong month\n\n### Pandas version checks\n\n- [X] I have checked that this issue has not already been reported.\n\n- [X] I have confirmed this bug exists on the [latest version](https://pandas.pydata.org/docs/whatsnew/index.html) of pandas.\n\n- [X] I have confirmed this bug exists on the main branch of pandas.\n\n\n### Reproducible Example\n\n```python\nimport pandas as pd\r\nts = pd.Timestamp(2017, 1, 31)\r\nts + pd.offsets.MonthEnd()\n```\n\n\n### Issue Description\n\nI expect that the answer is: Timestamp('2017-01-31 00:00:00')\r\nbut I get: Timestamp('2017-02-28 00:00:00')\n\n### Expected Behavior\n\nTimestamp('2017-01-31 00:00:00')\n\n### Installed Versions\n\n<details>\r\n\r\n\r\nINSTALLED VERSIONS\r\n------------------\r\ncommit           : 4bfe3d07b4858144c219b9346329027024102ab6\r\npython           : 3.9.12.final.0\r\npython-bits      : 64\r\nOS               : Windows\r\nOS-release       : 10\r\nVersion          : 10.0.19044\r\nmachine          : AMD64\r\nprocessor        : Intel64 Family 6 Model 140 Stepping 1, GenuineIntel\r\nbyteorder        : little\r\nLC_ALL           : None\r\nLANG             : None\r\nLOCALE           : Dutch_Netherlands.1252\r\n\r\npandas           : 1.4.2\r\nnumpy            : 1.21.5\r\npytz             : 2021.3\r\ndateutil         : 2.8.2\r\npip              : 21.2.4\r\nsetuptools       : 61.2.0\r\nCython           : 0.29.28\r\npytest           : 7.1.1\r\nhypothesis       : None\r\nsphinx           : 4.4.0\r\nblosc            : None\r\nfeather          : None\r\nxlsxwriter       : 3.0.3\r\nlxml.etree       : 4.8.0\r\nhtml5lib         : None\r\npymysql          : None\r\npsycopg2         : None\r\njinja2           : 2.11.3\r\nIPython          : 8.2.0\r\npandas_datareader: None\r\nbs4              : 4.11.1\r\nbottleneck       : 1.3.4\r\nbrotli           : \r\nfastparquet      : None\r\nfsspec           : 2022.02.0\r\ngcsfs            : None\r\nmarkupsafe       : 2.0.1\r\nmatplotlib       : 3.5.1\r\nnumba            : 0.55.1\r\nnumexpr          : 2.8.1\r\nodfpy            : None\r\nopenpyxl         : 3.0.9\r\npandas_gbq       : None\r\npyarrow          : None\r\npyreadstat       : None\r\npyxlsb           : None\r\ns3fs             : None\r\nscipy            : 1.7.3\r\nsnappy           : \r\nsqlalchemy       : 1.4.32\r\ntables           : 3.6.1\r\ntabulate         : 0.8.9\r\nxarray           : 0.20.1\r\nxlrd             : 2.0.1\r\nxlwt             : None\r\nzstandard        : None\r\n\r\n</details>\r\n\n\nThanks for the report\r\n\r\n`MonthEnd` goes to the next date which is an end of the month, so this seems correct\r\n\r\nYou probably want `MonthEnd(0)` to get the end of the current month\r\n\r\nMight be good to add this as an example to the docs as it seems to be a common source of confusion https://stackoverflow.com/questions/37354105/find-the-end-of-the-month-of-a-pandas-dataframe-series\n\nHi! :) I'd love to help with the documentation if this issue is still relevant. If so, could you please assign it to me?\r\nThanks, have a good day.\n\nthanks, go ahead! if you comment \"take\" the issue will be assigned to you, do reach out if you have questions\n\ntake\n\ntake\n\nHello, I am looking for my very first contribution. Is there still something I can help will (I would probably need a little bit of guidance). Thanks\n\nyup, pull requests welcome https://pandas.pydata.org/pandas-docs/stable/development/contributing.html\n\ntake\n\nThanks,\n\nI found a equivalent solution: ts.replace(day=1) + pd.offsets.MonthEnd(0)\nFor me it is not logical to go to the next month when no parameters are\ngiven.\nFor me it is logical that the default parameter should be '0' when no\nparameters are given by the user.\n\nBut thanks for the quick response\n\n\nOp ma 26 sep. 2022 om 10:51 schreef Marco Edward Gorelli <\n***@***.***>:\n\n> Thanks for the report\n>\n> MonthEnd goes to the next date which is an end of the month, so this\n> seems correct\n>\n> You probably want MonthEnd(0) to get the end of the current month\n>\n> Might be good to add this as an example to the docs as it seems to be a\n> common source of confusion\n> https://stackoverflow.com/questions/37354105/find-the-end-of-the-month-of-a-pandas-dataframe-series\n>\n> —\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/48779#issuecomment-1257707096>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/A3IXQLDZWOMAEFHTFZOVUQDWAFPZDANCNFSM6AAAAAAQVRXV34>\n> .\n> You are receiving this because you authored the thread.Message ID:\n> ***@***.***>\n>\n\n\n> Thanks, I found a equivalent solution: ts.replace(day=1) + pd.offsets.MonthEnd(0) For me it is not logical to go to the next month when no parameters are given. For me it is logical that the default parameter should be '0' when no parameters are given by the user. But thanks for the quick response Op ma 26 sep. 2022 om 10:51 schreef Marco Edward Gorelli < ***@***.***>:\r\n> […](#)\r\n> Thanks for the report MonthEnd goes to the next date which is an end of the month, so this seems correct You probably want MonthEnd(0) to get the end of the current month Might be good to add this as an example to the docs as it seems to be a common source of confusion https://stackoverflow.com/questions/37354105/find-the-end-of-the-month-of-a-pandas-dataframe-series — Reply to this email directly, view it on GitHub <[#48779 (comment)](https://github.com/pandas-dev/pandas/issues/48779#issuecomment-1257707096)>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/A3IXQLDZWOMAEFHTFZOVUQDWAFPZDANCNFSM6AAAAAAQVRXV34> . You are receiving this because you authored the thread.Message ID: ***@***.***>\r\n\r\nHello, pjousma\r\n\r\nThanks for your comment. I've been thinking about it, and also agree, that the default n parameter should be zero. And also the same for pandas.tseries.offsets.YearEnd() function (it has the same issue).\r\n\r\nWho can decide whether we should change parameter to zero or keep it as is?\r\n\r\nThanks,\r\nJ.\n\nthis'd be a breaking change and would have to go through a deprecation cycle, not sure it'd be worth it. Would be more in favour of just clearly documenting the behaviour\n\n> this'd be a breaking change and would have to go through a deprecation cycle, not sure it'd be worth it. Would be more in favour of just clearly documenting the behaviour\r\n\r\nOk, ok. I am going to update the documentation in the next few days. I'll let you know in case of any questions/issues. Thanks.\n\nHi @MarcoGorelli , please may I ask you for a clarification.\r\n\r\nDo I understand correctly, I should is update this page of documentation?: https://pandas.pydata.org/docs/reference/api/pandas.tseries.offsets.MonthEnd.html\r\n\r\nTherefore I'll be modifying this part of code \r\nhttps://github.com/pandas-dev/pandas/blob/main/pandas/_libs/tslibs/offsets.pyx (class MonthEnd; starting from row 2746 - I am going to write more examples into the comment block below). Is it correct? Thanks\r\n\r\n![image](https://user-images.githubusercontent.com/61096773/195978661-ab2eb615-b7d6-49e8-b1f5-c702ddf68944.png)\r\n\n\nyeah looks fine\n\nI created a Pull Request https://github.com/pandas-dev/pandas/pull/49133\r\n\r\nHowever as it is my very Pull Request, therefore for now, I marked it as a draft. Please can you look at it and give me some feedback? Thanks\n\n\"When parameter n=0, always offset to the end of month.\n\nWhen parameter n=1, depend on the given date:\na) Given date is on an anchor point (last day of the month) -> offset to\nthe end of the following month.\n\nb) Given date is not on an anchor point -> offset to the end of the same\nmonth.\"\n\nFor me the functionality of the parameter is not logical.\nMy intepretation is that n the offset of the data used by this function.\nn=0: end of month (of used date)\nn=1: end of next month\nn=2: end of 2e next month\nn=-1: end of previous month\n\nAn intepration as mentioned \"n=1 a if ... else  b\" is for me very unlogical.\n\nOp zo 16 okt. 2022 om 22:54 schreef Jan Timko ***@***.***>:\n\n> I created a Pull Request #49133\n> <https://github.com/pandas-dev/pandas/pull/49133>\n>\n> However as it is my very Pull Request, therefore for now, I marked it as a\n> draft. Please can you look at it and give me some feedback? Thanks\n>\n> —\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/48779#issuecomment-1280055330>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/A3IXQLBOJSCRDFHHADNJHNDWDRTOPANCNFSM6AAAAAAQVRXV34>\n> .\n> You are receiving this because you authored the thread.Message ID:\n> ***@***.***>\n>\n\n\n@pjousma Yes, I agree that the current behavior is little bit confusing, and what you suggested is definitely more logical.\r\n\r\nHowever, I believe that as quick immediate solution we can document current logic (if everything goes well we can close this PR in next several days) and in longer term we can open discussion about changing functionality of the 'n' parameter. Not sure about processes here in Panda, but it make take some time to approve an implement the change.\r\n\n\nYeah changing behaviour shouldn't be taken lightly - for a start, would there be a way to communicate the change to users in such a way as to not flood them with warnings every time they use `MonthEnd`?\r\n\r\nBut certainly it should be clearly documented with examples so thanks @honza26 for taking this on!\n\nHello, unfortunately I am facing technical issues with setting up environment and will not be able to finish (my laptop is quite old and slow, therefore cannot install a lot of tools that will slow it done further)\r\n\r\nPR in progress for anyone who want to take it from there:\r\nhttps://github.com/pandas-dev/pandas/pull/49133\r\n\r\nIf any question, feel free to reach out. And @MarcoGorelli thanks a lot for help and guidance with it (although I didn't manage to cross the finishing line).\r\n\r\nCheers,\r\nJan\n\nhey @honza26 - if you want to come to the next new contributors meeting, you could share you screen and we could resolve your technical issues with you?\n\ntake\n\nHi.  I'm a long time user of pandas, but this is my first contribution.  Can I update both the docstring and the docs?\r\n\r\nI plan to:\r\n1. make clear that normalize is an ignored parameter\r\n2. clarify the unintuitive logic when MonthEnd n > 0 and added to a Timestamp not at monthend\r\n\r\n**normalize is an ignored parameter**\r\n\r\ndocstring states _(class) Docstring shows MonthEnd(n: int = ..., **normalize**: bool = ...)_, however normalize doesn't appear to do anything:\r\n\r\n```python\r\nfor date in pd.date_range(start='2000-01-01', end='2001-01-01'):\r\n    for n in [-1, 0, 1, 2]:\r\n        a = date + pd.offsets.MonthEnd(n=n, normalize=True)\r\n        b = date + pd.offsets.MonthEnd(n=n, normalize=False)\r\n        assert a == b\r\n```\r\n\r\n**unintuitive logic** \r\n\r\n```python\r\nfor n in range(-2, 3):\r\n    print(f\"\\n{n=}\")\r\n    print(f\"2000-05-01 -> {(pd.Timestamp('2000-05-01') + pd.offsets.MonthEnd(n=n)).strftime('%Y-%m-%d')}\")\r\n    print(f\"2000-05-15 -> {(pd.Timestamp('2000-05-15') + pd.offsets.MonthEnd(n=n)).strftime('%Y-%m-%d')}\")\r\n    print(f\"2000-05-31 -> {(pd.Timestamp('2000-05-31') + pd.offsets.MonthEnd(n=n)).strftime('%Y-%m-%d')}\")\r\n```\r\n\r\n```diff\r\n# n=-2\r\n+ 2000-05-01 -> 2000-03-31\r\n+ 2000-05-15 -> 2000-03-31\r\n+ 2000-05-31 -> 2000-03-31\r\n\r\n# n=-1\r\n+ 2000-05-01 -> 2000-04-30\r\n+ 2000-05-15 -> 2000-04-30\r\n+ 2000-05-31 -> 2000-04-30\r\n\r\n# n=0\r\n+ 2000-05-01 -> 2000-05-31\r\n+ 2000-05-15 -> 2000-05-31\r\n+ 2000-05-31 -> 2000-05-31\r\n\r\n# n=1\r\n! 2000-05-01 -> 2000-05-31\r\n! 2000-05-15 -> 2000-05-31\r\n+ 2000-05-31 -> 2000-06-30\r\n\r\n# n=2\r\n! 2000-05-01 -> 2000-06-30\r\n! 2000-05-15 -> 2000-06-30\r\n+ 2000-05-31 -> 2000-07-31\r\n```\r\n\r\nI appreciate the breaking changes impact, but this really does feel like a bug to me as I would expect MonthEnd() should behave like excels =EOMONTH function.\r\n\r\nRegardless, I will at least document as clearly as possible with examples, but it's going to be hard to explain away given results are not even consistent, i.e. n = -1 Vs n = +1 (as shown above).\n\n> hey @honza26 - if you want to come to the next new contributors meeting, you could share you screen and we could resolve your technical issues with you?\r\n\r\nThanks for your offer. I will try to build the environment again, and potentially join the next contributors meeting. \n\n@justin4480  Thanks for taking this further. A good initiative!\r\n\r\nA good explanation of general offset logic is here: (in case it helps)\r\nhttps://pandas.pydata.org/docs/user_guide/timeseries.html\r\n\r\n<img width=\"496\" alt=\"image\" src=\"https://user-images.githubusercontent.com/61096773/198872006-0ebdbea2-64fa-4859-b1ea-08f3fdf18d66.png\">\r\n\n\nThat's a good reference, it's just not very easy to discover from the docstrings.\r\n\r\nI'd be all for just adding a simple example to the docstrings of each of those offsets (`MonthEnd`, `MonthBegin`, `WeekEnd`)\n\n> @justin4480 Thanks for taking this further. A good initiative!\r\n> \r\n> A good explanation of general offset logic is here: (in case it helps) https://pandas.pydata.org/docs/user_guide/timeseries.html\r\n> \r\n> <img alt=\"image\" width=\"496\" src=\"https://user-images.githubusercontent.com/61096773/198872006-0ebdbea2-64fa-4859-b1ea-08f3fdf18d66.png\">\r\n\r\n@honza26 Thanks for sending this over.  This was very helpful in understanding the logic & design intent!\r\n\r\nHowever, one doubt for me remains regarding the **normalize** parameter.  The docs claim:\r\n![image](https://user-images.githubusercontent.com/6503098/198890392-295862ea-9f7c-408c-b2a4-27dd286b3a0b.png)\r\nsource: https://pandas.pydata.org/docs/user_guide/timeseries.html#parametric-offsets\r\n\r\nHowever the below runs perfectly fine.\r\n\r\n```python\r\nfor dt in pd.date_range(start='2000-01-01', end='2001-01-01'):\r\n    for n in range(-2, 3):\r\n        a = dt + pd.offsets.MonthEnd(n=n, normalize=True)\r\n        b = dt + pd.offsets.MonthEnd(n=n, normalize=False)\r\n        assert a == b\r\n        c = dt - pd.offsets.MonthEnd(n=n, normalize=True)\r\n        d = dt - pd.offsets.MonthEnd(n=n, normalize=False)\r\n        assert c == d\r\n```\r\n\n\n@justin4480 \r\nIf normalize is True, then datetime is normalized to midnight. If you dont have any 'time' part of in your date/datetime variables, it makes no difference.\r\n\r\nMy examples to show functionality:\r\n\r\n`dt_now = datetime.datetime.now()\r\nprint(f'Datetime now: {dt_now}\\n')\r\n\r\na = dt_now + pd.offsets.MonthEnd(n=1, normalize=True)\r\nb = dt_now + pd.offsets.MonthEnd(n=1, normalize=False)\r\n\r\nprint(f'Offset to MonthEnd; normalize = True: {a}')\r\nprint(f'Offset to MonthEnd; normalize = False: {b}')\r\n`\r\n\r\nAnd output is:\r\n\r\n`Datetime now: 2022-10-30 20:42:39.526462\r\n\r\nOffset to MonthEnd; normalize = True: 2022-10-31 00:00:00\r\nOffset to MonthEnd; normalize = False: 2022-10-31 20:42:39.526462`\r\n\n\nSorry I was determined to do this, but have spent far too long trying to get my environment setup.  I tried both the recommended docker & mamba dev environment setup, but just couldn't get the pytest suite to run without tones of errors (before making any code edits).  I will revisit when I have more time as I do want to contribute, but have unassigned this particular issue for now.\n\nHi, I'd like to take a shot at this. Gonna be my first contribution here. I've been using Pandas on and off for my job since the past 3 years (:\n\ntake",
  "pr_link": "https://github.com/pandas-dev/pandas/pull/49133",
  "code_context": [],
  "questions": [
    "I created a Pull Request https://github.com/pandas-dev/pandas/pull/49133\r\n\r\nHowever as it is my very Pull Request, therefore for now, I marked it as a draft. Please can you look at it and give me some feedback? Thanks",
    "\"When parameter n=0, always offset to the end of month.\n\nWhen parameter n=1, depend on the given date:\na) Given date is on an anchor point (last day of the month) -> offset to\nthe end of the following month.\n\nb) Given date is not on an anchor point -> offset to the end of the same\nmonth.\"\n\nFor me the functionality of the parameter is not logical.\nMy intepretation is that n the offset of the data used by this function.\nn=0: end of month (of used date)\nn=1: end of next month\nn=2: end of 2e next month\nn=-1: end of previous month\n\nAn intepration as mentioned \"n=1 a if ... else  b\" is for me very unlogical.\n\nOp zo 16 okt. 2022 om 22:54 schreef Jan Timko ***@***.***>:\n\n> I created a Pull Request #49133\n> <https://github.com/pandas-dev/pandas/pull/49133>\n>\n> However as it is my very Pull Request, therefore for now, I marked it as a\n> draft. Please can you look at it and give me some feedback? Thanks\n>\n> —\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/48779#issuecomment-1280055330>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/A3IXQLBOJSCRDFHHADNJHNDWDRTOPANCNFSM6AAAAAAQVRXV34>\n> .\n> You are receiving this because you authored the thread.Message ID:\n> ***@***.***>\n>",
    "Hi.  I'm a long time user of pandas, but this is my first contribution.  Can I update both the docstring and the docs?\r\n\r\nI plan to:\r\n1. make clear that normalize is an ignored parameter\r\n2. clarify the unintuitive logic when MonthEnd n > 0 and added to a Timestamp not at monthend\r\n\r\n**normalize is an ignored parameter**\r\n\r\ndocstring states _(class) Docstring shows MonthEnd(n: int = ..., **normalize**: bool = ...)_, however normalize doesn't appear to do anything:\r\n\r\n```python\r\nfor date in pd.date_range(start='2000-01-01', end='2001-01-01'):\r\n    for n in [-1, 0, 1, 2]:\r\n        a = date + pd.offsets.MonthEnd(n=n, normalize=True)\r\n        b = date + pd.offsets.MonthEnd(n=n, normalize=False)\r\n        assert a == b\r\n```\r\n\r\n**unintuitive logic** \r\n\r\n```python\r\nfor n in range(-2, 3):\r\n    print(f\"\\n{n=}\")\r\n    print(f\"2000-05-01 -> {(pd.Timestamp('2000-05-01') + pd.offsets.MonthEnd(n=n)).strftime('%Y-%m-%d')}\")\r\n    print(f\"2000-05-15 -> {(pd.Timestamp('2000-05-15') + pd.offsets.MonthEnd(n=n)).strftime('%Y-%m-%d')}\")\r\n    print(f\"2000-05-31 -> {(pd.Timestamp('2000-05-31') + pd.offsets.MonthEnd(n=n)).strftime('%Y-%m-%d')}\")\r\n```\r\n\r\n```diff\r\n# n=-2\r\n+ 2000-05-01 -> 2000-03-31\r\n+ 2000-05-15 -> 2000-03-31\r\n+ 2000-05-31 -> 2000-03-31\r\n\r\n# n=-1\r\n+ 2000-05-01 -> 2000-04-30\r\n+ 2000-05-15 -> 2000-04-30\r\n+ 2000-05-31 -> 2000-04-30\r\n\r\n# n=0\r\n+ 2000-05-01 -> 2000-05-31\r\n+ 2000-05-15 -> 2000-05-31\r\n+ 2000-05-31 -> 2000-05-31\r\n\r\n# n=1\r\n! 2000-05-01 -> 2000-05-31\r\n! 2000-05-15 -> 2000-05-31\r\n+ 2000-05-31 -> 2000-06-30\r\n\r\n# n=2\r\n! 2000-05-01 -> 2000-06-30\r\n! 2000-05-15 -> 2000-06-30\r\n+ 2000-05-31 -> 2000-07-31\r\n```\r\n\r\nI appreciate the breaking changes impact, but this really does feel like a bug to me as I would expect MonthEnd() should behave like excels =EOMONTH function.\r\n\r\nRegardless, I will at least document as clearly as possible with examples, but it's going to be hard to explain away given results are not even consistent, i.e. n = -1 Vs n = +1 (as shown above)."
  ],
  "golden_answers": [
    "\"When parameter n=0, always offset to the end of month.\n\nWhen parameter n=1, depend on the given date:\na) Given date is on an anchor point (last day of the month) -> offset to\nthe end of the following month.\n\nb) Given date is not on an anchor point -> offset to the end of the same\nmonth.\"\n\nFor me the functionality of the parameter is not logical.\nMy intepretation is that n the offset of the data used by this function.\nn=0: end of month (of used date)\nn=1: end of next month\nn=2: end of 2e next month\nn=-1: end of previous month\n\nAn intepration as mentioned \"n=1 a if ... else  b\" is for me very unlogical.\n\nOp zo 16 okt. 2022 om 22:54 schreef Jan Timko ***@***.***>:\n\n> I created a Pull Request #49133\n> <https://github.com/pandas-dev/pandas/pull/49133>\n>\n> However as it is my very Pull Request, therefore for now, I marked it as a\n> draft. Please can you look at it and give me some feedback? Thanks\n>\n> —\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/48779#issuecomment-1280055330>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/A3IXQLBOJSCRDFHHADNJHNDWDRTOPANCNFSM6AAAAAAQVRXV34>\n> .\n> You are receiving this because you authored the thread.Message ID:\n> ***@***.***>\n>",
    "@pjousma Yes, I agree that the current behavior is little bit confusing, and what you suggested is definitely more logical.\r\n\r\nHowever, I believe that as quick immediate solution we can document current logic (if everything goes well we can close this PR in next several days) and in longer term we can open discussion about changing functionality of the 'n' parameter. Not sure about processes here in Panda, but it make take some time to approve an implement the change.",
    "@justin4480  Thanks for taking this further. A good initiative!\r\n\r\nA good explanation of general offset logic is here: (in case it helps)\r\nhttps://pandas.pydata.org/docs/user_guide/timeseries.html\r\n\r\n<img width=\"496\" alt=\"image\" src=\"https://user-images.githubusercontent.com/61096773/198872006-0ebdbea2-64fa-4859-b1ea-08f3fdf18d66.png\">"
  ],
  "questions_generated": [
    "What is the expected behavior when using the pd.offsets.MonthEnd() with a timestamp at the end of the month?",
    "Why does pd.offsets.MonthEnd() return Timestamp('2017-02-28 00:00:00') instead of '2017-01-31 00:00:00' when added to a timestamp of '2017-01-31'?",
    "How can we modify the usage of pd.offsets.MonthEnd() to stay within the current month if the timestamp is already at the month's end?",
    "What change was suggested in the issue discussion to avoid common confusion regarding pd.offsets.MonthEnd()?",
    "How does the behavior of pd.offsets.MonthEnd() relate to the typical use cases of date offsets in pandas?",
    "What was the user's expectation when using pd.offsets.MonthEnd() based on the issue description?",
    "What version of pandas was the user using when they encountered the bug?",
    "In the context of this issue, what does the commit hash '4bfe3d07b4858144c219b9346329027024102ab6' represent?",
    "How does the user's installed Python version and operating system potentially impact the behavior of the pandas library?"
  ],
  "golden_answers_generated": [
    "The expected behavior of pd.offsets.MonthEnd() is to move the timestamp to the next date that is the end of a month. Therefore, if you add it to a timestamp that is already at the end of the month, it moves to the next month's end date.",
    "pd.offsets.MonthEnd() is designed to move to the next month's end if the timestamp is already at a month-end. Hence, adding it to '2017-01-31' results in '2017-02-28', which is the end of the next month.",
    "To ensure the offset stays within the current month when the timestamp is already at the month's end, you should use pd.offsets.MonthEnd(0). This will keep the timestamp at the current month's end.",
    "It was suggested to add an example to the documentation clarifying the behavior of pd.offsets.MonthEnd() and how to use pd.offsets.MonthEnd(0) to stay at the current month's end, as this is a common source of confusion.",
    "Date offsets in pandas, like pd.offsets.MonthEnd(), are typically used to manipulate dates by moving them to specific points in time, such as month ends. They are designed to facilitate date arithmetic by providing a flexible way to handle relative date shifts.",
    "The user expected that adding pd.offsets.MonthEnd() to the timestamp '2017-01-31' would result in the same date, '2017-01-31', rather than moving to the next month's end date, '2017-02-28'.",
    "The user was using pandas version 1.4.2 when they encountered the bug.",
    "The commit hash '4bfe3d07b4858144c219b9346329027024102ab6' uniquely identifies the specific state of the codebase that the user was working with when they encountered the issue.",
    "The user's installed Python version (3.9.12) and operating system (Windows 10) can impact the behavior of pandas if there are specific dependencies or issues with compatibility. However, in this case, the issue is related to the logic within pandas' offset handling, which is not affected by the OS or Python version."
  ]
}