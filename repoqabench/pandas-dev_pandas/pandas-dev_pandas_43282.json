{
  "repo_name": "pandas-dev_pandas",
  "issue_id": "43282",
  "issue_description": "# STYLE use yaml anchors in .pre-commit-config.yaml for flake8\n\nInstead of duplicating these lines\r\n\r\nhttps://github.com/pandas-dev/pandas/blob/e39ea3024cebb4e7a7fd35972a44637de6c41650/.pre-commit-config.yaml#L42-L45\r\n\r\nhttps://github.com/pandas-dev/pandas/blob/e39ea3024cebb4e7a7fd35972a44637de6c41650/.pre-commit-config.yaml#L79-L83\r\n\r\nwe would use a [yaml anchor](https://ktomk.github.io/writing/yaml-anchor-alias-and-merge-key.html)\r\n\r\nSee here for an example of how that works https://github.com/psf/black/pull/2459/files\r\n\r\n---\r\n\r\nThis would also mean being able to get rid of a big part of https://github.com/pandas-dev/pandas/blob/e39ea3024cebb4e7a7fd35972a44637de6c41650/scripts/sync_flake8_versions.py",
  "issue_comments": [
    {
      "id": 907773914,
      "user": "lorenzophys",
      "body": "@MarcoGorelli a question from a non yaml expert: how would you merge those two lists? I don't believe this will work because `additional_dependencies` will become nested.\r\n```yaml\r\nadditional_dependencies:  &version_check_dependencies [\r\n    flake8-comprehensions==3.1.0,\r\n    flake8-bugbear==21.3.2,\r\n    pandas-dev-flaker==0.2.0,\r\n]\r\n...\r\nadditional_dependencies: \r\n    - flake8==3.9.2\r\n    - *version_check_dependencies\r\n```\r\nI cannot think of a way to get the second  `additional_dependencies` to be a list."
    },
    {
      "id": 907996007,
      "user": "Kunsh-Manghwani",
      "body": "I have resolved the issue and generated a PR . "
    },
    {
      "id": 929127151,
      "user": "Anupam-USP",
      "body": "Is this issue still open?\r\n"
    },
    {
      "id": 929135988,
      "user": "MarcoGorelli",
      "body": "yup!"
    },
    {
      "id": 929144286,
      "user": "Anupam-USP",
      "body": "Can i take? @Kunsh-Manghwani has generated a PR "
    },
    {
      "id": 929163978,
      "user": "MarcoGorelli",
      "body": "Yes, you can take it, their PR hasn't been active for a while"
    },
    {
      "id": 938540080,
      "user": "MarcoGorelli",
      "body": "Here's another example: https://github.com/asottile/yesqa/issues/49#issuecomment-938359682"
    },
    {
      "id": 940658859,
      "user": "navjotbans",
      "body": "I see this issue is pending since long \r\nI am working on this in parallel if nobody raises a PR for 2-3 more days I would do that ðŸ˜„ "
    },
    {
      "id": 940676932,
      "user": "MarcoGorelli",
      "body": "Awesome, feel free to open a PR when you want"
    },
    {
      "id": 942114357,
      "user": "navjotbans",
      "body": "@MarcoGorelli Sure"
    },
    {
      "id": 942498247,
      "user": "trallard",
      "body": "Hey folks I had a quick look at this and found actually that this does not seem immediately fixable. From the `.precommit-config.yaml`\r\n\r\n```\r\n additional_dependencies: \r\n     - flake8-comprehensions==3.1.0 \r\n     - flake8-bugbear==21.3.2 \r\n     - pandas-dev-flaker==0.2.0 \r\n  ```\r\n  \r\n  ```\r\n   additional_dependencies: \r\n     - flake8==3.9.2 \r\n     - flake8-comprehensions==3.1.0 \r\n     - flake8-bugbear==21.3.2 \r\n     - pandas-dev-flaker==0.2.0 \r\n  ```\r\n  \r\n  This entails the creation of an anchor and then merging two lists, however, this is not yet possible. for reference \r\n  \r\n  You can see \r\n  https://github.com/yaml/pyyaml/issues/469\r\n  https://github.com/yaml/yaml/issues/35\r\n  https://github.com/yaml/yaml/issues/48\r\n  \r\n  The examples listed elsewhere in this issue can use an anchor since they reuse the same dependencies without the need of merging/extending lists\r\n  "
    },
    {
      "id": 942673348,
      "user": "MarcoGorelli",
      "body": "I see, thanks for looking into this! \n\nI'll have another look next week, but this might need closing by the looks of it"
    },
    {
      "id": 943373157,
      "user": "Skylion007",
      "body": "You can just use:\r\n```\r\n additional_dependencies: \r\n   - flake8==3.9.2 \r\n   - flake8-comprehensions==3.1.0 \r\n   - flake8-bugbear==21.3.2 \r\n   - pandas-dev-flaker==0.2.0 \r\n ```\r\nfor both additional_dependencies. It's not like the flake8 additional requirement will conflict with the flake8 hook. (Just make sure to keep it updated)."
    },
    {
      "id": 943483466,
      "user": "trallard",
      "body": "I suppose that is the easiest way around - if y'all are happy with that I can send a quick PR"
    },
    {
      "id": 943511012,
      "user": "MarcoGorelli",
      "body": "Seems good "
    }
  ],
  "text_context": "# STYLE use yaml anchors in .pre-commit-config.yaml for flake8\n\nInstead of duplicating these lines\r\n\r\nhttps://github.com/pandas-dev/pandas/blob/e39ea3024cebb4e7a7fd35972a44637de6c41650/.pre-commit-config.yaml#L42-L45\r\n\r\nhttps://github.com/pandas-dev/pandas/blob/e39ea3024cebb4e7a7fd35972a44637de6c41650/.pre-commit-config.yaml#L79-L83\r\n\r\nwe would use a [yaml anchor](https://ktomk.github.io/writing/yaml-anchor-alias-and-merge-key.html)\r\n\r\nSee here for an example of how that works https://github.com/psf/black/pull/2459/files\r\n\r\n---\r\n\r\nThis would also mean being able to get rid of a big part of https://github.com/pandas-dev/pandas/blob/e39ea3024cebb4e7a7fd35972a44637de6c41650/scripts/sync_flake8_versions.py\n\n@MarcoGorelli a question from a non yaml expert: how would you merge those two lists? I don't believe this will work because `additional_dependencies` will become nested.\r\n```yaml\r\nadditional_dependencies:  &version_check_dependencies [\r\n    flake8-comprehensions==3.1.0,\r\n    flake8-bugbear==21.3.2,\r\n    pandas-dev-flaker==0.2.0,\r\n]\r\n...\r\nadditional_dependencies: \r\n    - flake8==3.9.2\r\n    - *version_check_dependencies\r\n```\r\nI cannot think of a way to get the second  `additional_dependencies` to be a list.\n\nI have resolved the issue and generated a PR . \n\nIs this issue still open?\r\n\n\nyup!\n\nCan i take? @Kunsh-Manghwani has generated a PR \n\nYes, you can take it, their PR hasn't been active for a while\n\nHere's another example: https://github.com/asottile/yesqa/issues/49#issuecomment-938359682\n\nI see this issue is pending since long \r\nI am working on this in parallel if nobody raises a PR for 2-3 more days I would do that ðŸ˜„ \n\nAwesome, feel free to open a PR when you want\n\n@MarcoGorelli Sure\n\nHey folks I had a quick look at this and found actually that this does not seem immediately fixable. From the `.precommit-config.yaml`\r\n\r\n```\r\n additional_dependencies: \r\n     - flake8-comprehensions==3.1.0 \r\n     - flake8-bugbear==21.3.2 \r\n     - pandas-dev-flaker==0.2.0 \r\n  ```\r\n  \r\n  ```\r\n   additional_dependencies: \r\n     - flake8==3.9.2 \r\n     - flake8-comprehensions==3.1.0 \r\n     - flake8-bugbear==21.3.2 \r\n     - pandas-dev-flaker==0.2.0 \r\n  ```\r\n  \r\n  This entails the creation of an anchor and then merging two lists, however, this is not yet possible. for reference \r\n  \r\n  You can see \r\n  https://github.com/yaml/pyyaml/issues/469\r\n  https://github.com/yaml/yaml/issues/35\r\n  https://github.com/yaml/yaml/issues/48\r\n  \r\n  The examples listed elsewhere in this issue can use an anchor since they reuse the same dependencies without the need of merging/extending lists\r\n  \n\nI see, thanks for looking into this! \n\nI'll have another look next week, but this might need closing by the looks of it\n\nYou can just use:\r\n```\r\n additional_dependencies: \r\n   - flake8==3.9.2 \r\n   - flake8-comprehensions==3.1.0 \r\n   - flake8-bugbear==21.3.2 \r\n   - pandas-dev-flaker==0.2.0 \r\n ```\r\nfor both additional_dependencies. It's not like the flake8 additional requirement will conflict with the flake8 hook. (Just make sure to keep it updated).\n\nI suppose that is the easiest way around - if y'all are happy with that I can send a quick PR\n\nSeems good ",
  "pr_link": "https://github.com/psf/black/pull/2459",
  "code_context": [
    {
      "filename": "scripts/check_version_in_basics_example.py",
      "content": "\"\"\"\nCheck that the rev value in the example from ``the_basics.md`` matches\nthe latest version of Black. This saves us from forgetting to update that\nduring the release process.\n\"\"\"\n\nimport os\nimport sys\n\nimport commonmark\nfrom bs4 import BeautifulSoup\n\n\ndef main(changes: str, the_basics: str) -> None:\n    changes_html = commonmark.commonmark(changes)\n    changes_soup = BeautifulSoup(changes_html, \"html.parser\")\n    headers = changes_soup.find_all(\"h2\")\n    tags = [header.string for header in headers if header.string != \"Unreleased\"]\n    latest_tag = tags[0]\n\n    the_basics_html = commonmark.commonmark(the_basics)\n    the_basics_soup = BeautifulSoup(the_basics_html, \"html.parser\")\n    (version_example,) = [\n        code_block.string\n        for code_block in the_basics_soup.find_all(class_=\"language-console\")\n        if \"$ black --version\" in code_block.string\n    ]\n\n    for tag in tags:\n        if tag in version_example and tag != latest_tag:\n            print(\n                \"Please set the version in the ``black --version`` \"\n                \"example from ``the_basics.md`` to be the latest one.\\n\"\n                f\"Expected {latest_tag}, got {tag}.\\n\"\n            )\n            sys.exit(1)\n\n\nif __name__ == \"__main__\":\n    with open(\"CHANGES.md\", encoding=\"utf-8\") as fd:\n        changes = fd.read()\n    with open(\n        os.path.join(\"docs\", \"usage_and_configuration\", \"the_basics.md\"),\n        encoding=\"utf-8\",\n    ) as fd:\n        the_basics = fd.read()\n    main(changes, the_basics)\n"
    }
  ]
}