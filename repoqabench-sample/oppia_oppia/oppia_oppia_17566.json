{
  "repo_name": "oppia_oppia",
  "issue_id": "17566",
  "issue_description": "# [BUG]: Unable to publish a lesson\n\n### Describe the bug\n\nWhen I clicked on the 'publish' button after creating a lesson, it keeps reading 'publishing' with 3 dots, but gets unpublished. \n\n### Steps To Reproduce\n\nGet access to this lesson\r\nClick on 'publish' button\r\n\n\n### Expected Behavior\n\nLesson gets published\n\n### Screenshots/Videos\n\nhttps://www.loom.com/share/ebb64b2a1b6f4255b9c5a5b587a75918\n\n### What device are you using?\n\nDesktop\n\n### Operating System\n\nWindows\n\n### What browsers are you seeing the problem on?\n\nEdge\n\n### Browser version\n\n 110.0.1587.57\n\n### Additional context\n\n_No response_",
  "issue_comments": [
    {
      "id": 1455006275,
      "user": "Kebith",
      "body": "Resolved."
    },
    {
      "id": 1513691050,
      "user": "prafulbbandre",
      "body": "@seanlip Reopening as i spotted this error on testserver and localserver"
    },
    {
      "id": 1513697586,
      "user": "prafulbbandre",
      "body": "@seanlip This is also seen on oppia.org"
    },
    {
      "id": 1513701161,
      "user": "prafulbbandre",
      "body": "Error seen when publish button is clicked.\r\n\r\n\r\n![Screenshot from 2023-04-19 01-09-37](https://user-images.githubusercontent.com/109658545/232887326-0c28a07c-14b5-4617-9eda-d6fb96f4d776.png)\r\n"
    },
    {
      "id": 1516594348,
      "user": "seanlip",
      "body": "Thanks, this seems serious. We should get more data about what the 400 error is -- are you able to do that @prafulbbandre?\r\n\r\nAlso @Kebith do you recall how this issue was resolved previously? "
    },
    {
      "id": 1516600758,
      "user": "prafulbbandre",
      "body": "@seanlip I will try.\r\n\r\n> Thanks, this seems serious. We should get more data about what the 400 error is -- are you able to do that @prafulbbandre?\r\n> \r\n> Also @Kebith do you recall how this issue was resolved previously?\r\n\r\n"
    },
    {
      "id": 1516822758,
      "user": "prafulbbandre",
      "body": "@seanlip The HyperText Transfer Protocol (HTTP) 400 Bad Request response status code indicates that the **server cannot or will not process the request due to something that is perceived to be a client error (for example, malformed request syntax, invalid request message framing, or deceptive request routing)**."
    },
    {
      "id": 1518114694,
      "user": "seanlip",
      "body": "@prafulbbandre I know what a 400 error is generally. I need to know the specific 400 error logs + stack trace that is occurring here, though. Try investigating the response logs in the console (or in your local server logs) if you can reproduce this. Thanks!"
    },
    {
      "id": 1518116022,
      "user": "prafulbbandre",
      "body": "@seanlip I will give update ASAP."
    },
    {
      "id": 1518709978,
      "user": "prafulbbandre",
      "body": "Hi @seanlip I just tried again to reproduce this issue on testserver and it work fine but on the main site it is still not working.\r\n\r\n**Here are the Stack Trace:**\r\nXHRPUT\r\nhttps://www.oppia.org/createhandler/status/yfHlnMa5UTzK\r\n[HTTP/2 400 Bad Request 436ms]\r\n\r\nA\r\nzone.js:3324:27\r\nr/e.prototype.scheduleTask\r\nzone.js:407:29\r\nonScheduleTask\r\nzone.js:294:83\r\nr/e.prototype.scheduleTask\r\nzone.js:400:54\r\nr/t.prototype.scheduleTask\r\nzone.js:231:46\r\nr/t.prototype.scheduleMacroTask\r\nzone.js:254:28\r\nu\r\nzone.js:1183:28\r\nr/</_</<\r\nzone.js:3341:40\r\nr/T/o[i]\r\nzone.js:1501:51\r\nhandle/<\r\nhttp.js:1805:16\r\ne.prototype._trySubscribe\r\nObservable.js:43:24\r\ne.prototype.subscribe\r\nObservable.js:29:21\r\nc\r\ninnerSubscribe.js:89:22\r\nt.prototype._innerSub\r\nswitchMap.js:49:48\r\nt.prototype._next\r\nswitchMap.js:39:13\r\nt.prototype.next\r\nSubscriber.js:53:17\r\nu/</<\r\nsubscribeToPromise.js:7:27\r\nr/e.prototype.invoke\r\nzone.js:386:29\r\nonInvoke\r\ncore.js:28580:32\r\nr/e.prototype.invoke\r\nzone.js:385:35\r\nr/t.prototype.run\r\nzone.js:143:46\r\nr/</C/<\r\nzone.js:891:37\r\nr/e.prototype.invokeTask\r\nzone.js:421:34\r\nonInvokeTask\r\ncore.js:28567:32\r\nr/e.prototype.invokeTask\r\nzone.js:420:39\r\nr/t.prototype.runTask\r\nzone.js:188:50\r\nb\r\nzone.js:601:38\r\nr/t.invokeTask\r\nzone.js:507:24\r\np\r\nzone.js:1671:17\r\nh\r\nzone.js:1697:31\r\n(Async: EventListener.handleEvent) r/H/m/T<\r\nzone.js:1823:46\r\nr/e.prototype.scheduleTask\r\nzone.js:407:29\r\nonScheduleTask\r\nzone.js:294:83\r\nr/e.prototype.scheduleTask\r\nzone.js:400:54\r\nr/t.prototype.scheduleTask\r\nzone.js:231:46\r\nr/t.prototype.scheduleEventTask\r\nzone.js:257:28\r\nr/H/m/N/<\r\nzone.js:1980:36\r\naddEventListener\r\nplatform-browser.js:842:16\r\naddEventListener\r\nplatform-browser.js:394:22\r\nlisten\r\nplatform-browser.js:763:33\r\nlisten\r\nanimations.js:298:29\r\nlisten\r\ncore.js:32823:29\r\nz_\r\ncore.js:30795:49\r\ngE\r\ncore.js:31717:39\r\nwE\r\ncore.js:32067:28\r\nIE\r\ncore.js:31986:12\r\ngE\r\ncore.js:31779:29\r\npE\r\ncore.js:31659:4\r\nuA\r\ncore.js:32634:26\r\nFE\r\ncore.js:32179:11\r\ncreate\r\ncore.js:24207:30\r\ncreate\r\ncore.js:21283:28\r\n_createFromComponent\r\nng-bootstrap.js:5993:48\r\n_getContentRef\r\nng-bootstrap.js:5973:24\r\nopen\r\nng-bootstrap.js:5910:32\r\nopen\r\nng-bootstrap.js:6087:32\r\nopenPublishExplorationModal/<\r\nexploration-save.service.ts:112:20\r\ne\r\nzone.js:913:32\r\nopenPublishExplorationModal\r\nexploration-save.service.ts:111:11\r\nshowPublishExplorationModal/</</<\r\nexploration-save.service.ts:326:19\r\nr/e.prototype.invoke\r\nzone.js:386:29\r\nonInvoke\r\ncore.js:28580:32\r\nr/e.prototype.invoke\r\nzone.js:385:35\r\nr/t.prototype.run\r\nzone.js:143:46\r\nr/</C/<\r\nzone.js:891:37\r\nr/e.prototype.invokeTask\r\nzone.js:421:34\r\nonInvokeTask\r\ncore.js:28567:32\r\nr/e.prototype.invokeTask\r\nzone.js:420:39\r\nr/t.prototype.runTask\r\nzone.js:188:50\r\nb\r\nzone.js:601:38\r\nr/t.invokeTask\r\nzone.js:507:24\r\np\r\nzone.js:1671:17\r\nh\r\nzone.js:1708:35\r\n(Async: EventListener.handleEvent) r/H/m/T<\r\nzone.js:1823:46\r\nr/e.prototype.scheduleTask\r\nzone.js:407:29\r\nonScheduleTask\r\nzone.js:294:83\r\nr/e.prototype.scheduleTask\r\nzone.js:400:54\r\nr/t.prototype.scheduleTask\r\nzone.js:231:46\r\nr/t.prototype.scheduleEventTask\r\nzone.js:257:28\r\nr/H/m/N/<\r\nzone.js:1980:36\r\nhandle/<\r\nhttp.js:1791:16\r\ne.prototype._trySubscribe\r\nObservable.js:43:24\r\ne.prototype.subscribe\r\nObservable.js:29:21\r\nc\r\ninnerSubscribe.js:89:22\r\nt.prototype._innerSub\r\nswitchMap.js:49:48\r\nt.prototype._next\r\nswitchMap.js:39:13\r\nt.prototype.next\r\nSubscriber.js:53:17\r\nu/</<\r\nsubscribeToPromise.js:7:27\r\nr/e.prototype.invoke\r\nzone.js:386:29\r\nonInvoke\r\ncore.js:28580:32\r\nr/e.prototype.invoke\r\nzone.js:385:35\r\nr/t.prototype.run\r\nzone.js:143:46\r\nr/</C/<\r\nzone.js:891:37\r\nr/e.prototype.invokeTask\r\nzone.js:421:34\r\nonInvokeTask\r\ncore.js:28567:32\r\nr/e.prototype.invokeTask\r\nzone.js:420:39\r\nr/t.prototype.runTask\r\nzone.js:188:50\r\nb\r\nzone.js:601:38\r\nr/t.invokeTask\r\nzone.js:507:24\r\np\r\nzone.js:1671:17\r\n\r\n\r\n**Video:**\r\n\r\nhttps://user-images.githubusercontent.com/109658545/233797598-d3744d19-e623-46bc-a03a-8606855c838f.mp4\r\n\r\n"
    },
    {
      "id": 1527438981,
      "user": "seanlip",
      "body": "@prafulbbandre I think the relevant text here is \"The outcome for the state is labelled correct but a destination for the stuck learner is specified\".\r\n\r\nThe fix should be investigating why it is possible for this to happen and adding controls in the UI to ensure that it cannot happen in the frontend. If you check the \"correct answer\" outcome, what does the \"destination for the stuck learner\" look like? That field shouldn't be present in the UI, or should be made null once the \"correct answer\" box is checked."
    },
    {
      "id": 1545267111,
      "user": "Patel-Muhammad",
      "body": "@prafulbbandre this issue is still reproducible\r\n\r\n\r\nhttps://github.com/oppia/oppia/assets/96219910/aad37a5d-6da9-46f9-a010-a2d019ea4f6a\r\n\r\n\r\n\r\n"
    },
    {
      "id": 1741247019,
      "user": "seanlip",
      "body": "Instructions for contributors:\n\nThis looks like an issue with applying validation properly. The frontend UI should be validating the error shown, but it doesn't and so the error \"escapes\" to the backend when the exploration is saved, resulting in a 400 error.\n\nIn order to address this, first try reproducing the issue, and then take a look at core/templates/pages/exploration-editor-page/services/exploration-warnings.service.ts to understand how warnings are implemented. Try and add a new warning to cover this case, and show a screenshot/video to prove that your solution displays that warning when the conditions for it are met, and doesn't display the warning when those conditions are not met."
    },
    {
      "id": 1842548574,
      "user": "xantric",
      "body": "@seanlip is this issue still reproducible? I tried reproducing it on the local dev server but the exploration gets successfully published."
    },
    {
      "id": 1843019257,
      "user": "seanlip",
      "body": "@IshanKamboj Could you please provide a video showing how it works on your dev server, following the steps as closely as possible to @Patel-Muhammad's earlier video a couple of comments above? https://github.com/oppia/oppia/issues/17566#issuecomment-1545267111  Then one of the team members can take a look to verify. Thanks!"
    },
    {
      "id": 1844795848,
      "user": "xantric",
      "body": "@seanlip This is the video, I tried replicating [#17566 comment](https://github.com/oppia/oppia/issues/17566#issuecomment-1545267111) as close as possible.\r\n\r\n\r\nhttps://github.com/oppia/oppia/assets/67258435/880edfff-fa52-4ce7-a29d-8c44df116825\r\n\r\n"
    },
    {
      "id": 1845854873,
      "user": "seanlip",
      "body": "Thanks @IshanKamboj for checking. I can't quite tell whether your exploration actually reproduces the condition since I can't see the answers/responses part, but looking through the thread, the error message reminds me of https://github.com/oppia/oppia/pull/19044.\r\n\r\n@nikitaevg Would you mind taking a look and confirming whether your PR #19044 fixes this issue, please? Thanks!"
    },
    {
      "id": 1859091328,
      "user": "nikitaevg",
      "body": "Looks very much like #19044 should fix it, yes. "
    }
  ],
  "text_context": "# [BUG]: Unable to publish a lesson\n\n### Describe the bug\n\nWhen I clicked on the 'publish' button after creating a lesson, it keeps reading 'publishing' with 3 dots, but gets unpublished. \n\n### Steps To Reproduce\n\nGet access to this lesson\r\nClick on 'publish' button\r\n\n\n### Expected Behavior\n\nLesson gets published\n\n### Screenshots/Videos\n\nhttps://www.loom.com/share/ebb64b2a1b6f4255b9c5a5b587a75918\n\n### What device are you using?\n\nDesktop\n\n### Operating System\n\nWindows\n\n### What browsers are you seeing the problem on?\n\nEdge\n\n### Browser version\n\n 110.0.1587.57\n\n### Additional context\n\n_No response_\n\nResolved.\n\n@seanlip Reopening as i spotted this error on testserver and localserver\n\n@seanlip This is also seen on oppia.org\n\nError seen when publish button is clicked.\r\n\r\n\r\n![Screenshot from 2023-04-19 01-09-37](https://user-images.githubusercontent.com/109658545/232887326-0c28a07c-14b5-4617-9eda-d6fb96f4d776.png)\r\n\n\nThanks, this seems serious. We should get more data about what the 400 error is -- are you able to do that @prafulbbandre?\r\n\r\nAlso @Kebith do you recall how this issue was resolved previously? \n\n@seanlip I will try.\r\n\r\n> Thanks, this seems serious. We should get more data about what the 400 error is -- are you able to do that @prafulbbandre?\r\n> \r\n> Also @Kebith do you recall how this issue was resolved previously?\r\n\r\n\n\n@seanlip The HyperText Transfer Protocol (HTTP) 400 Bad Request response status code indicates that the **server cannot or will not process the request due to something that is perceived to be a client error (for example, malformed request syntax, invalid request message framing, or deceptive request routing)**.\n\n@prafulbbandre I know what a 400 error is generally. I need to know the specific 400 error logs + stack trace that is occurring here, though. Try investigating the response logs in the console (or in your local server logs) if you can reproduce this. Thanks!\n\n@seanlip I will give update ASAP.\n\nHi @seanlip I just tried again to reproduce this issue on testserver and it work fine but on the main site it is still not working.\r\n\r\n**Here are the Stack Trace:**\r\nXHRPUT\r\nhttps://www.oppia.org/createhandler/status/yfHlnMa5UTzK\r\n[HTTP/2 400 Bad Request 436ms]\r\n\r\nA\r\nzone.js:3324:27\r\nr/e.prototype.scheduleTask\r\nzone.js:407:29\r\nonScheduleTask\r\nzone.js:294:83\r\nr/e.prototype.scheduleTask\r\nzone.js:400:54\r\nr/t.prototype.scheduleTask\r\nzone.js:231:46\r\nr/t.prototype.scheduleMacroTask\r\nzone.js:254:28\r\nu\r\nzone.js:1183:28\r\nr/</_</<\r\nzone.js:3341:40\r\nr/T/o[i]\r\nzone.js:1501:51\r\nhandle/<\r\nhttp.js:1805:16\r\ne.prototype._trySubscribe\r\nObservable.js:43:24\r\ne.prototype.subscribe\r\nObservable.js:29:21\r\nc\r\ninnerSubscribe.js:89:22\r\nt.prototype._innerSub\r\nswitchMap.js:49:48\r\nt.prototype._next\r\nswitchMap.js:39:13\r\nt.prototype.next\r\nSubscriber.js:53:17\r\nu/</<\r\nsubscribeToPromise.js:7:27\r\nr/e.prototype.invoke\r\nzone.js:386:29\r\nonInvoke\r\ncore.js:28580:32\r\nr/e.prototype.invoke\r\nzone.js:385:35\r\nr/t.prototype.run\r\nzone.js:143:46\r\nr/</C/<\r\nzone.js:891:37\r\nr/e.prototype.invokeTask\r\nzone.js:421:34\r\nonInvokeTask\r\ncore.js:28567:32\r\nr/e.prototype.invokeTask\r\nzone.js:420:39\r\nr/t.prototype.runTask\r\nzone.js:188:50\r\nb\r\nzone.js:601:38\r\nr/t.invokeTask\r\nzone.js:507:24\r\np\r\nzone.js:1671:17\r\nh\r\nzone.js:1697:31\r\n(Async: EventListener.handleEvent) r/H/m/T<\r\nzone.js:1823:46\r\nr/e.prototype.scheduleTask\r\nzone.js:407:29\r\nonScheduleTask\r\nzone.js:294:83\r\nr/e.prototype.scheduleTask\r\nzone.js:400:54\r\nr/t.prototype.scheduleTask\r\nzone.js:231:46\r\nr/t.prototype.scheduleEventTask\r\nzone.js:257:28\r\nr/H/m/N/<\r\nzone.js:1980:36\r\naddEventListener\r\nplatform-browser.js:842:16\r\naddEventListener\r\nplatform-browser.js:394:22\r\nlisten\r\nplatform-browser.js:763:33\r\nlisten\r\nanimations.js:298:29\r\nlisten\r\ncore.js:32823:29\r\nz_\r\ncore.js:30795:49\r\ngE\r\ncore.js:31717:39\r\nwE\r\ncore.js:32067:28\r\nIE\r\ncore.js:31986:12\r\ngE\r\ncore.js:31779:29\r\npE\r\ncore.js:31659:4\r\nuA\r\ncore.js:32634:26\r\nFE\r\ncore.js:32179:11\r\ncreate\r\ncore.js:24207:30\r\ncreate\r\ncore.js:21283:28\r\n_createFromComponent\r\nng-bootstrap.js:5993:48\r\n_getContentRef\r\nng-bootstrap.js:5973:24\r\nopen\r\nng-bootstrap.js:5910:32\r\nopen\r\nng-bootstrap.js:6087:32\r\nopenPublishExplorationModal/<\r\nexploration-save.service.ts:112:20\r\ne\r\nzone.js:913:32\r\nopenPublishExplorationModal\r\nexploration-save.service.ts:111:11\r\nshowPublishExplorationModal/</</<\r\nexploration-save.service.ts:326:19\r\nr/e.prototype.invoke\r\nzone.js:386:29\r\nonInvoke\r\ncore.js:28580:32\r\nr/e.prototype.invoke\r\nzone.js:385:35\r\nr/t.prototype.run\r\nzone.js:143:46\r\nr/</C/<\r\nzone.js:891:37\r\nr/e.prototype.invokeTask\r\nzone.js:421:34\r\nonInvokeTask\r\ncore.js:28567:32\r\nr/e.prototype.invokeTask\r\nzone.js:420:39\r\nr/t.prototype.runTask\r\nzone.js:188:50\r\nb\r\nzone.js:601:38\r\nr/t.invokeTask\r\nzone.js:507:24\r\np\r\nzone.js:1671:17\r\nh\r\nzone.js:1708:35\r\n(Async: EventListener.handleEvent) r/H/m/T<\r\nzone.js:1823:46\r\nr/e.prototype.scheduleTask\r\nzone.js:407:29\r\nonScheduleTask\r\nzone.js:294:83\r\nr/e.prototype.scheduleTask\r\nzone.js:400:54\r\nr/t.prototype.scheduleTask\r\nzone.js:231:46\r\nr/t.prototype.scheduleEventTask\r\nzone.js:257:28\r\nr/H/m/N/<\r\nzone.js:1980:36\r\nhandle/<\r\nhttp.js:1791:16\r\ne.prototype._trySubscribe\r\nObservable.js:43:24\r\ne.prototype.subscribe\r\nObservable.js:29:21\r\nc\r\ninnerSubscribe.js:89:22\r\nt.prototype._innerSub\r\nswitchMap.js:49:48\r\nt.prototype._next\r\nswitchMap.js:39:13\r\nt.prototype.next\r\nSubscriber.js:53:17\r\nu/</<\r\nsubscribeToPromise.js:7:27\r\nr/e.prototype.invoke\r\nzone.js:386:29\r\nonInvoke\r\ncore.js:28580:32\r\nr/e.prototype.invoke\r\nzone.js:385:35\r\nr/t.prototype.run\r\nzone.js:143:46\r\nr/</C/<\r\nzone.js:891:37\r\nr/e.prototype.invokeTask\r\nzone.js:421:34\r\nonInvokeTask\r\ncore.js:28567:32\r\nr/e.prototype.invokeTask\r\nzone.js:420:39\r\nr/t.prototype.runTask\r\nzone.js:188:50\r\nb\r\nzone.js:601:38\r\nr/t.invokeTask\r\nzone.js:507:24\r\np\r\nzone.js:1671:17\r\n\r\n\r\n**Video:**\r\n\r\nhttps://user-images.githubusercontent.com/109658545/233797598-d3744d19-e623-46bc-a03a-8606855c838f.mp4\r\n\r\n\n\n@prafulbbandre I think the relevant text here is \"The outcome for the state is labelled correct but a destination for the stuck learner is specified\".\r\n\r\nThe fix should be investigating why it is possible for this to happen and adding controls in the UI to ensure that it cannot happen in the frontend. If you check the \"correct answer\" outcome, what does the \"destination for the stuck learner\" look like? That field shouldn't be present in the UI, or should be made null once the \"correct answer\" box is checked.\n\n@prafulbbandre this issue is still reproducible\r\n\r\n\r\nhttps://github.com/oppia/oppia/assets/96219910/aad37a5d-6da9-46f9-a010-a2d019ea4f6a\r\n\r\n\r\n\r\n\n\nInstructions for contributors:\n\nThis looks like an issue with applying validation properly. The frontend UI should be validating the error shown, but it doesn't and so the error \"escapes\" to the backend when the exploration is saved, resulting in a 400 error.\n\nIn order to address this, first try reproducing the issue, and then take a look at core/templates/pages/exploration-editor-page/services/exploration-warnings.service.ts to understand how warnings are implemented. Try and add a new warning to cover this case, and show a screenshot/video to prove that your solution displays that warning when the conditions for it are met, and doesn't display the warning when those conditions are not met.\n\n@seanlip is this issue still reproducible? I tried reproducing it on the local dev server but the exploration gets successfully published.\n\n@IshanKamboj Could you please provide a video showing how it works on your dev server, following the steps as closely as possible to @Patel-Muhammad's earlier video a couple of comments above? https://github.com/oppia/oppia/issues/17566#issuecomment-1545267111  Then one of the team members can take a look to verify. Thanks!\n\n@seanlip This is the video, I tried replicating [#17566 comment](https://github.com/oppia/oppia/issues/17566#issuecomment-1545267111) as close as possible.\r\n\r\n\r\nhttps://github.com/oppia/oppia/assets/67258435/880edfff-fa52-4ce7-a29d-8c44df116825\r\n\r\n\n\nThanks @IshanKamboj for checking. I can't quite tell whether your exploration actually reproduces the condition since I can't see the answers/responses part, but looking through the thread, the error message reminds me of https://github.com/oppia/oppia/pull/19044.\r\n\r\n@nikitaevg Would you mind taking a look and confirming whether your PR #19044 fixes this issue, please? Thanks!\n\nLooks very much like #19044 should fix it, yes. ",
  "pr_link": "https://github.com/oppia/oppia/pull/19044",
  "code_context": [
    {
      "filename": "extensions/interactions/base-interaction-validation.service.ts",
      "content": "// Copyright 2014 The Oppia Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Base validation service for interactions.\n */\n\nimport { downgradeInjectable } from '@angular/upgrade/static';\nimport { Injectable } from '@angular/core';\n\nimport { AnswerGroup } from\n  'domain/exploration/AnswerGroupObjectFactory';\nimport { Outcome } from\n  'domain/exploration/OutcomeObjectFactory';\n\nimport { AppConstants } from 'app.constants';\n\nexport interface Warning {\n  type: string;\n  message: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class baseInteractionValidationService {\n  // 'argNames' is an array of top-level customization argument names (such\n  // as 'chocies') used to verify the basic structure of the input\n  // customization arguments object.\n  requireCustomizationArguments(\n      customizationArguments: {}, argNames: string[]): void {\n    var missingArgs = [];\n\n    for (var i = 0; i < argNames.length; i++) {\n      if (!customizationArguments.hasOwnProperty(argNames[i])) {\n        missingArgs.push(argNames[i]);\n      }\n    }\n    if (missingArgs.length > 0) {\n      if (missingArgs.length === 1) {\n        throw new Error(\n          'Expected customization arguments to have property: ' +\n          missingArgs[0]);\n      } else {\n        throw new Error(\n          'Expected customization arguments to have properties: ' +\n          missingArgs.join(', '));\n      }\n    }\n  }\n\n  getAnswerGroupWarnings(\n      answerGroups: AnswerGroup[], stateName: string): Warning[] {\n    var partialWarningsList = [];\n\n    // This does not check the default outcome.\n    for (var i = 0; i < answerGroups.length; i++) {\n      const answerGroup = answerGroups[i];\n      const groupId = String(i + 1);\n      if (answerGroup.outcome.isConfusing(stateName)) {\n        partialWarningsList.push({\n          type: AppConstants.WARNING_TYPES.ERROR,\n          message: (\n            'Please specify what Oppia should do in Oppia response ' +\n            `${groupId}.`)\n        });\n      }\n      if (answerGroup.outcome.dest === stateName &&\n          answerGroup.outcome.labelledAsCorrect) {\n        partialWarningsList.push({\n          type: AppConstants.WARNING_TYPES.ERROR,\n          message: (\n            `In answer group ${groupId}, self-loops should ` +\n            'not be labelled as correct.')\n        });\n      }\n      if (answerGroup.outcome.labelledAsCorrect &&\n        answerGroup.outcome.destIfReallyStuck !== null) {\n        partialWarningsList.push({\n          type: AppConstants.WARNING_TYPES.ERROR,\n          message: (\n            `The answer group ${groupId} is labelled as 'correct', ` +\n            'but includes a \\'destination for really stuck learners\\'. ' +\n            'The latter is unnecessary and should be removed.')\n        });\n      }\n    }\n    return partialWarningsList;\n  }\n\n  getDefaultOutcomeWarnings(\n      defaultOutcome: Outcome | null, stateName: string): Warning[] {\n    var partialWarningsList = [];\n    if (defaultOutcome && defaultOutcome.isConfusing(stateName)) {\n      partialWarningsList.push({\n        type: AppConstants.WARNING_TYPES.ERROR,\n        message: (\n          'Please add feedback for the user in the [All other answers] ' +\n          'rule.')\n      });\n    }\n    if (defaultOutcome && defaultOutcome.dest === stateName &&\n        defaultOutcome.labelledAsCorrect) {\n      partialWarningsList.push({\n        type: AppConstants.WARNING_TYPES.ERROR,\n        message: (\n          'In the [All other answers] group, self-loops should not be ' +\n          'labelled as correct.')\n      });\n    }\n    return partialWarningsList;\n  }\n\n  getAllOutcomeWarnings(\n      answerGroups: AnswerGroup[], defaultOutcome: Outcome | null,\n      stateName: string): Warning[] {\n    return (\n      this.getAnswerGroupWarnings(answerGroups, stateName).concat(\n        this.getDefaultOutcomeWarnings(defaultOutcome, stateName)));\n  }\n\n  isHTMLEmpty(html: string): boolean {\n    // Fast return.\n    if (html.trim().length === 0) {\n      return true;\n    }\n\n    // Keep track of how many open and close tags there are. For example,\n    // `<strong>` is an open tag and `</strong>` is a close tag. If they\n    // do not have the same frequency, then the HTML content is not empty.\n    // If they have the same frequency, then remove the occurrences from\n    // the string and check if the remaining stripped string is empty.\n\n    const tagsToRemove = [\n      'strong', 'em', 'p', 'ul', 'ol', 'li',\n      'i', 'b', 'br', 'span',\n      'h1', 'h2', 'h3', 'h4', 'h5', 'h6'\n    ];\n\n    for (const tag of tagsToRemove) {\n      const openRegex = new RegExp(`<${tag}>`, 'g');\n      const closeRegex = new RegExp(`</${tag}>`, 'g');\n      const numOpenTags = (html.match(openRegex) || []).length;\n      const numCloseTags = (html.match(closeRegex) || []).length;\n      if (numOpenTags !== numCloseTags) {\n        return false;\n      }\n      html = html.replace(openRegex, '');\n      html = html.replace(closeRegex, '');\n    }\n\n    // Remove special empty characters as well.\n    html = html.replace(/&nbsp;/g, '');\n\n    return html.trim().length === 0;\n  }\n}\n\nangular.module('oppia').factory(\n  'baseInteractionValidationService',\n  downgradeInjectable(baseInteractionValidationService));\n"
    },
    {
      "filename": "extensions/interactions/base-validator.spec.ts",
      "content": "// Copyright 2014 The Oppia Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Unit tests for all interaction validators.\n *\n * NOTE TO DEVELOPERS: Many of the exploration validators simply defer their\n * validation to the baseValidator. As a result, they require no additional\n * testing. You will see some test suites in this file which simply have a\n * single test for the validator along the lines of \"it should be able to\n * perform basic validation.\" These simple tests are to ensure the policy of the\n * validator is to defer validation to the baseValidator, since it has its own\n * tests to ensure it is working properly.\n */\n\nimport { AppConstants } from 'app.constants';\n// TODO(#7222): Remove the following block of unnnecessary imports once\n// interaction validators is upgraded to Angular 8.\nimport { AnswerGroupObjectFactory } from\n  'domain/exploration/AnswerGroupObjectFactory';\nimport { baseInteractionValidationService } from\n  'interactions/base-interaction-validation.service';\nimport { OutcomeObjectFactory } from\n  'domain/exploration/OutcomeObjectFactory';\nimport { UpgradedServices } from 'services/UpgradedServices';\n// ^^^ This block is to be removed.\n\ndescribe('Interaction validator', function() {\n  var bivs, WARNING_TYPES, agof;\n\n  var currentState, otherState, goodOutcomeDest, goodOutcomeFeedback;\n  var badOutcome, goodAnswerGroups;\n  var agof, oof;\n\n  beforeEach(function() {\n    angular.mock.module('oppia');\n  });\n  beforeEach(angular.mock.module('oppia', function($provide) {\n    var ugs = new UpgradedServices();\n    for (let [key, value] of Object.entries(ugs.getUpgradedServices())) {\n      $provide.value(key, value);\n    }\n  }));\n  beforeEach(angular.mock.module('oppia', function($provide) {\n    $provide.value(\n      'AnswerGroupObjectFactory', new AnswerGroupObjectFactory(\n        new OutcomeObjectFactory()));\n    $provide.value(\n      'baseInteractionValidationService',\n      new baseInteractionValidationService());\n    $provide.value(\n      'OutcomeObjectFactory', new OutcomeObjectFactory());\n  }));\n\n  beforeEach(angular.mock.inject(function($injector, $rootScope) {\n    bivs = $injector.get('baseInteractionValidationService');\n    WARNING_TYPES = AppConstants.WARNING_TYPES;\n    agof = $injector.get('AnswerGroupObjectFactory');\n    oof = $injector.get('OutcomeObjectFactory');\n\n    currentState = 'First State';\n    otherState = 'Second State';\n    goodOutcomeDest = oof.createFromBackendDict({\n      dest: otherState,\n      dest_if_really_stuck: null,\n      feedback: {\n        html: '',\n        audio_translations: {}\n      },\n      labelled_as_correct: false,\n      param_changes: [],\n      refresher_exploration_id: null,\n      missing_prerequisite_skill_id: null\n    });\n    goodOutcomeFeedback = oof.createFromBackendDict({\n      dest: currentState,\n      dest_if_really_stuck: null,\n      feedback: {\n        html: 'Feedback',\n        audio_translations: {}\n      },\n      labelled_as_correct: false,\n      param_changes: [],\n      refresher_exploration_id: null,\n      missing_prerequisite_skill_id: null\n    });\n    badOutcome = oof.createFromBackendDict({\n      dest: currentState,\n      dest_if_really_stuck: null,\n      feedback: {\n        html: '',\n        audio_translations: {}\n      },\n      labelled_as_correct: false,\n      param_changes: [],\n      refresher_exploration_id: null,\n      missing_prerequisite_skill_id: null\n    });\n\n    goodAnswerGroups = [\n      agof.createNew([], goodOutcomeDest, false, null),\n      agof.createNew([], goodOutcomeFeedback, false, null)\n    ];\n  }));\n\n  describe('baseValidator', function() {\n    it('should have no warnings for good answer groups with no ' +\n        'confusing outcomes', function() {\n      var warnings = bivs.getAnswerGroupWarnings(\n        goodAnswerGroups, currentState);\n      expect(warnings).toEqual([]);\n    });\n\n    it('should have a warning for an answer group with a confusing outcome',\n      function() {\n        var answerGroups = [\n          agof.createNew([], goodOutcomeDest, false, null),\n          agof.createNew([], badOutcome, false, null),\n          agof.createNew([], goodOutcomeFeedback, false, null)\n        ];\n        var warnings = bivs.getAnswerGroupWarnings(answerGroups, currentState);\n        expect(warnings).toEqual([{\n          type: WARNING_TYPES.ERROR,\n          message: 'Please specify what Oppia should do in Oppia response 2.'\n        }]);\n      }\n    );\n\n    it('should have a warning for an answer group with a self-loop labelled' +\n    ' as correct', function() {\n      goodOutcomeFeedback.labelledAsCorrect = true;\n      var answerGroups = [\n        agof.createNew([], goodOutcomeFeedback, false, null)\n      ];\n      var warnings = bivs.getAnswerGroupWarnings(answerGroups, currentState);\n      expect(warnings).toEqual([{\n        type: WARNING_TYPES.ERROR,\n        message:\n            'In answer group 1, self-loops should not be labelled as correct.'\n      }]);\n    });\n\n    it('should have a warning for a correct answer group with destIfStuck',\n      function() {\n        goodOutcomeDest.labelledAsCorrect = true;\n        goodOutcomeDest.destIfReallyStuck = 'destIfReallyStuck';\n        const answerGroups = [\n          agof.createNew([], goodOutcomeDest, false, null)\n        ];\n        const warnings = bivs.getAnswerGroupWarnings(\n          answerGroups, currentState);\n        expect(warnings).toEqual([{\n          type: WARNING_TYPES.ERROR,\n          message:\n              'The answer group 1 is labelled as \\'correct\\', ' +\n              'but includes a \\'destination for really stuck learners\\'. ' +\n              'The latter is unnecessary and should be removed.'\n        }]);\n      }\n    );\n\n    it('should not have any warnings for a non-confusing default outcome',\n      function() {\n        var warnings = bivs.getDefaultOutcomeWarnings(\n          goodOutcomeDest, currentState);\n        expect(warnings).toEqual([]);\n\n        warnings = bivs.getDefaultOutcomeWarnings(\n          goodOutcomeFeedback, currentState);\n        expect(warnings).toEqual([]);\n      }\n    );\n\n    it('should have a warning for a confusing default outcome', function() {\n      var warnings = bivs.getDefaultOutcomeWarnings(badOutcome, currentState);\n      expect(warnings).toEqual([{\n        type: WARNING_TYPES.ERROR,\n        message: 'Please add feedback for the user in the [All other ' +\n          'answers] rule.'\n      }]);\n    });\n\n    it('should have a warning for a default outcome with a self-loop' +\n    ' labelled as correct', function() {\n      goodOutcomeFeedback.labelledAsCorrect = true;\n      var warnings = bivs.getDefaultOutcomeWarnings(\n        goodOutcomeFeedback, currentState);\n      expect(warnings).toEqual([{\n        type: WARNING_TYPES.ERROR,\n        message: (\n          'In the [All other answers] group, self-loops should not be ' +\n          'labelled as correct.')\n      }]);\n    });\n\n    it('should not have any warnings for no answer groups and a null default ' +\n        'outcome.', function() {\n      var warnings = bivs.getAllOutcomeWarnings([], null, currentState);\n      expect(warnings).toEqual([]);\n    });\n\n    it('should be able to concatenate warnings for both answer groups and ' +\n        'the default outcome', function() {\n      var badAnswerGroups = [\n        agof.createNew([], goodOutcomeDest, false, null),\n        agof.createNew([], badOutcome, false, null),\n        agof.createNew([], badOutcome, false, null)\n      ];\n      var warnings = bivs.getAllOutcomeWarnings(\n        badAnswerGroups, badOutcome, currentState);\n      expect(warnings).toEqual([{\n        type: WARNING_TYPES.ERROR,\n        message: 'Please specify what Oppia should do in Oppia response 2.'\n      }, {\n        type: WARNING_TYPES.ERROR,\n        message: 'Please specify what Oppia should do in Oppia response 3.'\n      }, {\n        type: WARNING_TYPES.ERROR,\n        message: (\n          'Please add feedback for the user in the [All other answers] rule.')\n      }\n      ]);\n    });\n  });\n\n  describe('customizationValidator', function() {\n    it('should not throw for no arguments', function() {\n      bivs.requireCustomizationArguments({}, []);\n    });\n\n    it('should throw a warning for a missing top-level field', function() {\n      expect(function() {\n        bivs.requireCustomizationArguments({}, ['levelone']);\n      }).toThrowError(\n        'Expected customization arguments to have property: levelone'\n      );\n    });\n\n    it('should throw warnings for multiple missing top-level fields',\n      function() {\n        var expectedArgs = ['first', 'second'];\n        expect(function() {\n          bivs.requireCustomizationArguments({}, expectedArgs);\n        }).toThrowError(\n          'Expected customization arguments to have properties: first, second'\n        );\n      }\n    );\n  });\n\n  describe('HTMLValidator', function() {\n    it('should categorize completely empty string as empty', function() {\n      const html = '   ';\n\n      expect(bivs.isHTMLEmpty(html)).toBeTrue();\n    });\n\n    it('should categorize balanced HTML tags as empty if the remaining ' +\n        'string is empty', function() {\n      const html = '  <strong>   <em>  </em></strong>';\n\n      expect(bivs.isHTMLEmpty(html)).toBeTrue();\n    });\n\n    it('should categorize balanced HTML tags as not empty if the remaining ' +\n        'string is not empty', function() {\n      const html = '  <strong>  info <em>  </em></strong>';\n\n      expect(bivs.isHTMLEmpty(html)).toBeFalse();\n    });\n\n    it('should categorize imbalanced HTML tags as not empty', function() {\n      const html = '<strong>';\n\n      expect(bivs.isHTMLEmpty(html)).toBeFalse();\n    });\n\n    it('should categorize unfilled list as empty', function() {\n      const html = '<ul><li>&nbsp;</li><li>    <strong>  </strong></li></ul>';\n\n      expect(bivs.isHTMLEmpty(html)).toBeTrue();\n    });\n  });\n});\n"
    }
  ],
  "questions": [
    "@IshanKamboj Could you please provide a video showing how it works on your dev server, following the steps as closely as possible to @Patel-Muhammad's earlier video a couple of comments above? https://github.com/oppia/oppia/issues/17566#issuecomment-1545267111  Then one of the team members can take a look to verify. Thanks!"
  ],
  "golden_answers": [
    "@seanlip This is the video, I tried replicating [#17566 comment](https://github.com/oppia/oppia/issues/17566#issuecomment-1545267111) as close as possible.\r\n\r\n\r\nhttps://github.com/oppia/oppia/assets/67258435/880edfff-fa52-4ce7-a29d-8c44df116825"
  ],
  "questions_generated": [
    "What could be the reasons for the 'publish' button to remain in a 'publishing' state without actually publishing the lesson?",
    "How does the baseInteractionValidationService ensure that all required customization arguments are present?",
    "What debugging steps would you take to identify the cause of the 400 error during the lesson publishing process?",
    "What role does the 'downgradeInjectable' function play in the context of the oppia_oppia repository?",
    "Why might the issue not reproduce on the test server but still occur on the main site?",
    "How might the 'requireCustomizationArguments' method affect the lesson publishing process if not correctly implemented?"
  ],
  "golden_answers_generated": [
    "The issue could be due to a client-side error, such as malformed request syntax or invalid request message framing, as indicated by the 400 Bad Request error. This could result from incorrect data being sent to the server or issues within the client-side code handling the publishing process.",
    "The baseInteractionValidationService uses the method 'requireCustomizationArguments' to check if all required top-level customization argument names are present in the provided object. It iterates over the required argument names and checks if each is a property of the customizationArguments object. If any are missing, it throws an error indicating which properties are missing.",
    "To debug the 400 error, one should first check the browser's console for detailed request and response logs to identify any malformed data or incorrect endpoints. Next, reviewing the server logs for specific error messages or stack traces can provide insights. Testing the process on different environments (e.g., local server vs. main site) can help isolate the issue. Finally, reviewing recent changes in the codebase related to publishing functionality could reveal potential causes.",
    "The 'downgradeInjectable' function is used to make Angular services available in AngularJS code. This is part of the migration strategy from AngularJS to Angular, allowing the newer Angular services to be used within the existing AngularJS components, facilitating a smoother transition between the frameworks.",
    "Discrepancies between the test server and the main site could be due to differences in the environment configuration, data sets, or code versions. The test server might have fixes or features that haven't been deployed to the main site yet, or there could be external factors affecting the main site, such as network issues or integration with other services.",
    "If 'requireCustomizationArguments' is not correctly implemented, it could result in the lesson publishing process failing due to missing or incorrect customization arguments. This could lead to incomplete data being sent to the server, causing errors like the 400 Bad Request, and prevent the lesson from being successfully published."
  ]
}